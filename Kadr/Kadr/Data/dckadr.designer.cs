#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kadr.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="kadr")]
	public partial class dckadrDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartmentType(DepartmentType instance);
    partial void UpdateDepartmentType(DepartmentType instance);
    partial void DeleteDepartmentType(DepartmentType instance);
    partial void InsertDepartmentTimeNorm(DepartmentTimeNorm instance);
    partial void UpdateDepartmentTimeNorm(DepartmentTimeNorm instance);
    partial void DeleteDepartmentTimeNorm(DepartmentTimeNorm instance);
    partial void InsertFinancingSource(FinancingSource instance);
    partial void UpdateFinancingSource(FinancingSource instance);
    partial void DeleteFinancingSource(FinancingSource instance);
    partial void InsertPlanStaffSalary(PlanStaffSalary instance);
    partial void UpdatePlanStaffSalary(PlanStaffSalary instance);
    partial void DeletePlanStaffSalary(PlanStaffSalary instance);
    partial void InsertPrikaz(Prikaz instance);
    partial void UpdatePrikaz(Prikaz instance);
    partial void DeletePrikaz(Prikaz instance);
    partial void InsertPrikazType(PrikazType instance);
    partial void UpdatePrikazType(PrikazType instance);
    partial void DeletePrikazType(PrikazType instance);
    partial void InsertPrikazSuperType(PrikazSuperType instance);
    partial void UpdatePrikazSuperType(PrikazSuperType instance);
    partial void DeletePrikazSuperType(PrikazSuperType instance);
    partial void InsertPKGroup(PKGroup instance);
    partial void UpdatePKGroup(PKGroup instance);
    partial void DeletePKGroup(PKGroup instance);
    partial void InsertPKCategorySalary(PKCategorySalary instance);
    partial void UpdatePKCategorySalary(PKCategorySalary instance);
    partial void DeletePKCategorySalary(PKCategorySalary instance);
    partial void InsertWorkSuperType(WorkSuperType instance);
    partial void UpdateWorkSuperType(WorkSuperType instance);
    partial void DeleteWorkSuperType(WorkSuperType instance);
    partial void InsertEducDocument(EducDocument instance);
    partial void UpdateEducDocument(EducDocument instance);
    partial void DeleteEducDocument(EducDocument instance);
    partial void InsertEmployeeRank(EmployeeRank instance);
    partial void UpdateEmployeeRank(EmployeeRank instance);
    partial void DeleteEmployeeRank(EmployeeRank instance);
    partial void InsertEducDocumentType(EducDocumentType instance);
    partial void UpdateEducDocumentType(EducDocumentType instance);
    partial void DeleteEducDocumentType(EducDocumentType instance);
    partial void InsertEmployeeDegree(EmployeeDegree instance);
    partial void UpdateEmployeeDegree(EmployeeDegree instance);
    partial void DeleteEmployeeDegree(EmployeeDegree instance);
    partial void InsertSemPol(SemPol instance);
    partial void UpdateSemPol(SemPol instance);
    partial void DeleteSemPol(SemPol instance);
    partial void InsertScienceType(ScienceType instance);
    partial void UpdateScienceType(ScienceType instance);
    partial void DeleteScienceType(ScienceType instance);
    partial void InsertRank(Rank instance);
    partial void UpdateRank(Rank instance);
    partial void DeleteRank(Rank instance);
    partial void InsertDegree(Degree instance);
    partial void UpdateDegree(Degree instance);
    partial void DeleteDegree(Degree instance);
    partial void InsertGrazd(Grazd instance);
    partial void UpdateGrazd(Grazd instance);
    partial void DeleteGrazd(Grazd instance);
    partial void InsertFundingCenter(FundingCenter instance);
    partial void UpdateFundingCenter(FundingCenter instance);
    partial void DeleteFundingCenter(FundingCenter instance);
    partial void InsertFactStaffReplacementReason(FactStaffReplacementReason instance);
    partial void UpdateFactStaffReplacementReason(FactStaffReplacementReason instance);
    partial void DeleteFactStaffReplacementReason(FactStaffReplacementReason instance);
    partial void InsertBonusPlanStaff(BonusPlanStaff instance);
    partial void UpdateBonusPlanStaff(BonusPlanStaff instance);
    partial void DeleteBonusPlanStaff(BonusPlanStaff instance);
    partial void InsertBonusMeasure(BonusMeasure instance);
    partial void UpdateBonusMeasure(BonusMeasure instance);
    partial void DeleteBonusMeasure(BonusMeasure instance);
    partial void InsertBonusPost(BonusPost instance);
    partial void UpdateBonusPost(BonusPost instance);
    partial void DeleteBonusPost(BonusPost instance);
    partial void InsertBonusFactStaff(BonusFactStaff instance);
    partial void UpdateBonusFactStaff(BonusFactStaff instance);
    partial void DeleteBonusFactStaff(BonusFactStaff instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertTimeSheet(TimeSheet instance);
    partial void UpdateTimeSheet(TimeSheet instance);
    partial void DeleteTimeSheet(TimeSheet instance);
    partial void InsertOK_Otpuskvid(OK_Otpuskvid instance);
    partial void UpdateOK_Otpuskvid(OK_Otpuskvid instance);
    partial void DeleteOK_Otpuskvid(OK_Otpuskvid instance);
    partial void InsertBonusReport(BonusReport instance);
    partial void UpdateBonusReport(BonusReport instance);
    partial void DeleteBonusReport(BonusReport instance);
    partial void InsertBonusReportColumn(BonusReportColumn instance);
    partial void UpdateBonusReportColumn(BonusReportColumn instance);
    partial void DeleteBonusReportColumn(BonusReportColumn instance);
    partial void InsertWorkShedule(WorkShedule instance);
    partial void UpdateWorkShedule(WorkShedule instance);
    partial void DeleteWorkShedule(WorkShedule instance);
    partial void InsertTimeSheetDayState(TimeSheetDayState instance);
    partial void UpdateTimeSheetDayState(TimeSheetDayState instance);
    partial void DeleteTimeSheetDayState(TimeSheetDayState instance);
    partial void InsertSalaryKoeff(SalaryKoeff instance);
    partial void UpdateSalaryKoeff(SalaryKoeff instance);
    partial void DeleteSalaryKoeff(SalaryKoeff instance);
    partial void InsertWorkType(WorkType instance);
    partial void UpdateWorkType(WorkType instance);
    partial void DeleteWorkType(WorkType instance);
    partial void InsertFactStaffReplacement(FactStaffReplacement instance);
    partial void UpdateFactStaffReplacement(FactStaffReplacement instance);
    partial void DeleteFactStaffReplacement(FactStaffReplacement instance);
    partial void InsertPostType(PostType instance);
    partial void UpdatePostType(PostType instance);
    partial void DeletePostType(PostType instance);
    partial void InsertDepartmentFund(DepartmentFund instance);
    partial void UpdateDepartmentFund(DepartmentFund instance);
    partial void DeleteDepartmentFund(DepartmentFund instance);
    partial void InsertPKCategory(PKCategory instance);
    partial void UpdatePKCategory(PKCategory instance);
    partial void DeletePKCategory(PKCategory instance);
    partial void InsertFactStaffHistory(FactStaffHistory instance);
    partial void UpdateFactStaffHistory(FactStaffHistory instance);
    partial void DeleteFactStaffHistory(FactStaffHistory instance);
    partial void InsertFactStaffMonthHour(FactStaffMonthHour instance);
    partial void UpdateFactStaffMonthHour(FactStaffMonthHour instance);
    partial void DeleteFactStaffMonthHour(FactStaffMonthHour instance);
    partial void InsertCategoryVPO(CategoryVPO instance);
    partial void UpdateCategoryVPO(CategoryVPO instance);
    partial void DeleteCategoryVPO(CategoryVPO instance);
    partial void InsertCategoryZP(CategoryZP instance);
    partial void UpdateCategoryZP(CategoryZP instance);
    partial void DeleteCategoryZP(CategoryZP instance);
    partial void InsertOKVED(OKVED instance);
    partial void UpdateOKVED(OKVED instance);
    partial void DeleteOKVED(OKVED instance);
    partial void InsertFactStaff(FactStaff instance);
    partial void UpdateFactStaff(FactStaff instance);
    partial void DeleteFactStaff(FactStaff instance);
    partial void InsertDep(Dep instance);
    partial void UpdateDep(Dep instance);
    partial void DeleteDep(Dep instance);
    partial void InsertBonusType(BonusType instance);
    partial void UpdateBonusType(BonusType instance);
    partial void DeleteBonusType(BonusType instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertPostGroup(PostGroup instance);
    partial void UpdatePostGroup(PostGroup instance);
    partial void DeletePostGroup(PostGroup instance);
    partial void InsertBonusSuperType(BonusSuperType instance);
    partial void UpdateBonusSuperType(BonusSuperType instance);
    partial void DeleteBonusSuperType(BonusSuperType instance);
    partial void InsertGlobalPrikaz(GlobalPrikaz instance);
    partial void UpdateGlobalPrikaz(GlobalPrikaz instance);
    partial void DeleteGlobalPrikaz(GlobalPrikaz instance);
    partial void InsertBonusHistory(BonusHistory instance);
    partial void UpdateBonusHistory(BonusHistory instance);
    partial void DeleteBonusHistory(BonusHistory instance);
    partial void InsertBonus(Bonus instance);
    partial void UpdateBonus(Bonus instance);
    partial void DeleteBonus(Bonus instance);
    partial void InsertPlanStaff(PlanStaff instance);
    partial void UpdatePlanStaff(PlanStaff instance);
    partial void DeletePlanStaff(PlanStaff instance);
    partial void InsertPlanStaffHistory(PlanStaffHistory instance);
    partial void UpdatePlanStaffHistory(PlanStaffHistory instance);
    partial void DeletePlanStaffHistory(PlanStaffHistory instance);
    partial void InsertOK_Otpusk(OK_Otpusk instance);
    partial void UpdateOK_Otpusk(OK_Otpusk instance);
    partial void DeleteOK_Otpusk(OK_Otpusk instance);
    partial void InsertFactStaffPrikaz(FactStaffPrikaz instance);
    partial void UpdateFactStaffPrikaz(FactStaffPrikaz instance);
    partial void DeleteFactStaffPrikaz(FactStaffPrikaz instance);
    partial void InsertBusinessTrip(BusinessTrip instance);
    partial void UpdateBusinessTrip(BusinessTrip instance);
    partial void DeleteBusinessTrip(BusinessTrip instance);
    partial void InsertBusinessTripRegionType(BusinessTripRegionType instance);
    partial void UpdateBusinessTripRegionType(BusinessTripRegionType instance);
    partial void DeleteBusinessTripRegionType(BusinessTripRegionType instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertDepartmentHistory(DepartmentHistory instance);
    partial void UpdateDepartmentHistory(DepartmentHistory instance);
    partial void DeleteDepartmentHistory(DepartmentHistory instance);
    partial void InsertRegionType(RegionType instance);
    partial void UpdateRegionType(RegionType instance);
    partial void DeleteRegionType(RegionType instance);
    partial void InsertTimeSheetFSWorkingDay(TimeSheetFSWorkingDay instance);
    partial void UpdateTimeSheetFSWorkingDay(TimeSheetFSWorkingDay instance);
    partial void DeleteTimeSheetFSWorkingDay(TimeSheetFSWorkingDay instance);
    #endregion
		
		public dckadrDataContext() : 
				base(global::Kadr.Properties.Settings.Default.kadrConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dckadrDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dckadrDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dckadrDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dckadrDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DepartmentType> DepartmentTypes
		{
			get
			{
				return this.GetTable<DepartmentType>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentTimeNorm> DepartmentTimeNorms
		{
			get
			{
				return this.GetTable<DepartmentTimeNorm>();
			}
		}
		
		public System.Data.Linq.Table<FinancingSource> FinancingSources
		{
			get
			{
				return this.GetTable<FinancingSource>();
			}
		}
		
		public System.Data.Linq.Table<PlanStaffSalary> PlanStaffSalaries
		{
			get
			{
				return this.GetTable<PlanStaffSalary>();
			}
		}
		
		public System.Data.Linq.Table<Prikaz> Prikazs
		{
			get
			{
				return this.GetTable<Prikaz>();
			}
		}
		
		public System.Data.Linq.Table<PrikazType> PrikazTypes
		{
			get
			{
				return this.GetTable<PrikazType>();
			}
		}
		
		public System.Data.Linq.Table<PrikazSuperType> PrikazSuperTypes
		{
			get
			{
				return this.GetTable<PrikazSuperType>();
			}
		}
		
		public System.Data.Linq.Table<PKGroup> PKGroups
		{
			get
			{
				return this.GetTable<PKGroup>();
			}
		}
		
		public System.Data.Linq.Table<PKCategorySalary> PKCategorySalaries
		{
			get
			{
				return this.GetTable<PKCategorySalary>();
			}
		}
		
		public System.Data.Linq.Table<WorkSuperType> WorkSuperTypes
		{
			get
			{
				return this.GetTable<WorkSuperType>();
			}
		}
		
		public System.Data.Linq.Table<EducDocument> EducDocuments
		{
			get
			{
				return this.GetTable<EducDocument>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeRank> EmployeeRanks
		{
			get
			{
				return this.GetTable<EmployeeRank>();
			}
		}
		
		public System.Data.Linq.Table<EducDocumentType> EducDocumentTypes
		{
			get
			{
				return this.GetTable<EducDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDegree> EmployeeDegrees
		{
			get
			{
				return this.GetTable<EmployeeDegree>();
			}
		}
		
		public System.Data.Linq.Table<SemPol> SemPols
		{
			get
			{
				return this.GetTable<SemPol>();
			}
		}
		
		public System.Data.Linq.Table<ScienceType> ScienceTypes
		{
			get
			{
				return this.GetTable<ScienceType>();
			}
		}
		
		public System.Data.Linq.Table<Rank> Ranks
		{
			get
			{
				return this.GetTable<Rank>();
			}
		}
		
		public System.Data.Linq.Table<Degree> Degrees
		{
			get
			{
				return this.GetTable<Degree>();
			}
		}
		
		public System.Data.Linq.Table<Grazd> Grazds
		{
			get
			{
				return this.GetTable<Grazd>();
			}
		}
		
		public System.Data.Linq.Table<FundingCenter> FundingCenters
		{
			get
			{
				return this.GetTable<FundingCenter>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffReplacementReason> FactStaffReplacementReasons
		{
			get
			{
				return this.GetTable<FactStaffReplacementReason>();
			}
		}
		
		public System.Data.Linq.Table<BonusPlanStaff> BonusPlanStaffs
		{
			get
			{
				return this.GetTable<BonusPlanStaff>();
			}
		}
		
		public System.Data.Linq.Table<BonusMeasure> BonusMeasures
		{
			get
			{
				return this.GetTable<BonusMeasure>();
			}
		}
		
		public System.Data.Linq.Table<BonusPost> BonusPosts
		{
			get
			{
				return this.GetTable<BonusPost>();
			}
		}
		
		public System.Data.Linq.Table<BonusFactStaff> BonusFactStaffs
		{
			get
			{
				return this.GetTable<BonusFactStaff>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheet> TimeSheets
		{
			get
			{
				return this.GetTable<TimeSheet>();
			}
		}
		
		public System.Data.Linq.Table<OK_Otpuskvid> OK_Otpuskvids
		{
			get
			{
				return this.GetTable<OK_Otpuskvid>();
			}
		}
		
		public System.Data.Linq.Table<BonusReport> BonusReports
		{
			get
			{
				return this.GetTable<BonusReport>();
			}
		}
		
		public System.Data.Linq.Table<BonusReportColumn> BonusReportColumns
		{
			get
			{
				return this.GetTable<BonusReportColumn>();
			}
		}
		
		public System.Data.Linq.Table<WorkShedule> WorkShedules
		{
			get
			{
				return this.GetTable<WorkShedule>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetDayState> TimeSheetDayStates
		{
			get
			{
				return this.GetTable<TimeSheetDayState>();
			}
		}
		
		public System.Data.Linq.Table<SalaryKoeff> SalaryKoeffs
		{
			get
			{
				return this.GetTable<SalaryKoeff>();
			}
		}
		
		public System.Data.Linq.Table<WorkType> WorkTypes
		{
			get
			{
				return this.GetTable<WorkType>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffReplacement> FactStaffReplacements
		{
			get
			{
				return this.GetTable<FactStaffReplacement>();
			}
		}
		
		public System.Data.Linq.Table<PostType> PostTypes
		{
			get
			{
				return this.GetTable<PostType>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentFund> DepartmentFunds
		{
			get
			{
				return this.GetTable<DepartmentFund>();
			}
		}
		
		public System.Data.Linq.Table<PKCategory> PKCategories
		{
			get
			{
				return this.GetTable<PKCategory>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffHistory> FactStaffHistories
		{
			get
			{
				return this.GetTable<FactStaffHistory>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffMonthHour> FactStaffMonthHours
		{
			get
			{
				return this.GetTable<FactStaffMonthHour>();
			}
		}
		
		public System.Data.Linq.Table<CategoryVPO> CategoryVPOs
		{
			get
			{
				return this.GetTable<CategoryVPO>();
			}
		}
		
		public System.Data.Linq.Table<CategoryZP> CategoryZPs
		{
			get
			{
				return this.GetTable<CategoryZP>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffCurrentMainData> FactStaffCurrentMainDatas
		{
			get
			{
				return this.GetTable<FactStaffCurrentMainData>();
			}
		}
		
		public System.Data.Linq.Table<OKVED> OKVEDs
		{
			get
			{
				return this.GetTable<OKVED>();
			}
		}
		
		public System.Data.Linq.Table<FactStaff> FactStaffs
		{
			get
			{
				return this.GetTable<FactStaff>();
			}
		}
		
		public System.Data.Linq.Table<Dep> Deps
		{
			get
			{
				return this.GetTable<Dep>();
			}
		}
		
		public System.Data.Linq.Table<BonusType> BonusTypes
		{
			get
			{
				return this.GetTable<BonusType>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<PostGroup> PostGroups
		{
			get
			{
				return this.GetTable<PostGroup>();
			}
		}
		
		public System.Data.Linq.Table<BonusSuperType> BonusSuperTypes
		{
			get
			{
				return this.GetTable<BonusSuperType>();
			}
		}
		
		public System.Data.Linq.Table<GlobalPrikaz> GlobalPrikazs
		{
			get
			{
				return this.GetTable<GlobalPrikaz>();
			}
		}
		
		public System.Data.Linq.Table<BonusHistory> BonusHistories
		{
			get
			{
				return this.GetTable<BonusHistory>();
			}
		}
		
		public System.Data.Linq.Table<Bonus> Bonus
		{
			get
			{
				return this.GetTable<Bonus>();
			}
		}
		
		public System.Data.Linq.Table<PlanStaff> PlanStaffs
		{
			get
			{
				return this.GetTable<PlanStaff>();
			}
		}
		
		public System.Data.Linq.Table<PlanStaffHistory> PlanStaffHistories
		{
			get
			{
				return this.GetTable<PlanStaffHistory>();
			}
		}
		
		public System.Data.Linq.Table<OK_Otpusk> OK_Otpusks
		{
			get
			{
				return this.GetTable<OK_Otpusk>();
			}
		}
		
		public System.Data.Linq.Table<FactStaffPrikaz> FactStaffPrikazs
		{
			get
			{
				return this.GetTable<FactStaffPrikaz>();
			}
		}
		
		public System.Data.Linq.Table<BusinessTrip> BusinessTrips
		{
			get
			{
				return this.GetTable<BusinessTrip>();
			}
		}
		
		public System.Data.Linq.Table<BusinessTripRegionType> BusinessTripRegionTypes
		{
			get
			{
				return this.GetTable<BusinessTripRegionType>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentHistory> DepartmentHistories
		{
			get
			{
				return this.GetTable<DepartmentHistory>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<RegionType> RegionTypes
		{
			get
			{
				return this.GetTable<RegionType>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetFSWorkingDay> TimeSheetFSWorkingDays
		{
			get
			{
				return this.GetTable<TimeSheetFSWorkingDay>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TransferFactStaff")]
		public int TransferFactStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idOldFactStaff, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idNewPlanStaff, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idTransferPrikaz, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransferData", DbType="DateTime")] System.Nullable<System.DateTime> transferData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransferWithBonus", DbType="Bit")] System.Nullable<bool> transferWithBonus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idOldFactStaff, idNewPlanStaff, idTransferPrikaz, transferData, transferWithBonus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFullSubDepartments", IsComposable=true)]
		public IQueryable<GetFullSubDepartmentsResult> GetFullSubDepartments([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idManagerDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="DateTime")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="DateTime")] System.Nullable<System.DateTime> periodEnd)
		{
			return this.CreateMethodCallQuery<GetFullSubDepartmentsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idManagerDepartment, periodBegin, periodEnd);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStaffCountForHour", IsComposable=true)]
		public System.Nullable<decimal> GetStaffCountForHour([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idFinancingSource, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HourCount", DbType="Decimal(10,2)")] System.Nullable<decimal> hourCount)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDepartment, idFinancingSource, hourCount).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStaffErrorsByPeriod", IsComposable=true)]
		public IQueryable<GetStaffErrorsByPeriodResult> GetStaffErrorsByPeriod([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="Date")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="Date")] System.Nullable<System.DateTime> periodEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WithSubDeps", DbType="Bit")] System.Nullable<bool> withSubDeps)
		{
			return this.CreateMethodCallQuery<GetStaffErrorsByPeriodResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDepartment, periodBegin, periodEnd, withSubDeps);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubDepartmentsWithPeriod", IsComposable=true)]
		public IQueryable<GetSubDepartmentsWithPeriodResult> GetSubDepartmentsWithPeriod([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idManagerDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="DateTime")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="DateTime")] System.Nullable<System.DateTime> periodEnd)
		{
			return this.CreateMethodCallQuery<GetSubDepartmentsWithPeriodResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idManagerDepartment, periodBegin, periodEnd);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBonusByBonusTypeForProlong", IsComposable=true)]
		public IQueryable<GetBonusByBonusTypeForProlongResult> GetBonusByBonusTypeForProlong([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idBonusType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="Date")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="Date")] System.Nullable<System.DateTime> periodEnd)
		{
			return this.CreateMethodCallQuery<GetBonusByBonusTypeForProlongResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idBonusType, periodBegin, periodEnd);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFactStaffForTimeSheet", IsComposable=true)]
		public IQueryable<GetFactStaffForTimeSheetResult> GetFactStaffForTimeSheet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodBegin", DbType="Date")] System.Nullable<System.DateTime> periodBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodEnd", DbType="Date")] System.Nullable<System.DateTime> periodEnd)
		{
			return this.CreateMethodCallQuery<GetFactStaffForTimeSheetResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodBegin, periodEnd);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentType")]
	public partial class DepartmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DepartmentTypeName;
		
		private EntitySet<Dep> _Deps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDepartmentTypeNameChanging(string value);
    partial void OnDepartmentTypeNameChanged();
    #endregion
		
		public DepartmentType()
		{
			this._Deps = new EntitySet<Dep>(new Action<Dep>(this.attach_Deps), new Action<Dep>(this.detach_Deps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentTypeName
		{
			get
			{
				return this._DepartmentTypeName;
			}
			set
			{
				if ((this._DepartmentTypeName != value))
				{
					this.OnDepartmentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentTypeName = value;
					this.SendPropertyChanged("DepartmentTypeName");
					this.OnDepartmentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentType_Dep", Storage="_Deps", ThisKey="id", OtherKey="idDepartmentType")]
		public EntitySet<Dep> Deps
		{
			get
			{
				return this._Deps;
			}
			set
			{
				this._Deps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentType = this;
		}
		
		private void detach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentTimeNorm")]
	public partial class DepartmentTimeNorm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDepartment;
		
		private int _idFinancingSource;
		
		private decimal _NormHoursCount;
		
		private System.DateTime _DateBegin;
		
		private EntityRef<FinancingSource> _FinancingSource;
		
		private EntityRef<Dep> _Dep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidFinancingSourceChanging(int value);
    partial void OnidFinancingSourceChanged();
    partial void OnNormHoursCountChanging(decimal value);
    partial void OnNormHoursCountChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    #endregion
		
		public DepartmentTimeNorm()
		{
			this._FinancingSource = default(EntityRef<FinancingSource>);
			this._Dep = default(EntityRef<Dep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFinancingSource", DbType="Int NOT NULL")]
		public int idFinancingSource
		{
			get
			{
				return this._idFinancingSource;
			}
			set
			{
				if ((this._idFinancingSource != value))
				{
					if (this._FinancingSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFinancingSourceChanging(value);
					this.SendPropertyChanging();
					this._idFinancingSource = value;
					this.SendPropertyChanged("idFinancingSource");
					this.OnidFinancingSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormHoursCount", DbType="Decimal(18,2) NOT NULL")]
		public decimal NormHoursCount
		{
			get
			{
				return this._NormHoursCount;
			}
			set
			{
				if ((this._NormHoursCount != value))
				{
					this.OnNormHoursCountChanging(value);
					this.SendPropertyChanging();
					this._NormHoursCount = value;
					this.SendPropertyChanged("NormHoursCount");
					this.OnNormHoursCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_DepartmentTimeNorm", Storage="_FinancingSource", ThisKey="idFinancingSource", OtherKey="id", IsForeignKey=true)]
		public FinancingSource FinancingSource
		{
			get
			{
				return this._FinancingSource.Entity;
			}
			set
			{
				FinancingSource previousValue = this._FinancingSource.Entity;
				if (((previousValue != value) 
							|| (this._FinancingSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancingSource.Entity = null;
						previousValue.DepartmentTimeNorms.Remove(this);
					}
					this._FinancingSource.Entity = value;
					if ((value != null))
					{
						value.DepartmentTimeNorms.Add(this);
						this._idFinancingSource = value.id;
					}
					else
					{
						this._idFinancingSource = default(int);
					}
					this.SendPropertyChanged("FinancingSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentTimeNorm", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.DepartmentTimeNorms.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.DepartmentTimeNorms.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancingSource")]
	public partial class FinancingSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FinancingSourceName;
		
		private System.Nullable<int> _OrderBy;
		
		private EntitySet<DepartmentTimeNorm> _DepartmentTimeNorms;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<BonusType> _BonusTypes;
		
		private EntitySet<BonusHistory> _BonusHistories;
		
		private EntitySet<PlanStaffHistory> _PlanStaffHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFinancingSourceNameChanging(string value);
    partial void OnFinancingSourceNameChanged();
    partial void OnOrderByChanging(System.Nullable<int> value);
    partial void OnOrderByChanged();
    #endregion
		
		public FinancingSource()
		{
			this._DepartmentTimeNorms = new EntitySet<DepartmentTimeNorm>(new Action<DepartmentTimeNorm>(this.attach_DepartmentTimeNorms), new Action<DepartmentTimeNorm>(this.detach_DepartmentTimeNorms));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._BonusTypes = new EntitySet<BonusType>(new Action<BonusType>(this.attach_BonusTypes), new Action<BonusType>(this.detach_BonusTypes));
			this._BonusHistories = new EntitySet<BonusHistory>(new Action<BonusHistory>(this.attach_BonusHistories), new Action<BonusHistory>(this.detach_BonusHistories));
			this._PlanStaffHistories = new EntitySet<PlanStaffHistory>(new Action<PlanStaffHistory>(this.attach_PlanStaffHistories), new Action<PlanStaffHistory>(this.detach_PlanStaffHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingSourceName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FinancingSourceName
		{
			get
			{
				return this._FinancingSourceName;
			}
			set
			{
				if ((this._FinancingSourceName != value))
				{
					this.OnFinancingSourceNameChanging(value);
					this.SendPropertyChanging();
					this._FinancingSourceName = value;
					this.SendPropertyChanged("FinancingSourceName");
					this.OnFinancingSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderBy", DbType="Int")]
		public System.Nullable<int> OrderBy
		{
			get
			{
				return this._OrderBy;
			}
			set
			{
				if ((this._OrderBy != value))
				{
					this.OnOrderByChanging(value);
					this.SendPropertyChanging();
					this._OrderBy = value;
					this.SendPropertyChanged("OrderBy");
					this.OnOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_DepartmentTimeNorm", Storage="_DepartmentTimeNorms", ThisKey="id", OtherKey="idFinancingSource")]
		public EntitySet<DepartmentTimeNorm> DepartmentTimeNorms
		{
			get
			{
				return this._DepartmentTimeNorms;
			}
			set
			{
				this._DepartmentTimeNorms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idFinancingSource")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_BonusType", Storage="_BonusTypes", ThisKey="id", OtherKey="idDefaultFinancingSource")]
		public EntitySet<BonusType> BonusTypes
		{
			get
			{
				return this._BonusTypes;
			}
			set
			{
				this._BonusTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_BonusHistory", Storage="_BonusHistories", ThisKey="id", OtherKey="idFinancingSource")]
		public EntitySet<BonusHistory> BonusHistories
		{
			get
			{
				return this._BonusHistories;
			}
			set
			{
				this._BonusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_PlanStaffHistory", Storage="_PlanStaffHistories", ThisKey="id", OtherKey="idFinancingSource")]
		public EntitySet<PlanStaffHistory> PlanStaffHistories
		{
			get
			{
				return this._PlanStaffHistories;
			}
			set
			{
				this._PlanStaffHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DepartmentTimeNorms(DepartmentTimeNorm entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = this;
		}
		
		private void detach_DepartmentTimeNorms(DepartmentTimeNorm entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = null;
		}
		
		private void attach_BonusTypes(BonusType entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = this;
		}
		
		private void detach_BonusTypes(BonusType entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = null;
		}
		
		private void attach_BonusHistories(BonusHistory entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = this;
		}
		
		private void detach_BonusHistories(BonusHistory entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = null;
		}
		
		private void attach_PlanStaffHistories(PlanStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = this;
		}
		
		private void detach_PlanStaffHistories(PlanStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.FinancingSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanStaffSalary")]
	public partial class PlanStaffSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private decimal _SalarySize;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _idPlanStaff;
		
		private System.Nullable<int> _idPrikaz;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSalarySizeChanging(decimal value);
    partial void OnSalarySizeChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnidPrikazChanging(System.Nullable<int> value);
    partial void OnidPrikazChanged();
    #endregion
		
		public PlanStaffSalary()
		{
			this._Prikaz = default(EntityRef<Prikaz>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalarySize", DbType="Money NOT NULL")]
		public decimal SalarySize
		{
			get
			{
				return this._SalarySize;
			}
			set
			{
				if ((this._SalarySize != value))
				{
					this.OnSalarySizeChanging(value);
					this.SendPropertyChanging();
					this._SalarySize = value;
					this.SendPropertyChanged("SalarySize");
					this.OnSalarySizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrikaz", DbType="Int")]
		public System.Nullable<int> idPrikaz
		{
			get
			{
				return this._idPrikaz;
			}
			set
			{
				if ((this._idPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrikazChanging(value);
					this.SendPropertyChanging();
					this._idPrikaz = value;
					this.SendPropertyChanged("idPrikaz");
					this.OnidPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PlanStaffSalary", Storage="_Prikaz", ThisKey="idPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.PlanStaffSalaries.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.PlanStaffSalaries.Add(this);
						this._idPrikaz = value.id;
					}
					else
					{
						this._idPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_PlanStaffSalary", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.PlanStaffSalaries.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.PlanStaffSalaries.Add(this);
						this._idPlanStaff = value.id;
					}
					else
					{
						this._idPlanStaff = default(int);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prikaz")]
	public partial class Prikaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PrikazName;
		
		private System.Nullable<System.DateTime> _DatePrikaz;
		
		private System.Nullable<int> _idPrikazType;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _resume;
		
		private EntitySet<PlanStaffSalary> _PlanStaffSalaries;
		
		private EntitySet<PKCategorySalary> _PKCategorySalaries;
		
		private EntitySet<FactStaffHistory> _FactStaffHistories;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<Dep> _Deps;
		
		private EntitySet<BonusHistory> _BonusHistories;
		
		private EntitySet<Bonus> _Bonus;
		
		private EntitySet<Bonus> _Bonus1;
		
		private EntitySet<PlanStaff> _PlanStaffs;
		
		private EntitySet<PlanStaffHistory> _PlanStaffHistories;
		
		private EntitySet<OK_Otpusk> _OK_Otpusks;
		
		private EntitySet<FactStaffPrikaz> _FactStaffPrikazs;
		
		private EntitySet<DepartmentHistory> _DepartmentHistories;
		
		private EntityRef<PrikazType> _PrikazType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPrikazNameChanging(string value);
    partial void OnPrikazNameChanged();
    partial void OnDatePrikazChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePrikazChanged();
    partial void OnidPrikazTypeChanging(System.Nullable<int> value);
    partial void OnidPrikazTypeChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnresumeChanging(string value);
    partial void OnresumeChanged();
    #endregion
		
		public Prikaz()
		{
			this._PlanStaffSalaries = new EntitySet<PlanStaffSalary>(new Action<PlanStaffSalary>(this.attach_PlanStaffSalaries), new Action<PlanStaffSalary>(this.detach_PlanStaffSalaries));
			this._PKCategorySalaries = new EntitySet<PKCategorySalary>(new Action<PKCategorySalary>(this.attach_PKCategorySalaries), new Action<PKCategorySalary>(this.detach_PKCategorySalaries));
			this._FactStaffHistories = new EntitySet<FactStaffHistory>(new Action<FactStaffHistory>(this.attach_FactStaffHistories), new Action<FactStaffHistory>(this.detach_FactStaffHistories));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._Deps = new EntitySet<Dep>(new Action<Dep>(this.attach_Deps), new Action<Dep>(this.detach_Deps));
			this._BonusHistories = new EntitySet<BonusHistory>(new Action<BonusHistory>(this.attach_BonusHistories), new Action<BonusHistory>(this.detach_BonusHistories));
			this._Bonus = new EntitySet<Bonus>(new Action<Bonus>(this.attach_Bonus), new Action<Bonus>(this.detach_Bonus));
			this._Bonus1 = new EntitySet<Bonus>(new Action<Bonus>(this.attach_Bonus1), new Action<Bonus>(this.detach_Bonus1));
			this._PlanStaffs = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaffs), new Action<PlanStaff>(this.detach_PlanStaffs));
			this._PlanStaffHistories = new EntitySet<PlanStaffHistory>(new Action<PlanStaffHistory>(this.attach_PlanStaffHistories), new Action<PlanStaffHistory>(this.detach_PlanStaffHistories));
			this._OK_Otpusks = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusks), new Action<OK_Otpusk>(this.detach_OK_Otpusks));
			this._FactStaffPrikazs = new EntitySet<FactStaffPrikaz>(new Action<FactStaffPrikaz>(this.attach_FactStaffPrikazs), new Action<FactStaffPrikaz>(this.detach_FactStaffPrikazs));
			this._DepartmentHistories = new EntitySet<DepartmentHistory>(new Action<DepartmentHistory>(this.attach_DepartmentHistories), new Action<DepartmentHistory>(this.detach_DepartmentHistories));
			this._PrikazType = default(EntityRef<PrikazType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrikazName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrikazName
		{
			get
			{
				return this._PrikazName;
			}
			set
			{
				if ((this._PrikazName != value))
				{
					this.OnPrikazNameChanging(value);
					this.SendPropertyChanging();
					this._PrikazName = value;
					this.SendPropertyChanged("PrikazName");
					this.OnPrikazNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePrikaz", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePrikaz
		{
			get
			{
				return this._DatePrikaz;
			}
			set
			{
				if ((this._DatePrikaz != value))
				{
					this.OnDatePrikazChanging(value);
					this.SendPropertyChanging();
					this._DatePrikaz = value;
					this.SendPropertyChanged("DatePrikaz");
					this.OnDatePrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrikazType", DbType="Int")]
		public System.Nullable<int> idPrikazType
		{
			get
			{
				return this._idPrikazType;
			}
			set
			{
				if ((this._idPrikazType != value))
				{
					if (this._PrikazType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrikazTypeChanging(value);
					this.SendPropertyChanging();
					this._idPrikazType = value;
					this.SendPropertyChanged("idPrikazType");
					this.OnidPrikazTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resume", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string resume
		{
			get
			{
				return this._resume;
			}
			set
			{
				if ((this._resume != value))
				{
					this.OnresumeChanging(value);
					this.SendPropertyChanging();
					this._resume = value;
					this.SendPropertyChanged("resume");
					this.OnresumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PlanStaffSalary", Storage="_PlanStaffSalaries", ThisKey="id", OtherKey="idPrikaz")]
		public EntitySet<PlanStaffSalary> PlanStaffSalaries
		{
			get
			{
				return this._PlanStaffSalaries;
			}
			set
			{
				this._PlanStaffSalaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PKCategorySalary", Storage="_PKCategorySalaries", ThisKey="id", OtherKey="idPrikaz")]
		public EntitySet<PKCategorySalary> PKCategorySalaries
		{
			get
			{
				return this._PKCategorySalaries;
			}
			set
			{
				this._PKCategorySalaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_FactStaffHistory", Storage="_FactStaffHistories", ThisKey="id", OtherKey="idBeginPrikaz")]
		public EntitySet<FactStaffHistory> FactStaffHistories
		{
			get
			{
				return this._FactStaffHistories;
			}
			set
			{
				this._FactStaffHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idEndPrikaz")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_Dep", Storage="_Deps", ThisKey="id", OtherKey="idEndPrikaz")]
		public EntitySet<Dep> Deps
		{
			get
			{
				return this._Deps;
			}
			set
			{
				this._Deps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_BonusHistory", Storage="_BonusHistories", ThisKey="id", OtherKey="idBeginPrikaz")]
		public EntitySet<BonusHistory> BonusHistories
		{
			get
			{
				return this._BonusHistories;
			}
			set
			{
				this._BonusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_Bonus", Storage="_Bonus", ThisKey="id", OtherKey="idEndPrikaz")]
		public EntitySet<Bonus> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				this._Bonus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_Bonus1", Storage="_Bonus1", ThisKey="id", OtherKey="idIntermediateEndPrikaz")]
		public EntitySet<Bonus> Bonus1
		{
			get
			{
				return this._Bonus1;
			}
			set
			{
				this._Bonus1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PlanStaff", Storage="_PlanStaffs", ThisKey="id", OtherKey="idEndPrikaz")]
		public EntitySet<PlanStaff> PlanStaffs
		{
			get
			{
				return this._PlanStaffs;
			}
			set
			{
				this._PlanStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PlanStaffHistory", Storage="_PlanStaffHistories", ThisKey="id", OtherKey="idBeginPrikaz")]
		public EntitySet<PlanStaffHistory> PlanStaffHistories
		{
			get
			{
				return this._PlanStaffHistories;
			}
			set
			{
				this._PlanStaffHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_OK_Otpusk", Storage="_OK_Otpusks", ThisKey="id", OtherKey="idOtpuskPrikaz")]
		public EntitySet<OK_Otpusk> OK_Otpusks
		{
			get
			{
				return this._OK_Otpusks;
			}
			set
			{
				this._OK_Otpusks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_FactStaffPrikaz", Storage="_FactStaffPrikazs", ThisKey="id", OtherKey="idPrikaz")]
		public EntitySet<FactStaffPrikaz> FactStaffPrikazs
		{
			get
			{
				return this._FactStaffPrikazs;
			}
			set
			{
				this._FactStaffPrikazs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_DepartmentHistory", Storage="_DepartmentHistories", ThisKey="id", OtherKey="idBeginPrikaz")]
		public EntitySet<DepartmentHistory> DepartmentHistories
		{
			get
			{
				return this._DepartmentHistories;
			}
			set
			{
				this._DepartmentHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrikazType_Prikaz", Storage="_PrikazType", ThisKey="idPrikazType", OtherKey="id", IsForeignKey=true)]
		public PrikazType PrikazType
		{
			get
			{
				return this._PrikazType.Entity;
			}
			set
			{
				PrikazType previousValue = this._PrikazType.Entity;
				if (((previousValue != value) 
							|| (this._PrikazType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrikazType.Entity = null;
						previousValue.Prikazs.Remove(this);
					}
					this._PrikazType.Entity = value;
					if ((value != null))
					{
						value.Prikazs.Add(this);
						this._idPrikazType = value.id;
					}
					else
					{
						this._idPrikazType = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrikazType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlanStaffSalaries(PlanStaffSalary entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_PlanStaffSalaries(PlanStaffSalary entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_PKCategorySalaries(PKCategorySalary entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_PKCategorySalaries(PKCategorySalary entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_BonusHistories(BonusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_BonusHistories(BonusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_Bonus1(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz1 = this;
		}
		
		private void detach_Bonus1(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz1 = null;
		}
		
		private void attach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_PlanStaffHistories(PlanStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_PlanStaffHistories(PlanStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_FactStaffPrikazs(FactStaffPrikaz entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_FactStaffPrikazs(FactStaffPrikaz entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
		
		private void attach_DepartmentHistories(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = this;
		}
		
		private void detach_DepartmentHistories(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Prikaz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrikazType")]
	public partial class PrikazType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PrikazTypeName;
		
		private int _idPrikazSuperType;
		
		private EntitySet<Prikaz> _Prikazs;
		
		private EntityRef<PrikazSuperType> _PrikazSuperType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPrikazTypeNameChanging(string value);
    partial void OnPrikazTypeNameChanged();
    partial void OnidPrikazSuperTypeChanging(int value);
    partial void OnidPrikazSuperTypeChanged();
    #endregion
		
		public PrikazType()
		{
			this._Prikazs = new EntitySet<Prikaz>(new Action<Prikaz>(this.attach_Prikazs), new Action<Prikaz>(this.detach_Prikazs));
			this._PrikazSuperType = default(EntityRef<PrikazSuperType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrikazTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PrikazTypeName
		{
			get
			{
				return this._PrikazTypeName;
			}
			set
			{
				if ((this._PrikazTypeName != value))
				{
					this.OnPrikazTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PrikazTypeName = value;
					this.SendPropertyChanged("PrikazTypeName");
					this.OnPrikazTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrikazSuperType", DbType="Int NOT NULL")]
		public int idPrikazSuperType
		{
			get
			{
				return this._idPrikazSuperType;
			}
			set
			{
				if ((this._idPrikazSuperType != value))
				{
					if (this._PrikazSuperType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrikazSuperTypeChanging(value);
					this.SendPropertyChanging();
					this._idPrikazSuperType = value;
					this.SendPropertyChanged("idPrikazSuperType");
					this.OnidPrikazSuperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrikazType_Prikaz", Storage="_Prikazs", ThisKey="id", OtherKey="idPrikazType")]
		public EntitySet<Prikaz> Prikazs
		{
			get
			{
				return this._Prikazs;
			}
			set
			{
				this._Prikazs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrikazSuperType_PrikazType", Storage="_PrikazSuperType", ThisKey="idPrikazSuperType", OtherKey="id", IsForeignKey=true)]
		public PrikazSuperType PrikazSuperType
		{
			get
			{
				return this._PrikazSuperType.Entity;
			}
			set
			{
				PrikazSuperType previousValue = this._PrikazSuperType.Entity;
				if (((previousValue != value) 
							|| (this._PrikazSuperType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrikazSuperType.Entity = null;
						previousValue.PrikazTypes.Remove(this);
					}
					this._PrikazSuperType.Entity = value;
					if ((value != null))
					{
						value.PrikazTypes.Add(this);
						this._idPrikazSuperType = value.id;
					}
					else
					{
						this._idPrikazSuperType = default(int);
					}
					this.SendPropertyChanged("PrikazSuperType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prikazs(Prikaz entity)
		{
			this.SendPropertyChanging();
			entity.PrikazType = this;
		}
		
		private void detach_Prikazs(Prikaz entity)
		{
			this.SendPropertyChanging();
			entity.PrikazType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrikazSuperType")]
	public partial class PrikazSuperType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PrikazSuperTypeName;
		
		private EntitySet<PrikazType> _PrikazTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPrikazSuperTypeNameChanging(string value);
    partial void OnPrikazSuperTypeNameChanged();
    #endregion
		
		public PrikazSuperType()
		{
			this._PrikazTypes = new EntitySet<PrikazType>(new Action<PrikazType>(this.attach_PrikazTypes), new Action<PrikazType>(this.detach_PrikazTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrikazSuperTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PrikazSuperTypeName
		{
			get
			{
				return this._PrikazSuperTypeName;
			}
			set
			{
				if ((this._PrikazSuperTypeName != value))
				{
					this.OnPrikazSuperTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PrikazSuperTypeName = value;
					this.SendPropertyChanged("PrikazSuperTypeName");
					this.OnPrikazSuperTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrikazSuperType_PrikazType", Storage="_PrikazTypes", ThisKey="id", OtherKey="idPrikazSuperType")]
		public EntitySet<PrikazType> PrikazTypes
		{
			get
			{
				return this._PrikazTypes;
			}
			set
			{
				this._PrikazTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PrikazTypes(PrikazType entity)
		{
			this.SendPropertyChanging();
			entity.PrikazSuperType = this;
		}
		
		private void detach_PrikazTypes(PrikazType entity)
		{
			this.SendPropertyChanging();
			entity.PrikazSuperType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PKGroup")]
	public partial class PKGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _GroupNumber;
		
		private string _GroupName;
		
		private EntitySet<PKCategory> _PKCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnGroupNumberChanging(int value);
    partial void OnGroupNumberChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public PKGroup()
		{
			this._PKCategories = new EntitySet<PKCategory>(new Action<PKCategory>(this.attach_PKCategories), new Action<PKCategory>(this.detach_PKCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNumber", DbType="Int NOT NULL")]
		public int GroupNumber
		{
			get
			{
				return this._GroupNumber;
			}
			set
			{
				if ((this._GroupNumber != value))
				{
					this.OnGroupNumberChanging(value);
					this.SendPropertyChanging();
					this._GroupNumber = value;
					this.SendPropertyChanged("GroupNumber");
					this.OnGroupNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PKGroup_PKCategory", Storage="_PKCategories", ThisKey="id", OtherKey="idPKGroup")]
		public EntitySet<PKCategory> PKCategories
		{
			get
			{
				return this._PKCategories;
			}
			set
			{
				this._PKCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PKCategories(PKCategory entity)
		{
			this.SendPropertyChanging();
			entity.PKGroup = this;
		}
		
		private void detach_PKCategories(PKCategory entity)
		{
			this.SendPropertyChanging();
			entity.PKGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PKCategorySalary")]
	public partial class PKCategorySalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private decimal _SalarySize;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _idPKCategory;
		
		private System.Nullable<int> _idPrikaz;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<PKCategory> _PKCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSalarySizeChanging(decimal value);
    partial void OnSalarySizeChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnidPKCategoryChanging(int value);
    partial void OnidPKCategoryChanged();
    partial void OnidPrikazChanging(System.Nullable<int> value);
    partial void OnidPrikazChanged();
    #endregion
		
		public PKCategorySalary()
		{
			this._Prikaz = default(EntityRef<Prikaz>);
			this._PKCategory = default(EntityRef<PKCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalarySize", DbType="Money NOT NULL")]
		public decimal SalarySize
		{
			get
			{
				return this._SalarySize;
			}
			set
			{
				if ((this._SalarySize != value))
				{
					this.OnSalarySizeChanging(value);
					this.SendPropertyChanging();
					this._SalarySize = value;
					this.SendPropertyChanged("SalarySize");
					this.OnSalarySizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPKCategory", DbType="Int NOT NULL")]
		public int idPKCategory
		{
			get
			{
				return this._idPKCategory;
			}
			set
			{
				if ((this._idPKCategory != value))
				{
					if (this._PKCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPKCategoryChanging(value);
					this.SendPropertyChanging();
					this._idPKCategory = value;
					this.SendPropertyChanged("idPKCategory");
					this.OnidPKCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrikaz", DbType="Int")]
		public System.Nullable<int> idPrikaz
		{
			get
			{
				return this._idPrikaz;
			}
			set
			{
				if ((this._idPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrikazChanging(value);
					this.SendPropertyChanging();
					this._idPrikaz = value;
					this.SendPropertyChanged("idPrikaz");
					this.OnidPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PKCategorySalary", Storage="_Prikaz", ThisKey="idPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.PKCategorySalaries.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.PKCategorySalaries.Add(this);
						this._idPrikaz = value.id;
					}
					else
					{
						this._idPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PKCategory_PKCategorySalary", Storage="_PKCategory", ThisKey="idPKCategory", OtherKey="id", IsForeignKey=true)]
		public PKCategory PKCategory
		{
			get
			{
				return this._PKCategory.Entity;
			}
			set
			{
				PKCategory previousValue = this._PKCategory.Entity;
				if (((previousValue != value) 
							|| (this._PKCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PKCategory.Entity = null;
						previousValue.PKCategorySalaries.Remove(this);
					}
					this._PKCategory.Entity = value;
					if ((value != null))
					{
						value.PKCategorySalaries.Add(this);
						this._idPKCategory = value.id;
					}
					else
					{
						this._idPKCategory = default(int);
					}
					this.SendPropertyChanged("PKCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkSuperType")]
	public partial class WorkSuperType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _WorkSuperTypeName;
		
		private string _WorkSuperTypeShortName;
		
		private EntitySet<WorkType> _WorkTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnWorkSuperTypeNameChanging(string value);
    partial void OnWorkSuperTypeNameChanged();
    partial void OnWorkSuperTypeShortNameChanging(string value);
    partial void OnWorkSuperTypeShortNameChanged();
    #endregion
		
		public WorkSuperType()
		{
			this._WorkTypes = new EntitySet<WorkType>(new Action<WorkType>(this.attach_WorkTypes), new Action<WorkType>(this.detach_WorkTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSuperTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkSuperTypeName
		{
			get
			{
				return this._WorkSuperTypeName;
			}
			set
			{
				if ((this._WorkSuperTypeName != value))
				{
					this.OnWorkSuperTypeNameChanging(value);
					this.SendPropertyChanging();
					this._WorkSuperTypeName = value;
					this.SendPropertyChanged("WorkSuperTypeName");
					this.OnWorkSuperTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSuperTypeShortName", DbType="VarChar(20)")]
		public string WorkSuperTypeShortName
		{
			get
			{
				return this._WorkSuperTypeShortName;
			}
			set
			{
				if ((this._WorkSuperTypeShortName != value))
				{
					this.OnWorkSuperTypeShortNameChanging(value);
					this.SendPropertyChanging();
					this._WorkSuperTypeShortName = value;
					this.SendPropertyChanged("WorkSuperTypeShortName");
					this.OnWorkSuperTypeShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSuperType_WorkType", Storage="_WorkTypes", ThisKey="id", OtherKey="idWorkSuperType")]
		public EntitySet<WorkType> WorkTypes
		{
			get
			{
				return this._WorkTypes;
			}
			set
			{
				this._WorkTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkTypes(WorkType entity)
		{
			this.SendPropertyChanging();
			entity.WorkSuperType = this;
		}
		
		private void detach_WorkTypes(WorkType entity)
		{
			this.SendPropertyChanging();
			entity.WorkSuperType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducDocument")]
	public partial class EducDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idEducDocType;
		
		private string _DocSeries;
		
		private string _DocNumber;
		
		private System.Nullable<System.DateTime> _DocDate;
		
		private EntityRef<EmployeeRank> _EmployeeRank;
		
		private EntityRef<EmployeeDegree> _EmployeeDegree;
		
		private EntityRef<EducDocumentType> _EducDocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidEducDocTypeChanging(int value);
    partial void OnidEducDocTypeChanged();
    partial void OnDocSeriesChanging(string value);
    partial void OnDocSeriesChanged();
    partial void OnDocNumberChanging(string value);
    partial void OnDocNumberChanged();
    partial void OnDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocDateChanged();
    #endregion
		
		public EducDocument()
		{
			this._EmployeeRank = default(EntityRef<EmployeeRank>);
			this._EmployeeDegree = default(EntityRef<EmployeeDegree>);
			this._EducDocumentType = default(EntityRef<EducDocumentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEducDocType", DbType="Int NOT NULL")]
		public int idEducDocType
		{
			get
			{
				return this._idEducDocType;
			}
			set
			{
				if ((this._idEducDocType != value))
				{
					if (this._EducDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEducDocTypeChanging(value);
					this.SendPropertyChanging();
					this._idEducDocType = value;
					this.SendPropertyChanged("idEducDocType");
					this.OnidEducDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocSeries", DbType="VarChar(15)")]
		public string DocSeries
		{
			get
			{
				return this._DocSeries;
			}
			set
			{
				if ((this._DocSeries != value))
				{
					this.OnDocSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocSeries = value;
					this.SendPropertyChanged("DocSeries");
					this.OnDocSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNumber", DbType="VarChar(50)")]
		public string DocNumber
		{
			get
			{
				return this._DocNumber;
			}
			set
			{
				if ((this._DocNumber != value))
				{
					this.OnDocNumberChanging(value);
					this.SendPropertyChanging();
					this._DocNumber = value;
					this.SendPropertyChanged("DocNumber");
					this.OnDocNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocDate
		{
			get
			{
				return this._DocDate;
			}
			set
			{
				if ((this._DocDate != value))
				{
					this.OnDocDateChanging(value);
					this.SendPropertyChanging();
					this._DocDate = value;
					this.SendPropertyChanged("DocDate");
					this.OnDocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducDocument_EmployeeRank", Storage="_EmployeeRank", ThisKey="id", OtherKey="idEducDocument", IsUnique=true, IsForeignKey=false)]
		public EmployeeRank EmployeeRank
		{
			get
			{
				return this._EmployeeRank.Entity;
			}
			set
			{
				EmployeeRank previousValue = this._EmployeeRank.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeRank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeRank.Entity = null;
						previousValue.EducDocument = null;
					}
					this._EmployeeRank.Entity = value;
					if ((value != null))
					{
						value.EducDocument = this;
					}
					this.SendPropertyChanged("EmployeeRank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducDocument_EmployeeDegree", Storage="_EmployeeDegree", ThisKey="id", OtherKey="idEducDocument", IsUnique=true, IsForeignKey=false)]
		public EmployeeDegree EmployeeDegree
		{
			get
			{
				return this._EmployeeDegree.Entity;
			}
			set
			{
				EmployeeDegree previousValue = this._EmployeeDegree.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeDegree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeDegree.Entity = null;
						previousValue.EducDocument = null;
					}
					this._EmployeeDegree.Entity = value;
					if ((value != null))
					{
						value.EducDocument = this;
					}
					this.SendPropertyChanged("EmployeeDegree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducDocumentType_EducDocument", Storage="_EducDocumentType", ThisKey="idEducDocType", OtherKey="id", IsForeignKey=true)]
		public EducDocumentType EducDocumentType
		{
			get
			{
				return this._EducDocumentType.Entity;
			}
			set
			{
				EducDocumentType previousValue = this._EducDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._EducDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EducDocumentType.Entity = null;
						previousValue.EducDocuments.Remove(this);
					}
					this._EducDocumentType.Entity = value;
					if ((value != null))
					{
						value.EducDocuments.Add(this);
						this._idEducDocType = value.id;
					}
					else
					{
						this._idEducDocType = default(int);
					}
					this.SendPropertyChanged("EducDocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeRank")]
	public partial class EmployeeRank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEducDocument;
		
		private int _idEmployee;
		
		private System.Nullable<int> _idRank;
		
		private string _rankWhere;
		
		private EntityRef<EducDocument> _EducDocument;
		
		private EntityRef<Rank> _Rank;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEducDocumentChanging(int value);
    partial void OnidEducDocumentChanged();
    partial void OnidEmployeeChanging(int value);
    partial void OnidEmployeeChanged();
    partial void OnidRankChanging(System.Nullable<int> value);
    partial void OnidRankChanged();
    partial void OnrankWhereChanging(string value);
    partial void OnrankWhereChanged();
    #endregion
		
		public EmployeeRank()
		{
			this._EducDocument = default(EntityRef<EducDocument>);
			this._Rank = default(EntityRef<Rank>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEducDocument", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEducDocument
		{
			get
			{
				return this._idEducDocument;
			}
			set
			{
				if ((this._idEducDocument != value))
				{
					if (this._EducDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEducDocumentChanging(value);
					this.SendPropertyChanging();
					this._idEducDocument = value;
					this.SendPropertyChanged("idEducDocument");
					this.OnidEducDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int NOT NULL")]
		public int idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRank", DbType="Int")]
		public System.Nullable<int> idRank
		{
			get
			{
				return this._idRank;
			}
			set
			{
				if ((this._idRank != value))
				{
					if (this._Rank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRankChanging(value);
					this.SendPropertyChanging();
					this._idRank = value;
					this.SendPropertyChanged("idRank");
					this.OnidRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rankWhere", DbType="VarChar(200)")]
		public string rankWhere
		{
			get
			{
				return this._rankWhere;
			}
			set
			{
				if ((this._rankWhere != value))
				{
					this.OnrankWhereChanging(value);
					this.SendPropertyChanging();
					this._rankWhere = value;
					this.SendPropertyChanged("rankWhere");
					this.OnrankWhereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducDocument_EmployeeRank", Storage="_EducDocument", ThisKey="idEducDocument", OtherKey="id", IsForeignKey=true)]
		public EducDocument EducDocument
		{
			get
			{
				return this._EducDocument.Entity;
			}
			set
			{
				EducDocument previousValue = this._EducDocument.Entity;
				if (((previousValue != value) 
							|| (this._EducDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EducDocument.Entity = null;
						previousValue.EmployeeRank = null;
					}
					this._EducDocument.Entity = value;
					if ((value != null))
					{
						value.EmployeeRank = this;
						this._idEducDocument = value.id;
					}
					else
					{
						this._idEducDocument = default(int);
					}
					this.SendPropertyChanged("EducDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_EmployeeRank", Storage="_Rank", ThisKey="idRank", OtherKey="id", IsForeignKey=true)]
		public Rank Rank
		{
			get
			{
				return this._Rank.Entity;
			}
			set
			{
				Rank previousValue = this._Rank.Entity;
				if (((previousValue != value) 
							|| (this._Rank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank.Entity = null;
						previousValue.EmployeeRanks.Remove(this);
					}
					this._Rank.Entity = value;
					if ((value != null))
					{
						value.EmployeeRanks.Add(this);
						this._idRank = value.id;
					}
					else
					{
						this._idRank = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeRank", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeRanks.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeRanks.Add(this);
						this._idEmployee = value.id;
					}
					else
					{
						this._idEmployee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducDocumentType")]
	public partial class EducDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DocTypeName;
		
		private EntitySet<EducDocument> _EducDocuments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDocTypeNameChanging(string value);
    partial void OnDocTypeNameChanged();
    #endregion
		
		public EducDocumentType()
		{
			this._EducDocuments = new EntitySet<EducDocument>(new Action<EducDocument>(this.attach_EducDocuments), new Action<EducDocument>(this.detach_EducDocuments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocTypeName
		{
			get
			{
				return this._DocTypeName;
			}
			set
			{
				if ((this._DocTypeName != value))
				{
					this.OnDocTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DocTypeName = value;
					this.SendPropertyChanged("DocTypeName");
					this.OnDocTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducDocumentType_EducDocument", Storage="_EducDocuments", ThisKey="id", OtherKey="idEducDocType")]
		public EntitySet<EducDocument> EducDocuments
		{
			get
			{
				return this._EducDocuments;
			}
			set
			{
				this._EducDocuments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EducDocuments(EducDocument entity)
		{
			this.SendPropertyChanging();
			entity.EducDocumentType = this;
		}
		
		private void detach_EducDocuments(EducDocument entity)
		{
			this.SendPropertyChanging();
			entity.EducDocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeDegree")]
	public partial class EmployeeDegree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEducDocument;
		
		private System.Nullable<System.DateTime> _degreeDate;
		
		private string _DissertCouncil;
		
		private string _diplWhere;
		
		private int _idDegree;
		
		private int _idScienceType;
		
		private int _idEmployee;
		
		private EntityRef<EducDocument> _EducDocument;
		
		private EntityRef<ScienceType> _ScienceType;
		
		private EntityRef<Degree> _Degree;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEducDocumentChanging(int value);
    partial void OnidEducDocumentChanged();
    partial void OndegreeDateChanging(System.Nullable<System.DateTime> value);
    partial void OndegreeDateChanged();
    partial void OnDissertCouncilChanging(string value);
    partial void OnDissertCouncilChanged();
    partial void OndiplWhereChanging(string value);
    partial void OndiplWhereChanged();
    partial void OnidDegreeChanging(int value);
    partial void OnidDegreeChanged();
    partial void OnidScienceTypeChanging(int value);
    partial void OnidScienceTypeChanged();
    partial void OnidEmployeeChanging(int value);
    partial void OnidEmployeeChanged();
    #endregion
		
		public EmployeeDegree()
		{
			this._EducDocument = default(EntityRef<EducDocument>);
			this._ScienceType = default(EntityRef<ScienceType>);
			this._Degree = default(EntityRef<Degree>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEducDocument", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEducDocument
		{
			get
			{
				return this._idEducDocument;
			}
			set
			{
				if ((this._idEducDocument != value))
				{
					if (this._EducDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEducDocumentChanging(value);
					this.SendPropertyChanging();
					this._idEducDocument = value;
					this.SendPropertyChanged("idEducDocument");
					this.OnidEducDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degreeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> degreeDate
		{
			get
			{
				return this._degreeDate;
			}
			set
			{
				if ((this._degreeDate != value))
				{
					this.OndegreeDateChanging(value);
					this.SendPropertyChanging();
					this._degreeDate = value;
					this.SendPropertyChanged("degreeDate");
					this.OndegreeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DissertCouncil", DbType="VarChar(200)")]
		public string DissertCouncil
		{
			get
			{
				return this._DissertCouncil;
			}
			set
			{
				if ((this._DissertCouncil != value))
				{
					this.OnDissertCouncilChanging(value);
					this.SendPropertyChanging();
					this._DissertCouncil = value;
					this.SendPropertyChanged("DissertCouncil");
					this.OnDissertCouncilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diplWhere", DbType="VarChar(200)")]
		public string diplWhere
		{
			get
			{
				return this._diplWhere;
			}
			set
			{
				if ((this._diplWhere != value))
				{
					this.OndiplWhereChanging(value);
					this.SendPropertyChanging();
					this._diplWhere = value;
					this.SendPropertyChanged("diplWhere");
					this.OndiplWhereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDegree", DbType="Int NOT NULL")]
		public int idDegree
		{
			get
			{
				return this._idDegree;
			}
			set
			{
				if ((this._idDegree != value))
				{
					if (this._Degree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDegreeChanging(value);
					this.SendPropertyChanging();
					this._idDegree = value;
					this.SendPropertyChanged("idDegree");
					this.OnidDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idScienceType", DbType="Int NOT NULL")]
		public int idScienceType
		{
			get
			{
				return this._idScienceType;
			}
			set
			{
				if ((this._idScienceType != value))
				{
					if (this._ScienceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidScienceTypeChanging(value);
					this.SendPropertyChanging();
					this._idScienceType = value;
					this.SendPropertyChanged("idScienceType");
					this.OnidScienceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int NOT NULL")]
		public int idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducDocument_EmployeeDegree", Storage="_EducDocument", ThisKey="idEducDocument", OtherKey="id", IsForeignKey=true)]
		public EducDocument EducDocument
		{
			get
			{
				return this._EducDocument.Entity;
			}
			set
			{
				EducDocument previousValue = this._EducDocument.Entity;
				if (((previousValue != value) 
							|| (this._EducDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EducDocument.Entity = null;
						previousValue.EmployeeDegree = null;
					}
					this._EducDocument.Entity = value;
					if ((value != null))
					{
						value.EmployeeDegree = this;
						this._idEducDocument = value.id;
					}
					else
					{
						this._idEducDocument = default(int);
					}
					this.SendPropertyChanged("EducDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScienceType_EmployeeDegree", Storage="_ScienceType", ThisKey="idScienceType", OtherKey="id", IsForeignKey=true)]
		public ScienceType ScienceType
		{
			get
			{
				return this._ScienceType.Entity;
			}
			set
			{
				ScienceType previousValue = this._ScienceType.Entity;
				if (((previousValue != value) 
							|| (this._ScienceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScienceType.Entity = null;
						previousValue.EmployeeDegrees.Remove(this);
					}
					this._ScienceType.Entity = value;
					if ((value != null))
					{
						value.EmployeeDegrees.Add(this);
						this._idScienceType = value.id;
					}
					else
					{
						this._idScienceType = default(int);
					}
					this.SendPropertyChanged("ScienceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Degree_EmployeeDegree", Storage="_Degree", ThisKey="idDegree", OtherKey="id", IsForeignKey=true)]
		public Degree Degree
		{
			get
			{
				return this._Degree.Entity;
			}
			set
			{
				Degree previousValue = this._Degree.Entity;
				if (((previousValue != value) 
							|| (this._Degree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Degree.Entity = null;
						previousValue.EmployeeDegrees.Remove(this);
					}
					this._Degree.Entity = value;
					if ((value != null))
					{
						value.EmployeeDegrees.Add(this);
						this._idDegree = value.id;
					}
					else
					{
						this._idDegree = default(int);
					}
					this.SendPropertyChanged("Degree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDegree", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeDegrees.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeDegrees.Add(this);
						this._idEmployee = value.id;
					}
					else
					{
						this._idEmployee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SemPol")]
	public partial class SemPol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _sempolName;
		
		private System.Nullable<int> _KadrID;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsempolNameChanging(string value);
    partial void OnsempolNameChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    #endregion
		
		public SemPol()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sempolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string sempolName
		{
			get
			{
				return this._sempolName;
			}
			set
			{
				if ((this._sempolName != value))
				{
					this.OnsempolNameChanging(value);
					this.SendPropertyChanging();
					this._sempolName = value;
					this.SendPropertyChanged("sempolName");
					this.OnsempolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SemPol_Employee", Storage="_Employees", ThisKey="id", OtherKey="idSemPol")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SemPol = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SemPol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScienceType")]
	public partial class ScienceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ScienceTypeName;
		
		private string _ScienceTypeAbbrev;
		
		private string _ScienceTypeShortName;
		
		private EntitySet<EmployeeDegree> _EmployeeDegrees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnScienceTypeNameChanging(string value);
    partial void OnScienceTypeNameChanged();
    partial void OnScienceTypeAbbrevChanging(string value);
    partial void OnScienceTypeAbbrevChanged();
    partial void OnScienceTypeShortNameChanging(string value);
    partial void OnScienceTypeShortNameChanged();
    #endregion
		
		public ScienceType()
		{
			this._EmployeeDegrees = new EntitySet<EmployeeDegree>(new Action<EmployeeDegree>(this.attach_EmployeeDegrees), new Action<EmployeeDegree>(this.detach_EmployeeDegrees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScienceTypeName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ScienceTypeName
		{
			get
			{
				return this._ScienceTypeName;
			}
			set
			{
				if ((this._ScienceTypeName != value))
				{
					this.OnScienceTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ScienceTypeName = value;
					this.SendPropertyChanged("ScienceTypeName");
					this.OnScienceTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScienceTypeAbbrev", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScienceTypeAbbrev
		{
			get
			{
				return this._ScienceTypeAbbrev;
			}
			set
			{
				if ((this._ScienceTypeAbbrev != value))
				{
					this.OnScienceTypeAbbrevChanging(value);
					this.SendPropertyChanging();
					this._ScienceTypeAbbrev = value;
					this.SendPropertyChanged("ScienceTypeAbbrev");
					this.OnScienceTypeAbbrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScienceTypeShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScienceTypeShortName
		{
			get
			{
				return this._ScienceTypeShortName;
			}
			set
			{
				if ((this._ScienceTypeShortName != value))
				{
					this.OnScienceTypeShortNameChanging(value);
					this.SendPropertyChanging();
					this._ScienceTypeShortName = value;
					this.SendPropertyChanged("ScienceTypeShortName");
					this.OnScienceTypeShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScienceType_EmployeeDegree", Storage="_EmployeeDegrees", ThisKey="id", OtherKey="idScienceType")]
		public EntitySet<EmployeeDegree> EmployeeDegrees
		{
			get
			{
				return this._EmployeeDegrees;
			}
			set
			{
				this._EmployeeDegrees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeDegrees(EmployeeDegree entity)
		{
			this.SendPropertyChanging();
			entity.ScienceType = this;
		}
		
		private void detach_EmployeeDegrees(EmployeeDegree entity)
		{
			this.SendPropertyChanging();
			entity.ScienceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank")]
	public partial class Rank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _RankName;
		
		private System.Nullable<int> _KadrID;
		
		private int _RankOrder;
		
		private EntitySet<EmployeeRank> _EmployeeRanks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRankNameChanging(string value);
    partial void OnRankNameChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    partial void OnRankOrderChanging(int value);
    partial void OnRankOrderChanged();
    #endregion
		
		public Rank()
		{
			this._EmployeeRanks = new EntitySet<EmployeeRank>(new Action<EmployeeRank>(this.attach_EmployeeRanks), new Action<EmployeeRank>(this.detach_EmployeeRanks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string RankName
		{
			get
			{
				return this._RankName;
			}
			set
			{
				if ((this._RankName != value))
				{
					this.OnRankNameChanging(value);
					this.SendPropertyChanging();
					this._RankName = value;
					this.SendPropertyChanged("RankName");
					this.OnRankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankOrder", DbType="Int NOT NULL")]
		public int RankOrder
		{
			get
			{
				return this._RankOrder;
			}
			set
			{
				if ((this._RankOrder != value))
				{
					this.OnRankOrderChanging(value);
					this.SendPropertyChanging();
					this._RankOrder = value;
					this.SendPropertyChanged("RankOrder");
					this.OnRankOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_EmployeeRank", Storage="_EmployeeRanks", ThisKey="id", OtherKey="idRank")]
		public EntitySet<EmployeeRank> EmployeeRanks
		{
			get
			{
				return this._EmployeeRanks;
			}
			set
			{
				this._EmployeeRanks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeRanks(EmployeeRank entity)
		{
			this.SendPropertyChanging();
			entity.Rank = this;
		}
		
		private void detach_EmployeeRanks(EmployeeRank entity)
		{
			this.SendPropertyChanging();
			entity.Rank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Degree")]
	public partial class Degree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DegreeName;
		
		private string _DegreeShortName;
		
		private string _DegreeAbbrev;
		
		private int _DegreeOrder;
		
		private EntitySet<EmployeeDegree> _EmployeeDegrees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDegreeNameChanging(string value);
    partial void OnDegreeNameChanged();
    partial void OnDegreeShortNameChanging(string value);
    partial void OnDegreeShortNameChanged();
    partial void OnDegreeAbbrevChanging(string value);
    partial void OnDegreeAbbrevChanged();
    partial void OnDegreeOrderChanging(int value);
    partial void OnDegreeOrderChanged();
    #endregion
		
		public Degree()
		{
			this._EmployeeDegrees = new EntitySet<EmployeeDegree>(new Action<EmployeeDegree>(this.attach_EmployeeDegrees), new Action<EmployeeDegree>(this.detach_EmployeeDegrees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DegreeName
		{
			get
			{
				return this._DegreeName;
			}
			set
			{
				if ((this._DegreeName != value))
				{
					this.OnDegreeNameChanging(value);
					this.SendPropertyChanging();
					this._DegreeName = value;
					this.SendPropertyChanged("DegreeName");
					this.OnDegreeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DegreeShortName
		{
			get
			{
				return this._DegreeShortName;
			}
			set
			{
				if ((this._DegreeShortName != value))
				{
					this.OnDegreeShortNameChanging(value);
					this.SendPropertyChanging();
					this._DegreeShortName = value;
					this.SendPropertyChanged("DegreeShortName");
					this.OnDegreeShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeAbbrev", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DegreeAbbrev
		{
			get
			{
				return this._DegreeAbbrev;
			}
			set
			{
				if ((this._DegreeAbbrev != value))
				{
					this.OnDegreeAbbrevChanging(value);
					this.SendPropertyChanging();
					this._DegreeAbbrev = value;
					this.SendPropertyChanged("DegreeAbbrev");
					this.OnDegreeAbbrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeOrder", DbType="Int NOT NULL")]
		public int DegreeOrder
		{
			get
			{
				return this._DegreeOrder;
			}
			set
			{
				if ((this._DegreeOrder != value))
				{
					this.OnDegreeOrderChanging(value);
					this.SendPropertyChanging();
					this._DegreeOrder = value;
					this.SendPropertyChanged("DegreeOrder");
					this.OnDegreeOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Degree_EmployeeDegree", Storage="_EmployeeDegrees", ThisKey="id", OtherKey="idDegree")]
		public EntitySet<EmployeeDegree> EmployeeDegrees
		{
			get
			{
				return this._EmployeeDegrees;
			}
			set
			{
				this._EmployeeDegrees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeDegrees(EmployeeDegree entity)
		{
			this.SendPropertyChanging();
			entity.Degree = this;
		}
		
		private void detach_EmployeeDegrees(EmployeeDegree entity)
		{
			this.SendPropertyChanging();
			entity.Degree = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grazd")]
	public partial class Grazd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _grazdName;
		
		private System.Nullable<int> _KadrID;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OngrazdNameChanging(string value);
    partial void OngrazdNameChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    #endregion
		
		public Grazd()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grazdName", DbType="VarChar(100)")]
		public string grazdName
		{
			get
			{
				return this._grazdName;
			}
			set
			{
				if ((this._grazdName != value))
				{
					this.OngrazdNameChanging(value);
					this.SendPropertyChanging();
					this._grazdName = value;
					this.SendPropertyChanged("grazdName");
					this.OngrazdNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grazd_Employee", Storage="_Employees", ThisKey="id", OtherKey="idGrazd")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Grazd = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Grazd = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FundingCenter")]
	public partial class FundingCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FundingCenterName;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<Dep> _Deps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFundingCenterNameChanging(string value);
    partial void OnFundingCenterNameChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public FundingCenter()
		{
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._Deps = new EntitySet<Dep>(new Action<Dep>(this.attach_Deps), new Action<Dep>(this.detach_Deps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundingCenterName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FundingCenterName
		{
			get
			{
				return this._FundingCenterName;
			}
			set
			{
				if ((this._FundingCenterName != value))
				{
					this.OnFundingCenterNameChanging(value);
					this.SendPropertyChanging();
					this._FundingCenterName = value;
					this.SendPropertyChanged("FundingCenterName");
					this.OnFundingCenterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FundingCenter_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idFundingCenter")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FundingCenter_Dep", Storage="_Deps", ThisKey="id", OtherKey="idFundingCenter")]
		public EntitySet<Dep> Deps
		{
			get
			{
				return this._Deps;
			}
			set
			{
				this._Deps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FundingCenter = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FundingCenter = null;
		}
		
		private void attach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.FundingCenter = this;
		}
		
		private void detach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.FundingCenter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffReplacementReason")]
	public partial class FactStaffReplacementReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ReplacementReasonName;
		
		private string _ReplacementReasonShortName;
		
		private EntitySet<FactStaffReplacement> _FactStaffReplacements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnReplacementReasonNameChanging(string value);
    partial void OnReplacementReasonNameChanged();
    partial void OnReplacementReasonShortNameChanging(string value);
    partial void OnReplacementReasonShortNameChanged();
    #endregion
		
		public FactStaffReplacementReason()
		{
			this._FactStaffReplacements = new EntitySet<FactStaffReplacement>(new Action<FactStaffReplacement>(this.attach_FactStaffReplacements), new Action<FactStaffReplacement>(this.detach_FactStaffReplacements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementReasonName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReplacementReasonName
		{
			get
			{
				return this._ReplacementReasonName;
			}
			set
			{
				if ((this._ReplacementReasonName != value))
				{
					this.OnReplacementReasonNameChanging(value);
					this.SendPropertyChanging();
					this._ReplacementReasonName = value;
					this.SendPropertyChanged("ReplacementReasonName");
					this.OnReplacementReasonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementReasonShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReplacementReasonShortName
		{
			get
			{
				return this._ReplacementReasonShortName;
			}
			set
			{
				if ((this._ReplacementReasonShortName != value))
				{
					this.OnReplacementReasonShortNameChanging(value);
					this.SendPropertyChanging();
					this._ReplacementReasonShortName = value;
					this.SendPropertyChanged("ReplacementReasonShortName");
					this.OnReplacementReasonShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffReplacementReason_FactStaffReplacement", Storage="_FactStaffReplacements", ThisKey="id", OtherKey="idReplacementReason")]
		public EntitySet<FactStaffReplacement> FactStaffReplacements
		{
			get
			{
				return this._FactStaffReplacements;
			}
			set
			{
				this._FactStaffReplacements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactStaffReplacements(FactStaffReplacement entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffReplacementReason = this;
		}
		
		private void detach_FactStaffReplacements(FactStaffReplacement entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffReplacementReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusPlanStaff")]
	public partial class BonusPlanStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBonus;
		
		private int _idPlanStaff;
		
		private bool _ForVacancy;
		
		private bool _ForEmployee;
		
		private EntityRef<Bonus> _Bonus;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBonusChanging(int value);
    partial void OnidBonusChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnForVacancyChanging(bool value);
    partial void OnForVacancyChanged();
    partial void OnForEmployeeChanging(bool value);
    partial void OnForEmployeeChanged();
    #endregion
		
		public BonusPlanStaff()
		{
			this._Bonus = default(EntityRef<Bonus>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonus", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idBonus
		{
			get
			{
				return this._idBonus;
			}
			set
			{
				if ((this._idBonus != value))
				{
					if (this._Bonus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusChanging(value);
					this.SendPropertyChanging();
					this._idBonus = value;
					this.SendPropertyChanged("idBonus");
					this.OnidBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForVacancy", DbType="Bit NOT NULL")]
		public bool ForVacancy
		{
			get
			{
				return this._ForVacancy;
			}
			set
			{
				if ((this._ForVacancy != value))
				{
					this.OnForVacancyChanging(value);
					this.SendPropertyChanging();
					this._ForVacancy = value;
					this.SendPropertyChanged("ForVacancy");
					this.OnForVacancyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForEmployee", DbType="Bit NOT NULL")]
		public bool ForEmployee
		{
			get
			{
				return this._ForEmployee;
			}
			set
			{
				if ((this._ForEmployee != value))
				{
					this.OnForEmployeeChanging(value);
					this.SendPropertyChanging();
					this._ForEmployee = value;
					this.SendPropertyChanged("ForEmployee");
					this.OnForEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusPlanStaff", Storage="_Bonus", ThisKey="idBonus", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bonus Bonus
		{
			get
			{
				return this._Bonus.Entity;
			}
			set
			{
				Bonus previousValue = this._Bonus.Entity;
				if (((previousValue != value) 
							|| (this._Bonus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus.Entity = null;
						previousValue.BonusPlanStaff = null;
					}
					this._Bonus.Entity = value;
					if ((value != null))
					{
						value.BonusPlanStaff = this;
						this._idBonus = value.id;
					}
					else
					{
						this._idBonus = default(int);
					}
					this.SendPropertyChanged("Bonus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_BonusPlanStaff", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.BonusPlanStaffs.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.BonusPlanStaffs.Add(this);
						this._idPlanStaff = value.id;
					}
					else
					{
						this._idPlanStaff = default(int);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusMeasure")]
	public partial class BonusMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MeasureName;
		
		private string _Sign;
		
		private EntitySet<BonusType> _BonusTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMeasureNameChanging(string value);
    partial void OnMeasureNameChanged();
    partial void OnSignChanging(string value);
    partial void OnSignChanged();
    #endregion
		
		public BonusMeasure()
		{
			this._BonusTypes = new EntitySet<BonusType>(new Action<BonusType>(this.attach_BonusTypes), new Action<BonusType>(this.detach_BonusTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MeasureName
		{
			get
			{
				return this._MeasureName;
			}
			set
			{
				if ((this._MeasureName != value))
				{
					this.OnMeasureNameChanging(value);
					this.SendPropertyChanging();
					this._MeasureName = value;
					this.SendPropertyChanged("MeasureName");
					this.OnMeasureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this.OnSignChanging(value);
					this.SendPropertyChanging();
					this._Sign = value;
					this.SendPropertyChanged("Sign");
					this.OnSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusMeasure_BonusType", Storage="_BonusTypes", ThisKey="id", OtherKey="idBonusMeasure")]
		public EntitySet<BonusType> BonusTypes
		{
			get
			{
				return this._BonusTypes;
			}
			set
			{
				this._BonusTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusTypes(BonusType entity)
		{
			this.SendPropertyChanging();
			entity.BonusMeasure = this;
		}
		
		private void detach_BonusTypes(BonusType entity)
		{
			this.SendPropertyChanging();
			entity.BonusMeasure = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusPost")]
	public partial class BonusPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPost;
		
		private int _idBonus;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Bonus> _Bonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OnidBonusChanging(int value);
    partial void OnidBonusChanged();
    #endregion
		
		public BonusPost()
		{
			this._Post = default(EntityRef<Post>);
			this._Bonus = default(EntityRef<Bonus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonus", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idBonus
		{
			get
			{
				return this._idBonus;
			}
			set
			{
				if ((this._idBonus != value))
				{
					if (this._Bonus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusChanging(value);
					this.SendPropertyChanging();
					this._idBonus = value;
					this.SendPropertyChanged("idBonus");
					this.OnidBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_BonusPost", Storage="_Post", ThisKey="idPost", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.BonusPosts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.BonusPosts.Add(this);
						this._idPost = value.id;
					}
					else
					{
						this._idPost = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusPost", Storage="_Bonus", ThisKey="idBonus", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bonus Bonus
		{
			get
			{
				return this._Bonus.Entity;
			}
			set
			{
				Bonus previousValue = this._Bonus.Entity;
				if (((previousValue != value) 
							|| (this._Bonus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus.Entity = null;
						previousValue.BonusPost = null;
					}
					this._Bonus.Entity = value;
					if ((value != null))
					{
						value.BonusPost = this;
						this._idBonus = value.id;
					}
					else
					{
						this._idBonus = default(int);
					}
					this.SendPropertyChanged("Bonus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusFactStaff")]
	public partial class BonusFactStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBonus;
		
		private int _idFactStaff;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<Bonus> _Bonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBonusChanging(int value);
    partial void OnidBonusChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    #endregion
		
		public BonusFactStaff()
		{
			this._FactStaff = default(EntityRef<FactStaff>);
			this._Bonus = default(EntityRef<Bonus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonus", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idBonus
		{
			get
			{
				return this._idBonus;
			}
			set
			{
				if ((this._idBonus != value))
				{
					if (this._Bonus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusChanging(value);
					this.SendPropertyChanging();
					this._idBonus = value;
					this.SendPropertyChanged("idBonus");
					this.OnidBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_BonusFactStaff", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.BonusFactStaffs.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.BonusFactStaffs.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusFactStaff", Storage="_Bonus", ThisKey="idBonus", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bonus Bonus
		{
			get
			{
				return this._Bonus.Entity;
			}
			set
			{
				Bonus previousValue = this._Bonus.Entity;
				if (((previousValue != value) 
							|| (this._Bonus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus.Entity = null;
						previousValue.BonusFactStaff = null;
					}
					this._Bonus.Entity = value;
					if ((value != null))
					{
						value.BonusFactStaff = this;
						this._idBonus = value.id;
					}
					else
					{
						this._idBonus = default(int);
					}
					this.SendPropertyChanged("Bonus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CategoryName;
		
		private string _CategorySmallName;
		
		private System.Nullable<int> _OrderBy;
		
		private System.Nullable<bool> _IsPPS;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<Post> _Posts1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategorySmallNameChanging(string value);
    partial void OnCategorySmallNameChanged();
    partial void OnOrderByChanging(System.Nullable<int> value);
    partial void OnOrderByChanged();
    partial void OnIsPPSChanging(System.Nullable<bool> value);
    partial void OnIsPPSChanged();
    #endregion
		
		public Category()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Posts1 = new EntitySet<Post>(new Action<Post>(this.attach_Posts1), new Action<Post>(this.detach_Posts1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategorySmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategorySmallName
		{
			get
			{
				return this._CategorySmallName;
			}
			set
			{
				if ((this._CategorySmallName != value))
				{
					this.OnCategorySmallNameChanging(value);
					this.SendPropertyChanging();
					this._CategorySmallName = value;
					this.SendPropertyChanged("CategorySmallName");
					this.OnCategorySmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderBy", DbType="Int")]
		public System.Nullable<int> OrderBy
		{
			get
			{
				return this._OrderBy;
			}
			set
			{
				if ((this._OrderBy != value))
				{
					this.OnOrderByChanging(value);
					this.SendPropertyChanging();
					this._OrderBy = value;
					this.SendPropertyChanged("OrderBy");
					this.OnOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPPS", DbType="Bit")]
		public System.Nullable<bool> IsPPS
		{
			get
			{
				return this._IsPPS;
			}
			set
			{
				if ((this._IsPPS != value))
				{
					this.OnIsPPSChanging(value);
					this.SendPropertyChanging();
					this._IsPPS = value;
					this.SendPropertyChanged("IsPPS");
					this.OnIsPPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Posts", ThisKey="id", OtherKey="idCategory")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post1", Storage="_Posts1", ThisKey="id", OtherKey="idNewCategory")]
		public EntitySet<Post> Posts1
		{
			get
			{
				return this._Posts1;
			}
			set
			{
				this._Posts1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Posts1(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Posts1(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheet")]
	public partial class TimeSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _TimeSheetMonth;
		
		private int _TimeSheetYear;
		
		private int _TimeSheetWorkingDayCount;
		
		private System.Nullable<bool> _IsClosed;
		
		private System.Nullable<bool> _IsFilled;
		
		private System.Nullable<double> _TimeSheetWorkingHourCount;
		
		private EntitySet<TimeSheetFSWorkingDay> _TimeSheetFSWorkingDays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTimeSheetMonthChanging(int value);
    partial void OnTimeSheetMonthChanged();
    partial void OnTimeSheetYearChanging(int value);
    partial void OnTimeSheetYearChanged();
    partial void OnTimeSheetWorkingDayCountChanging(int value);
    partial void OnTimeSheetWorkingDayCountChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnIsFilledChanging(System.Nullable<bool> value);
    partial void OnIsFilledChanged();
    partial void OnTimeSheetWorkingHourCountChanging(System.Nullable<double> value);
    partial void OnTimeSheetWorkingHourCountChanged();
    #endregion
		
		public TimeSheet()
		{
			this._TimeSheetFSWorkingDays = new EntitySet<TimeSheetFSWorkingDay>(new Action<TimeSheetFSWorkingDay>(this.attach_TimeSheetFSWorkingDays), new Action<TimeSheetFSWorkingDay>(this.detach_TimeSheetFSWorkingDays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetMonth", DbType="Int NOT NULL")]
		public int TimeSheetMonth
		{
			get
			{
				return this._TimeSheetMonth;
			}
			set
			{
				if ((this._TimeSheetMonth != value))
				{
					this.OnTimeSheetMonthChanging(value);
					this.SendPropertyChanging();
					this._TimeSheetMonth = value;
					this.SendPropertyChanged("TimeSheetMonth");
					this.OnTimeSheetMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetYear", DbType="Int NOT NULL")]
		public int TimeSheetYear
		{
			get
			{
				return this._TimeSheetYear;
			}
			set
			{
				if ((this._TimeSheetYear != value))
				{
					this.OnTimeSheetYearChanging(value);
					this.SendPropertyChanging();
					this._TimeSheetYear = value;
					this.SendPropertyChanged("TimeSheetYear");
					this.OnTimeSheetYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetWorkingDayCount", DbType="Int NOT NULL")]
		public int TimeSheetWorkingDayCount
		{
			get
			{
				return this._TimeSheetWorkingDayCount;
			}
			set
			{
				if ((this._TimeSheetWorkingDayCount != value))
				{
					this.OnTimeSheetWorkingDayCountChanging(value);
					this.SendPropertyChanging();
					this._TimeSheetWorkingDayCount = value;
					this.SendPropertyChanged("TimeSheetWorkingDayCount");
					this.OnTimeSheetWorkingDayCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFilled", DbType="Bit")]
		public System.Nullable<bool> IsFilled
		{
			get
			{
				return this._IsFilled;
			}
			set
			{
				if ((this._IsFilled != value))
				{
					this.OnIsFilledChanging(value);
					this.SendPropertyChanging();
					this._IsFilled = value;
					this.SendPropertyChanged("IsFilled");
					this.OnIsFilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetWorkingHourCount", DbType="Float")]
		public System.Nullable<double> TimeSheetWorkingHourCount
		{
			get
			{
				return this._TimeSheetWorkingHourCount;
			}
			set
			{
				if ((this._TimeSheetWorkingHourCount != value))
				{
					this.OnTimeSheetWorkingHourCountChanging(value);
					this.SendPropertyChanging();
					this._TimeSheetWorkingHourCount = value;
					this.SendPropertyChanged("TimeSheetWorkingHourCount");
					this.OnTimeSheetWorkingHourCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheet_TimeSheetFSWorkingDay", Storage="_TimeSheetFSWorkingDays", ThisKey="id", OtherKey="idTimeSheet")]
		public EntitySet<TimeSheetFSWorkingDay> TimeSheetFSWorkingDays
		{
			get
			{
				return this._TimeSheetFSWorkingDays;
			}
			set
			{
				this._TimeSheetFSWorkingDays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeSheetFSWorkingDays(TimeSheetFSWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheet = this;
		}
		
		private void detach_TimeSheetFSWorkingDays(TimeSheetFSWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OK_Otpuskvid")]
	public partial class OK_Otpuskvid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idotpuskvid;
		
		private string _otpuskvidname;
		
		private System.Nullable<int> _idDayStatus;
		
		private bool _isMaternity;
		
		private string _otpTypeShortName;
		
		private EntitySet<OK_Otpusk> _OK_Otpusks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidotpuskvidChanging(int value);
    partial void OnidotpuskvidChanged();
    partial void OnotpuskvidnameChanging(string value);
    partial void OnotpuskvidnameChanged();
    partial void OnidDayStatusChanging(System.Nullable<int> value);
    partial void OnidDayStatusChanged();
    partial void OnisMaternityChanging(bool value);
    partial void OnisMaternityChanged();
    partial void OnotpTypeShortNameChanging(string value);
    partial void OnotpTypeShortNameChanged();
    #endregion
		
		public OK_Otpuskvid()
		{
			this._OK_Otpusks = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusks), new Action<OK_Otpusk>(this.detach_OK_Otpusks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idotpuskvid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idotpuskvid
		{
			get
			{
				return this._idotpuskvid;
			}
			set
			{
				if ((this._idotpuskvid != value))
				{
					this.OnidotpuskvidChanging(value);
					this.SendPropertyChanging();
					this._idotpuskvid = value;
					this.SendPropertyChanged("idotpuskvid");
					this.OnidotpuskvidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otpuskvidname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string otpuskvidname
		{
			get
			{
				return this._otpuskvidname;
			}
			set
			{
				if ((this._otpuskvidname != value))
				{
					this.OnotpuskvidnameChanging(value);
					this.SendPropertyChanging();
					this._otpuskvidname = value;
					this.SendPropertyChanged("otpuskvidname");
					this.OnotpuskvidnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDayStatus", DbType="Int")]
		public System.Nullable<int> idDayStatus
		{
			get
			{
				return this._idDayStatus;
			}
			set
			{
				if ((this._idDayStatus != value))
				{
					this.OnidDayStatusChanging(value);
					this.SendPropertyChanging();
					this._idDayStatus = value;
					this.SendPropertyChanged("idDayStatus");
					this.OnidDayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMaternity", DbType="Bit NOT NULL")]
		public bool isMaternity
		{
			get
			{
				return this._isMaternity;
			}
			set
			{
				if ((this._isMaternity != value))
				{
					this.OnisMaternityChanging(value);
					this.SendPropertyChanging();
					this._isMaternity = value;
					this.SendPropertyChanged("isMaternity");
					this.OnisMaternityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otpTypeShortName", DbType="VarChar(10)")]
		public string otpTypeShortName
		{
			get
			{
				return this._otpTypeShortName;
			}
			set
			{
				if ((this._otpTypeShortName != value))
				{
					this.OnotpTypeShortNameChanging(value);
					this.SendPropertyChanging();
					this._otpTypeShortName = value;
					this.SendPropertyChanged("otpTypeShortName");
					this.OnotpTypeShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OK_Otpuskvid_OK_Otpusk", Storage="_OK_Otpusks", ThisKey="idotpuskvid", OtherKey="idOtpuskVid")]
		public EntitySet<OK_Otpusk> OK_Otpusks
		{
			get
			{
				return this._OK_Otpusks;
			}
			set
			{
				this._OK_Otpusks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.OK_Otpuskvid = this;
		}
		
		private void detach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.OK_Otpuskvid = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusReport")]
	public partial class BonusReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ReporName;
		
		private bool _WithManagers;
		
		private bool _SalaryFirst;
		
		private bool _DefaultBonusOrder;
		
		private bool _WithReplacements;
		
		private EntitySet<BonusReportColumn> _BonusReportColumns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnReporNameChanging(string value);
    partial void OnReporNameChanged();
    partial void OnWithManagersChanging(bool value);
    partial void OnWithManagersChanged();
    partial void OnSalaryFirstChanging(bool value);
    partial void OnSalaryFirstChanged();
    partial void OnDefaultBonusOrderChanging(bool value);
    partial void OnDefaultBonusOrderChanged();
    partial void OnWithReplacementsChanging(bool value);
    partial void OnWithReplacementsChanged();
    #endregion
		
		public BonusReport()
		{
			this._BonusReportColumns = new EntitySet<BonusReportColumn>(new Action<BonusReportColumn>(this.attach_BonusReportColumns), new Action<BonusReportColumn>(this.detach_BonusReportColumns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReporName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReporName
		{
			get
			{
				return this._ReporName;
			}
			set
			{
				if ((this._ReporName != value))
				{
					this.OnReporNameChanging(value);
					this.SendPropertyChanging();
					this._ReporName = value;
					this.SendPropertyChanged("ReporName");
					this.OnReporNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithManagers", DbType="Bit NOT NULL")]
		public bool WithManagers
		{
			get
			{
				return this._WithManagers;
			}
			set
			{
				if ((this._WithManagers != value))
				{
					this.OnWithManagersChanging(value);
					this.SendPropertyChanging();
					this._WithManagers = value;
					this.SendPropertyChanged("WithManagers");
					this.OnWithManagersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryFirst", DbType="Bit NOT NULL")]
		public bool SalaryFirst
		{
			get
			{
				return this._SalaryFirst;
			}
			set
			{
				if ((this._SalaryFirst != value))
				{
					this.OnSalaryFirstChanging(value);
					this.SendPropertyChanging();
					this._SalaryFirst = value;
					this.SendPropertyChanged("SalaryFirst");
					this.OnSalaryFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultBonusOrder", DbType="Bit NOT NULL")]
		public bool DefaultBonusOrder
		{
			get
			{
				return this._DefaultBonusOrder;
			}
			set
			{
				if ((this._DefaultBonusOrder != value))
				{
					this.OnDefaultBonusOrderChanging(value);
					this.SendPropertyChanging();
					this._DefaultBonusOrder = value;
					this.SendPropertyChanged("DefaultBonusOrder");
					this.OnDefaultBonusOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithReplacements", DbType="Bit NOT NULL")]
		public bool WithReplacements
		{
			get
			{
				return this._WithReplacements;
			}
			set
			{
				if ((this._WithReplacements != value))
				{
					this.OnWithReplacementsChanging(value);
					this.SendPropertyChanging();
					this._WithReplacements = value;
					this.SendPropertyChanged("WithReplacements");
					this.OnWithReplacementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusReport_BonusReportColumn", Storage="_BonusReportColumns", ThisKey="id", OtherKey="idBonusReport")]
		public EntitySet<BonusReportColumn> BonusReportColumns
		{
			get
			{
				return this._BonusReportColumns;
			}
			set
			{
				this._BonusReportColumns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusReportColumns(BonusReportColumn entity)
		{
			this.SendPropertyChanging();
			entity.BonusReport = this;
		}
		
		private void detach_BonusReportColumns(BonusReportColumn entity)
		{
			this.SendPropertyChanging();
			entity.BonusReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusReportColumns")]
	public partial class BonusReportColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idBonusReport;
		
		private int _idBonusType;
		
		private int _BonusOrderNumber;
		
		private EntityRef<BonusReport> _BonusReport;
		
		private EntityRef<BonusType> _BonusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidBonusReportChanging(int value);
    partial void OnidBonusReportChanged();
    partial void OnidBonusTypeChanging(int value);
    partial void OnidBonusTypeChanged();
    partial void OnBonusOrderNumberChanging(int value);
    partial void OnBonusOrderNumberChanged();
    #endregion
		
		public BonusReportColumn()
		{
			this._BonusReport = default(EntityRef<BonusReport>);
			this._BonusType = default(EntityRef<BonusType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonusReport", DbType="Int NOT NULL")]
		public int idBonusReport
		{
			get
			{
				return this._idBonusReport;
			}
			set
			{
				if ((this._idBonusReport != value))
				{
					if (this._BonusReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusReportChanging(value);
					this.SendPropertyChanging();
					this._idBonusReport = value;
					this.SendPropertyChanged("idBonusReport");
					this.OnidBonusReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonusType", DbType="Int NOT NULL")]
		public int idBonusType
		{
			get
			{
				return this._idBonusType;
			}
			set
			{
				if ((this._idBonusType != value))
				{
					if (this._BonusType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusTypeChanging(value);
					this.SendPropertyChanging();
					this._idBonusType = value;
					this.SendPropertyChanged("idBonusType");
					this.OnidBonusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusOrderNumber", DbType="Int NOT NULL")]
		public int BonusOrderNumber
		{
			get
			{
				return this._BonusOrderNumber;
			}
			set
			{
				if ((this._BonusOrderNumber != value))
				{
					this.OnBonusOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._BonusOrderNumber = value;
					this.SendPropertyChanged("BonusOrderNumber");
					this.OnBonusOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusReport_BonusReportColumn", Storage="_BonusReport", ThisKey="idBonusReport", OtherKey="id", IsForeignKey=true)]
		public BonusReport BonusReport
		{
			get
			{
				return this._BonusReport.Entity;
			}
			set
			{
				BonusReport previousValue = this._BonusReport.Entity;
				if (((previousValue != value) 
							|| (this._BonusReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusReport.Entity = null;
						previousValue.BonusReportColumns.Remove(this);
					}
					this._BonusReport.Entity = value;
					if ((value != null))
					{
						value.BonusReportColumns.Add(this);
						this._idBonusReport = value.id;
					}
					else
					{
						this._idBonusReport = default(int);
					}
					this.SendPropertyChanged("BonusReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusType_BonusReportColumn", Storage="_BonusType", ThisKey="idBonusType", OtherKey="id", IsForeignKey=true)]
		public BonusType BonusType
		{
			get
			{
				return this._BonusType.Entity;
			}
			set
			{
				BonusType previousValue = this._BonusType.Entity;
				if (((previousValue != value) 
							|| (this._BonusType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusType.Entity = null;
						previousValue.BonusReportColumns.Remove(this);
					}
					this._BonusType.Entity = value;
					if ((value != null))
					{
						value.BonusReportColumns.Add(this);
						this._idBonusType = value.id;
					}
					else
					{
						this._idBonusType = default(int);
					}
					this.SendPropertyChanged("BonusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ShemaTabel.WorkShedule")]
	public partial class WorkShedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NameShedule;
		
		private EntitySet<PlanStaff> _PlanStaffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameSheduleChanging(string value);
    partial void OnNameSheduleChanged();
    #endregion
		
		public WorkShedule()
		{
			this._PlanStaffs = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaffs), new Action<PlanStaff>(this.detach_PlanStaffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameShedule", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameShedule
		{
			get
			{
				return this._NameShedule;
			}
			set
			{
				if ((this._NameShedule != value))
				{
					this.OnNameSheduleChanging(value);
					this.SendPropertyChanging();
					this._NameShedule = value;
					this.SendPropertyChanged("NameShedule");
					this.OnNameSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkShedule_PlanStaff", Storage="_PlanStaffs", ThisKey="id", OtherKey="IdWorkShedule")]
		public EntitySet<PlanStaff> PlanStaffs
		{
			get
			{
				return this._PlanStaffs;
			}
			set
			{
				this._PlanStaffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.WorkShedule = this;
		}
		
		private void detach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.WorkShedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheetDayState")]
	public partial class TimeSheetDayState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DayStateName;
		
		private bool _IsRequired;
		
		private string _DayStateShortName;
		
		private System.Nullable<bool> _IsWorking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDayStateNameChanging(string value);
    partial void OnDayStateNameChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    partial void OnDayStateShortNameChanging(string value);
    partial void OnDayStateShortNameChanged();
    partial void OnIsWorkingChanging(System.Nullable<bool> value);
    partial void OnIsWorkingChanged();
    #endregion
		
		public TimeSheetDayState()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayStateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DayStateName
		{
			get
			{
				return this._DayStateName;
			}
			set
			{
				if ((this._DayStateName != value))
				{
					this.OnDayStateNameChanging(value);
					this.SendPropertyChanging();
					this._DayStateName = value;
					this.SendPropertyChanged("DayStateName");
					this.OnDayStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayStateShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DayStateShortName
		{
			get
			{
				return this._DayStateShortName;
			}
			set
			{
				if ((this._DayStateShortName != value))
				{
					this.OnDayStateShortNameChanging(value);
					this.SendPropertyChanging();
					this._DayStateShortName = value;
					this.SendPropertyChanged("DayStateShortName");
					this.OnDayStateShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWorking", DbType="Bit")]
		public System.Nullable<bool> IsWorking
		{
			get
			{
				return this._IsWorking;
			}
			set
			{
				if ((this._IsWorking != value))
				{
					this.OnIsWorkingChanging(value);
					this.SendPropertyChanging();
					this._IsWorking = value;
					this.SendPropertyChanged("IsWorking");
					this.OnIsWorkingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalaryKoeff")]
	public partial class SalaryKoeff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _PKSubSubCategoryNumber;
		
		private decimal _SalaryKoeffc;
		
		private EntitySet<PKCategory> _PKCategories;
		
		private EntitySet<FactStaffHistory> _FactStaffHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPKSubSubCategoryNumberChanging(int value);
    partial void OnPKSubSubCategoryNumberChanged();
    partial void OnSalaryKoeffcChanging(decimal value);
    partial void OnSalaryKoeffcChanged();
    #endregion
		
		public SalaryKoeff()
		{
			this._PKCategories = new EntitySet<PKCategory>(new Action<PKCategory>(this.attach_PKCategories), new Action<PKCategory>(this.detach_PKCategories));
			this._FactStaffHistories = new EntitySet<FactStaffHistory>(new Action<FactStaffHistory>(this.attach_FactStaffHistories), new Action<FactStaffHistory>(this.detach_FactStaffHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKSubSubCategoryNumber", DbType="Int NOT NULL")]
		public int PKSubSubCategoryNumber
		{
			get
			{
				return this._PKSubSubCategoryNumber;
			}
			set
			{
				if ((this._PKSubSubCategoryNumber != value))
				{
					this.OnPKSubSubCategoryNumberChanging(value);
					this.SendPropertyChanging();
					this._PKSubSubCategoryNumber = value;
					this.SendPropertyChanged("PKSubSubCategoryNumber");
					this.OnPKSubSubCategoryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryKoeffc", DbType="Decimal(6,2) NOT NULL")]
		public decimal SalaryKoeffc
		{
			get
			{
				return this._SalaryKoeffc;
			}
			set
			{
				if ((this._SalaryKoeffc != value))
				{
					this.OnSalaryKoeffcChanging(value);
					this.SendPropertyChanging();
					this._SalaryKoeffc = value;
					this.SendPropertyChanged("SalaryKoeffc");
					this.OnSalaryKoeffcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalaryKoeff_PKCategory", Storage="_PKCategories", ThisKey="id", OtherKey="idSalaryKoeff")]
		public EntitySet<PKCategory> PKCategories
		{
			get
			{
				return this._PKCategories;
			}
			set
			{
				this._PKCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalaryKoeff_FactStaffHistory", Storage="_FactStaffHistories", ThisKey="id", OtherKey="idSalaryKoeff")]
		public EntitySet<FactStaffHistory> FactStaffHistories
		{
			get
			{
				return this._FactStaffHistories;
			}
			set
			{
				this._FactStaffHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PKCategories(PKCategory entity)
		{
			this.SendPropertyChanging();
			entity.SalaryKoeff = this;
		}
		
		private void detach_PKCategories(PKCategory entity)
		{
			this.SendPropertyChanging();
			entity.SalaryKoeff = null;
		}
		
		private void attach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalaryKoeff = this;
		}
		
		private void detach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalaryKoeff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkType")]
	public partial class WorkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TypeWorkName;
		
		private string _TypeWorkShortName;
		
		private bool _IsReplacement;
		
		private bool _IsMain;
		
		private System.Nullable<int> _idWorkSuperType;
		
		private EntitySet<FactStaffHistory> _FactStaffHistories;
		
		private EntityRef<WorkSuperType> _WorkSuperType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTypeWorkNameChanging(string value);
    partial void OnTypeWorkNameChanged();
    partial void OnTypeWorkShortNameChanging(string value);
    partial void OnTypeWorkShortNameChanged();
    partial void OnIsReplacementChanging(bool value);
    partial void OnIsReplacementChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnidWorkSuperTypeChanging(System.Nullable<int> value);
    partial void OnidWorkSuperTypeChanged();
    #endregion
		
		public WorkType()
		{
			this._FactStaffHistories = new EntitySet<FactStaffHistory>(new Action<FactStaffHistory>(this.attach_FactStaffHistories), new Action<FactStaffHistory>(this.detach_FactStaffHistories));
			this._WorkSuperType = default(EntityRef<WorkSuperType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeWorkName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeWorkName
		{
			get
			{
				return this._TypeWorkName;
			}
			set
			{
				if ((this._TypeWorkName != value))
				{
					this.OnTypeWorkNameChanging(value);
					this.SendPropertyChanging();
					this._TypeWorkName = value;
					this.SendPropertyChanged("TypeWorkName");
					this.OnTypeWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeWorkShortName", DbType="VarChar(50)")]
		public string TypeWorkShortName
		{
			get
			{
				return this._TypeWorkShortName;
			}
			set
			{
				if ((this._TypeWorkShortName != value))
				{
					this.OnTypeWorkShortNameChanging(value);
					this.SendPropertyChanging();
					this._TypeWorkShortName = value;
					this.SendPropertyChanged("TypeWorkShortName");
					this.OnTypeWorkShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this.OnIsReplacementChanging(value);
					this.SendPropertyChanging();
					this._IsReplacement = value;
					this.SendPropertyChanged("IsReplacement");
					this.OnIsReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idWorkSuperType", DbType="Int")]
		public System.Nullable<int> idWorkSuperType
		{
			get
			{
				return this._idWorkSuperType;
			}
			set
			{
				if ((this._idWorkSuperType != value))
				{
					if (this._WorkSuperType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidWorkSuperTypeChanging(value);
					this.SendPropertyChanging();
					this._idWorkSuperType = value;
					this.SendPropertyChanged("idWorkSuperType");
					this.OnidWorkSuperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkType_FactStaffHistory", Storage="_FactStaffHistories", ThisKey="id", OtherKey="idTypeWork")]
		public EntitySet<FactStaffHistory> FactStaffHistories
		{
			get
			{
				return this._FactStaffHistories;
			}
			set
			{
				this._FactStaffHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSuperType_WorkType", Storage="_WorkSuperType", ThisKey="idWorkSuperType", OtherKey="id", IsForeignKey=true)]
		public WorkSuperType WorkSuperType
		{
			get
			{
				return this._WorkSuperType.Entity;
			}
			set
			{
				WorkSuperType previousValue = this._WorkSuperType.Entity;
				if (((previousValue != value) 
							|| (this._WorkSuperType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkSuperType.Entity = null;
						previousValue.WorkTypes.Remove(this);
					}
					this._WorkSuperType.Entity = value;
					if ((value != null))
					{
						value.WorkTypes.Add(this);
						this._idWorkSuperType = value.id;
					}
					else
					{
						this._idWorkSuperType = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkSuperType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkType = this;
		}
		
		private void detach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffReplacement")]
	public partial class FactStaffReplacement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFactStaff;
		
		private int _idReplacedFactStaff;
		
		private int _idReplacementReason;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private EntityRef<FactStaffReplacementReason> _FactStaffReplacementReason;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<FactStaff> _FactStaff1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnidReplacedFactStaffChanging(int value);
    partial void OnidReplacedFactStaffChanged();
    partial void OnidReplacementReasonChanging(int value);
    partial void OnidReplacementReasonChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public FactStaffReplacement()
		{
			this._FactStaffReplacementReason = default(EntityRef<FactStaffReplacementReason>);
			this._FactStaff = default(EntityRef<FactStaff>);
			this._FactStaff1 = default(EntityRef<FactStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReplacedFactStaff", DbType="Int NOT NULL")]
		public int idReplacedFactStaff
		{
			get
			{
				return this._idReplacedFactStaff;
			}
			set
			{
				if ((this._idReplacedFactStaff != value))
				{
					if (this._FactStaff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidReplacedFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idReplacedFactStaff = value;
					this.SendPropertyChanged("idReplacedFactStaff");
					this.OnidReplacedFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReplacementReason", DbType="Int NOT NULL")]
		public int idReplacementReason
		{
			get
			{
				return this._idReplacementReason;
			}
			set
			{
				if ((this._idReplacementReason != value))
				{
					if (this._FactStaffReplacementReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidReplacementReasonChanging(value);
					this.SendPropertyChanging();
					this._idReplacementReason = value;
					this.SendPropertyChanged("idReplacementReason");
					this.OnidReplacementReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffReplacementReason_FactStaffReplacement", Storage="_FactStaffReplacementReason", ThisKey="idReplacementReason", OtherKey="id", IsForeignKey=true)]
		public FactStaffReplacementReason FactStaffReplacementReason
		{
			get
			{
				return this._FactStaffReplacementReason.Entity;
			}
			set
			{
				FactStaffReplacementReason previousValue = this._FactStaffReplacementReason.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffReplacementReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffReplacementReason.Entity = null;
						previousValue.FactStaffReplacements.Remove(this);
					}
					this._FactStaffReplacementReason.Entity = value;
					if ((value != null))
					{
						value.FactStaffReplacements.Add(this);
						this._idReplacementReason = value.id;
					}
					else
					{
						this._idReplacementReason = default(int);
					}
					this.SendPropertyChanged("FactStaffReplacementReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffReplacement = null;
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffReplacement = this;
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement1", Storage="_FactStaff1", ThisKey="idReplacedFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff1
		{
			get
			{
				return this._FactStaff1.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff1.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff1.Entity = null;
						previousValue.FactStaffReplacements.Remove(this);
					}
					this._FactStaff1.Entity = value;
					if ((value != null))
					{
						value.FactStaffReplacements.Add(this);
						this._idReplacedFactStaff = value.id;
					}
					else
					{
						this._idReplacedFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostType")]
	public partial class PostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PostTypeName;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostTypeNameChanging(string value);
    partial void OnPostTypeNameChanged();
    #endregion
		
		public PostType()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PostTypeName
		{
			get
			{
				return this._PostTypeName;
			}
			set
			{
				if ((this._PostTypeName != value))
				{
					this.OnPostTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PostTypeName = value;
					this.SendPropertyChanged("PostTypeName");
					this.OnPostTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostType_Post", Storage="_Posts", ThisKey="id", OtherKey="idPostType")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostType = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentFund")]
	public partial class DepartmentFund : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDepartment;
		
		private System.DateTime _DateBegin;
		
		private decimal _PlanFundSum;
		
		private decimal _FactFundSum;
		
		private decimal _ExtraordSum;
		
		private EntityRef<Dep> _Dep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnPlanFundSumChanging(decimal value);
    partial void OnPlanFundSumChanged();
    partial void OnFactFundSumChanging(decimal value);
    partial void OnFactFundSumChanged();
    partial void OnExtraordSumChanging(decimal value);
    partial void OnExtraordSumChanged();
    #endregion
		
		public DepartmentFund()
		{
			this._Dep = default(EntityRef<Dep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanFundSum", DbType="Decimal(18,2) NOT NULL")]
		public decimal PlanFundSum
		{
			get
			{
				return this._PlanFundSum;
			}
			set
			{
				if ((this._PlanFundSum != value))
				{
					this.OnPlanFundSumChanging(value);
					this.SendPropertyChanging();
					this._PlanFundSum = value;
					this.SendPropertyChanged("PlanFundSum");
					this.OnPlanFundSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactFundSum", DbType="Decimal(18,2) NOT NULL")]
		public decimal FactFundSum
		{
			get
			{
				return this._FactFundSum;
			}
			set
			{
				if ((this._FactFundSum != value))
				{
					this.OnFactFundSumChanging(value);
					this.SendPropertyChanging();
					this._FactFundSum = value;
					this.SendPropertyChanged("FactFundSum");
					this.OnFactFundSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraordSum", DbType="Decimal(18,2) NOT NULL")]
		public decimal ExtraordSum
		{
			get
			{
				return this._ExtraordSum;
			}
			set
			{
				if ((this._ExtraordSum != value))
				{
					this.OnExtraordSumChanging(value);
					this.SendPropertyChanging();
					this._ExtraordSum = value;
					this.SendPropertyChanged("ExtraordSum");
					this.OnExtraordSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentFund", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.DepartmentFunds.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.DepartmentFunds.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PKCategory")]
	public partial class PKCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPKGroup;
		
		private int _PKCategoryNumber;
		
		private int _PKSubCategoryNumber;
		
		private string _PKComment;
		
		private System.Nullable<int> _PKSubSubCategoryNumber;
		
		private System.Nullable<int> _idSalaryKoeff;
		
		private EntitySet<PKCategorySalary> _PKCategorySalaries;
		
		private EntitySet<Post> _Posts;
		
		private EntityRef<PKGroup> _PKGroup;
		
		private EntityRef<SalaryKoeff> _SalaryKoeff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPKGroupChanging(int value);
    partial void OnidPKGroupChanged();
    partial void OnPKCategoryNumberChanging(int value);
    partial void OnPKCategoryNumberChanged();
    partial void OnPKSubCategoryNumberChanging(int value);
    partial void OnPKSubCategoryNumberChanged();
    partial void OnPKCommentChanging(string value);
    partial void OnPKCommentChanged();
    partial void OnPKSubSubCategoryNumberChanging(System.Nullable<int> value);
    partial void OnPKSubSubCategoryNumberChanged();
    partial void OnidSalaryKoeffChanging(System.Nullable<int> value);
    partial void OnidSalaryKoeffChanged();
    #endregion
		
		public PKCategory()
		{
			this._PKCategorySalaries = new EntitySet<PKCategorySalary>(new Action<PKCategorySalary>(this.attach_PKCategorySalaries), new Action<PKCategorySalary>(this.detach_PKCategorySalaries));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._PKGroup = default(EntityRef<PKGroup>);
			this._SalaryKoeff = default(EntityRef<SalaryKoeff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPKGroup", DbType="Int NOT NULL")]
		public int idPKGroup
		{
			get
			{
				return this._idPKGroup;
			}
			set
			{
				if ((this._idPKGroup != value))
				{
					if (this._PKGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPKGroupChanging(value);
					this.SendPropertyChanging();
					this._idPKGroup = value;
					this.SendPropertyChanged("idPKGroup");
					this.OnidPKGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCategoryNumber", DbType="Int NOT NULL")]
		public int PKCategoryNumber
		{
			get
			{
				return this._PKCategoryNumber;
			}
			set
			{
				if ((this._PKCategoryNumber != value))
				{
					this.OnPKCategoryNumberChanging(value);
					this.SendPropertyChanging();
					this._PKCategoryNumber = value;
					this.SendPropertyChanged("PKCategoryNumber");
					this.OnPKCategoryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKSubCategoryNumber", DbType="Int NOT NULL")]
		public int PKSubCategoryNumber
		{
			get
			{
				return this._PKSubCategoryNumber;
			}
			set
			{
				if ((this._PKSubCategoryNumber != value))
				{
					this.OnPKSubCategoryNumberChanging(value);
					this.SendPropertyChanging();
					this._PKSubCategoryNumber = value;
					this.SendPropertyChanged("PKSubCategoryNumber");
					this.OnPKSubCategoryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKComment", DbType="VarChar(200)")]
		public string PKComment
		{
			get
			{
				return this._PKComment;
			}
			set
			{
				if ((this._PKComment != value))
				{
					this.OnPKCommentChanging(value);
					this.SendPropertyChanging();
					this._PKComment = value;
					this.SendPropertyChanged("PKComment");
					this.OnPKCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKSubSubCategoryNumber", DbType="Int")]
		public System.Nullable<int> PKSubSubCategoryNumber
		{
			get
			{
				return this._PKSubSubCategoryNumber;
			}
			set
			{
				if ((this._PKSubSubCategoryNumber != value))
				{
					this.OnPKSubSubCategoryNumberChanging(value);
					this.SendPropertyChanging();
					this._PKSubSubCategoryNumber = value;
					this.SendPropertyChanged("PKSubSubCategoryNumber");
					this.OnPKSubSubCategoryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSalaryKoeff", DbType="Int")]
		public System.Nullable<int> idSalaryKoeff
		{
			get
			{
				return this._idSalaryKoeff;
			}
			set
			{
				if ((this._idSalaryKoeff != value))
				{
					if (this._SalaryKoeff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSalaryKoeffChanging(value);
					this.SendPropertyChanging();
					this._idSalaryKoeff = value;
					this.SendPropertyChanged("idSalaryKoeff");
					this.OnidSalaryKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PKCategory_PKCategorySalary", Storage="_PKCategorySalaries", ThisKey="id", OtherKey="idPKCategory")]
		public EntitySet<PKCategorySalary> PKCategorySalaries
		{
			get
			{
				return this._PKCategorySalaries;
			}
			set
			{
				this._PKCategorySalaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PKCategory_Post", Storage="_Posts", ThisKey="id", OtherKey="idPKCategory")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PKGroup_PKCategory", Storage="_PKGroup", ThisKey="idPKGroup", OtherKey="id", IsForeignKey=true)]
		public PKGroup PKGroup
		{
			get
			{
				return this._PKGroup.Entity;
			}
			set
			{
				PKGroup previousValue = this._PKGroup.Entity;
				if (((previousValue != value) 
							|| (this._PKGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PKGroup.Entity = null;
						previousValue.PKCategories.Remove(this);
					}
					this._PKGroup.Entity = value;
					if ((value != null))
					{
						value.PKCategories.Add(this);
						this._idPKGroup = value.id;
					}
					else
					{
						this._idPKGroup = default(int);
					}
					this.SendPropertyChanged("PKGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalaryKoeff_PKCategory", Storage="_SalaryKoeff", ThisKey="idSalaryKoeff", OtherKey="id", IsForeignKey=true)]
		public SalaryKoeff SalaryKoeff
		{
			get
			{
				return this._SalaryKoeff.Entity;
			}
			set
			{
				SalaryKoeff previousValue = this._SalaryKoeff.Entity;
				if (((previousValue != value) 
							|| (this._SalaryKoeff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalaryKoeff.Entity = null;
						previousValue.PKCategories.Remove(this);
					}
					this._SalaryKoeff.Entity = value;
					if ((value != null))
					{
						value.PKCategories.Add(this);
						this._idSalaryKoeff = value.id;
					}
					else
					{
						this._idSalaryKoeff = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalaryKoeff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PKCategorySalaries(PKCategorySalary entity)
		{
			this.SendPropertyChanging();
			entity.PKCategory = this;
		}
		
		private void detach_PKCategorySalaries(PKCategorySalary entity)
		{
			this.SendPropertyChanging();
			entity.PKCategory = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PKCategory = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PKCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffHistory")]
	public partial class FactStaffHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idFactStaff;
		
		private System.Nullable<int> _idBeginPrikaz;
		
		private System.DateTime _DateBegin;
		
		private decimal _StaffCount;
		
		private int _idTypeWork;
		
		private System.Nullable<int> _idlaborcontrakt;
		
		private System.Nullable<decimal> _HourCount;
		
		private System.Nullable<decimal> _HourSalary;
		
		private System.Nullable<int> _idSalaryKoeff;
		
		private System.Nullable<decimal> _HourStaffCount;
		
		private decimal _CalcStaffCount;
		
		private System.Nullable<decimal> _HourFullSalary;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<SalaryKoeff> _SalaryKoeff;
		
		private EntityRef<WorkType> _WorkType;
		
		private EntityRef<FactStaff> _FactStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnidBeginPrikazChanging(System.Nullable<int> value);
    partial void OnidBeginPrikazChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnStaffCountChanging(decimal value);
    partial void OnStaffCountChanged();
    partial void OnidTypeWorkChanging(int value);
    partial void OnidTypeWorkChanged();
    partial void OnidlaborcontraktChanging(System.Nullable<int> value);
    partial void OnidlaborcontraktChanged();
    partial void OnHourCountChanging(System.Nullable<decimal> value);
    partial void OnHourCountChanged();
    partial void OnHourSalaryChanging(System.Nullable<decimal> value);
    partial void OnHourSalaryChanged();
    partial void OnidSalaryKoeffChanging(System.Nullable<int> value);
    partial void OnidSalaryKoeffChanged();
    partial void OnHourStaffCountChanging(System.Nullable<decimal> value);
    partial void OnHourStaffCountChanged();
    partial void OnCalcStaffCountChanging(decimal value);
    partial void OnCalcStaffCountChanged();
    partial void OnHourFullSalaryChanging(System.Nullable<decimal> value);
    partial void OnHourFullSalaryChanged();
    #endregion
		
		public FactStaffHistory()
		{
			this._Prikaz = default(EntityRef<Prikaz>);
			this._SalaryKoeff = default(EntityRef<SalaryKoeff>);
			this._WorkType = default(EntityRef<WorkType>);
			this._FactStaff = default(EntityRef<FactStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int")]
		public System.Nullable<int> idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(6,4) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this.OnStaffCountChanging(value);
					this.SendPropertyChanging();
					this._StaffCount = value;
					this.SendPropertyChanged("StaffCount");
					this.OnStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeWork", DbType="Int NOT NULL")]
		public int idTypeWork
		{
			get
			{
				return this._idTypeWork;
			}
			set
			{
				if ((this._idTypeWork != value))
				{
					if (this._WorkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeWorkChanging(value);
					this.SendPropertyChanging();
					this._idTypeWork = value;
					this.SendPropertyChanged("idTypeWork");
					this.OnidTypeWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlaborcontrakt", DbType="Int")]
		public System.Nullable<int> idlaborcontrakt
		{
			get
			{
				return this._idlaborcontrakt;
			}
			set
			{
				if ((this._idlaborcontrakt != value))
				{
					this.OnidlaborcontraktChanging(value);
					this.SendPropertyChanging();
					this._idlaborcontrakt = value;
					this.SendPropertyChanged("idlaborcontrakt");
					this.OnidlaborcontraktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourCount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourCount
		{
			get
			{
				return this._HourCount;
			}
			set
			{
				if ((this._HourCount != value))
				{
					this.OnHourCountChanging(value);
					this.SendPropertyChanging();
					this._HourCount = value;
					this.SendPropertyChanged("HourCount");
					this.OnHourCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourSalary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourSalary
		{
			get
			{
				return this._HourSalary;
			}
			set
			{
				if ((this._HourSalary != value))
				{
					this.OnHourSalaryChanging(value);
					this.SendPropertyChanging();
					this._HourSalary = value;
					this.SendPropertyChanged("HourSalary");
					this.OnHourSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSalaryKoeff", DbType="Int")]
		public System.Nullable<int> idSalaryKoeff
		{
			get
			{
				return this._idSalaryKoeff;
			}
			set
			{
				if ((this._idSalaryKoeff != value))
				{
					if (this._SalaryKoeff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSalaryKoeffChanging(value);
					this.SendPropertyChanging();
					this._idSalaryKoeff = value;
					this.SendPropertyChanged("idSalaryKoeff");
					this.OnidSalaryKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> HourStaffCount
		{
			get
			{
				return this._HourStaffCount;
			}
			set
			{
				if ((this._HourStaffCount != value))
				{
					this.OnHourStaffCountChanging(value);
					this.SendPropertyChanging();
					this._HourStaffCount = value;
					this.SendPropertyChanged("HourStaffCount");
					this.OnHourStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcStaffCount", AutoSync=AutoSync.Always, DbType="Decimal(6,4) NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CalcStaffCount
		{
			get
			{
				return this._CalcStaffCount;
			}
			set
			{
				if ((this._CalcStaffCount != value))
				{
					this.OnCalcStaffCountChanging(value);
					this.SendPropertyChanging();
					this._CalcStaffCount = value;
					this.SendPropertyChanged("CalcStaffCount");
					this.OnCalcStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourFullSalary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourFullSalary
		{
			get
			{
				return this._HourFullSalary;
			}
			set
			{
				if ((this._HourFullSalary != value))
				{
					this.OnHourFullSalaryChanging(value);
					this.SendPropertyChanging();
					this._HourFullSalary = value;
					this.SendPropertyChanged("HourFullSalary");
					this.OnHourFullSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_FactStaffHistory", Storage="_Prikaz", ThisKey="idBeginPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.FactStaffHistories.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.FactStaffHistories.Add(this);
						this._idBeginPrikaz = value.id;
					}
					else
					{
						this._idBeginPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalaryKoeff_FactStaffHistory", Storage="_SalaryKoeff", ThisKey="idSalaryKoeff", OtherKey="id", IsForeignKey=true)]
		public SalaryKoeff SalaryKoeff
		{
			get
			{
				return this._SalaryKoeff.Entity;
			}
			set
			{
				SalaryKoeff previousValue = this._SalaryKoeff.Entity;
				if (((previousValue != value) 
							|| (this._SalaryKoeff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalaryKoeff.Entity = null;
						previousValue.FactStaffHistories.Remove(this);
					}
					this._SalaryKoeff.Entity = value;
					if ((value != null))
					{
						value.FactStaffHistories.Add(this);
						this._idSalaryKoeff = value.id;
					}
					else
					{
						this._idSalaryKoeff = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalaryKoeff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkType_FactStaffHistory", Storage="_WorkType", ThisKey="idTypeWork", OtherKey="id", IsForeignKey=true)]
		public WorkType WorkType
		{
			get
			{
				return this._WorkType.Entity;
			}
			set
			{
				WorkType previousValue = this._WorkType.Entity;
				if (((previousValue != value) 
							|| (this._WorkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkType.Entity = null;
						previousValue.FactStaffHistories.Remove(this);
					}
					this._WorkType.Entity = value;
					if ((value != null))
					{
						value.FactStaffHistories.Add(this);
						this._idTypeWork = value.id;
					}
					else
					{
						this._idTypeWork = default(int);
					}
					this.SendPropertyChanged("WorkType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffHistory", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffHistories.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffHistories.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffMonthHour")]
	public partial class FactStaffMonthHour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idFactStaff;
		
		private int _MonthNumber;
		
		private decimal _HourCount;
		
		private int _YearNumber;
		
		private EntityRef<FactStaff> _FactStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnMonthNumberChanging(int value);
    partial void OnMonthNumberChanged();
    partial void OnHourCountChanging(decimal value);
    partial void OnHourCountChanged();
    partial void OnYearNumberChanging(int value);
    partial void OnYearNumberChanged();
    #endregion
		
		public FactStaffMonthHour()
		{
			this._FactStaff = default(EntityRef<FactStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthNumber", DbType="Int NOT NULL")]
		public int MonthNumber
		{
			get
			{
				return this._MonthNumber;
			}
			set
			{
				if ((this._MonthNumber != value))
				{
					this.OnMonthNumberChanging(value);
					this.SendPropertyChanging();
					this._MonthNumber = value;
					this.SendPropertyChanged("MonthNumber");
					this.OnMonthNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourCount", DbType="Decimal(10,2) NOT NULL")]
		public decimal HourCount
		{
			get
			{
				return this._HourCount;
			}
			set
			{
				if ((this._HourCount != value))
				{
					this.OnHourCountChanging(value);
					this.SendPropertyChanging();
					this._HourCount = value;
					this.SendPropertyChanged("HourCount");
					this.OnHourCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNumber", DbType="Int NOT NULL")]
		public int YearNumber
		{
			get
			{
				return this._YearNumber;
			}
			set
			{
				if ((this._YearNumber != value))
				{
					this.OnYearNumberChanging(value);
					this.SendPropertyChanging();
					this._YearNumber = value;
					this.SendPropertyChanged("YearNumber");
					this.OnYearNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffMonthHour", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffMonthHours.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffMonthHours.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryVPO")]
	public partial class CategoryVPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CategoryVPOName;
		
		private string _CategoryVPOSmallName;
		
		private System.Nullable<int> _OrderBy;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoryVPONameChanging(string value);
    partial void OnCategoryVPONameChanged();
    partial void OnCategoryVPOSmallNameChanging(string value);
    partial void OnCategoryVPOSmallNameChanged();
    partial void OnOrderByChanging(System.Nullable<int> value);
    partial void OnOrderByChanged();
    #endregion
		
		public CategoryVPO()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryVPOName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryVPOName
		{
			get
			{
				return this._CategoryVPOName;
			}
			set
			{
				if ((this._CategoryVPOName != value))
				{
					this.OnCategoryVPONameChanging(value);
					this.SendPropertyChanging();
					this._CategoryVPOName = value;
					this.SendPropertyChanged("CategoryVPOName");
					this.OnCategoryVPONameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryVPOSmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryVPOSmallName
		{
			get
			{
				return this._CategoryVPOSmallName;
			}
			set
			{
				if ((this._CategoryVPOSmallName != value))
				{
					this.OnCategoryVPOSmallNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryVPOSmallName = value;
					this.SendPropertyChanged("CategoryVPOSmallName");
					this.OnCategoryVPOSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderBy", DbType="Int")]
		public System.Nullable<int> OrderBy
		{
			get
			{
				return this._OrderBy;
			}
			set
			{
				if ((this._OrderBy != value))
				{
					this.OnOrderByChanging(value);
					this.SendPropertyChanging();
					this._OrderBy = value;
					this.SendPropertyChanged("OrderBy");
					this.OnOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryVPO_Post", Storage="_Posts", ThisKey="id", OtherKey="idCategoryVPO")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.CategoryVPO = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.CategoryVPO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryZP")]
	public partial class CategoryZP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CategoryZPName;
		
		private string _CategoryZPSmallName;
		
		private System.Nullable<int> _OrderBy;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoryZPNameChanging(string value);
    partial void OnCategoryZPNameChanged();
    partial void OnCategoryZPSmallNameChanging(string value);
    partial void OnCategoryZPSmallNameChanged();
    partial void OnOrderByChanging(System.Nullable<int> value);
    partial void OnOrderByChanged();
    #endregion
		
		public CategoryZP()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryZPName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryZPName
		{
			get
			{
				return this._CategoryZPName;
			}
			set
			{
				if ((this._CategoryZPName != value))
				{
					this.OnCategoryZPNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryZPName = value;
					this.SendPropertyChanged("CategoryZPName");
					this.OnCategoryZPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryZPSmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryZPSmallName
		{
			get
			{
				return this._CategoryZPSmallName;
			}
			set
			{
				if ((this._CategoryZPSmallName != value))
				{
					this.OnCategoryZPSmallNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryZPSmallName = value;
					this.SendPropertyChanged("CategoryZPSmallName");
					this.OnCategoryZPSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderBy", DbType="Int")]
		public System.Nullable<int> OrderBy
		{
			get
			{
				return this._OrderBy;
			}
			set
			{
				if ((this._OrderBy != value))
				{
					this.OnOrderByChanging(value);
					this.SendPropertyChanging();
					this._OrderBy = value;
					this.SendPropertyChanged("OrderBy");
					this.OnOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryZP_Post", Storage="_Posts", ThisKey="id", OtherKey="idCategoryZP")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.CategoryZP = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.CategoryZP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffCurrentMainData")]
	public partial class FactStaffCurrentMainData
	{
		
		private int _id;
		
		private decimal _StaffCount;
		
		private System.Nullable<int> _idPlanStaff;
		
		private System.Nullable<int> _idEmployee;
		
		private string _FactStaffFullName;
		
		public FactStaffCurrentMainData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(6,4) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this._StaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int")]
		public System.Nullable<int> idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					this._idEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactStaffFullName", DbType="VarChar(380)")]
		public string FactStaffFullName
		{
			get
			{
				return this._FactStaffFullName;
			}
			set
			{
				if ((this._FactStaffFullName != value))
				{
					this._FactStaffFullName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OKVED")]
	public partial class OKVED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _OKVEDName;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<Dep> _Deps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOKVEDNameChanging(string value);
    partial void OnOKVEDNameChanged();
    #endregion
		
		public OKVED()
		{
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._Deps = new EntitySet<Dep>(new Action<Dep>(this.attach_Deps), new Action<Dep>(this.detach_Deps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKVEDName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string OKVEDName
		{
			get
			{
				return this._OKVEDName;
			}
			set
			{
				if ((this._OKVEDName != value))
				{
					this.OnOKVEDNameChanging(value);
					this.SendPropertyChanging();
					this._OKVEDName = value;
					this.SendPropertyChanged("OKVEDName");
					this.OnOKVEDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OKVED_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idOKVED")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OKVED_Dep", Storage="_Deps", ThisKey="id", OtherKey="idOKVED")]
		public EntitySet<Dep> Deps
		{
			get
			{
				return this._Deps;
			}
			set
			{
				this._Deps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.OKVED = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.OKVED = null;
		}
		
		private void attach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.OKVED = this;
		}
		
		private void detach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.OKVED = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaff")]
	public partial class FactStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idPlanStaff;
		
		private System.Nullable<int> _idEmployee;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _IsReplacement;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _IDShedule;
		
		private System.Nullable<int> _idlaborcontrakt;
		
		private System.Nullable<int> _idreason;
		
		private System.Nullable<int> _idFundingDepartment;
		
		private System.Nullable<int> _idTimeSheetSheduleType;
		
		private System.Nullable<int> _idFundingCenter;
		
		private System.Nullable<int> _idDepartment;
		
		private System.Nullable<int> _idFinancingSource;
		
		private string _Comment;
		
		private System.Nullable<int> _idMainFactStaff;
		
		private System.Nullable<int> _idOKVED;
		
		private EntitySet<BonusFactStaff> _BonusFactStaffs;
		
		private EntityRef<FactStaffReplacement> _FactStaffReplacement;
		
		private EntitySet<FactStaffReplacement> _FactStaffReplacements;
		
		private EntitySet<FactStaffHistory> _FactStaffHistories;
		
		private EntitySet<FactStaffMonthHour> _FactStaffMonthHours;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<OK_Otpusk> _OK_Otpusks;
		
		private EntitySet<FactStaffPrikaz> _FactStaffPrikazs;
		
		private EntitySet<TimeSheetFSWorkingDay> _TimeSheetFSWorkingDays;
		
		private EntityRef<FactStaff> _FactStaff1;
		
		private EntityRef<FinancingSource> _FinancingSource;
		
		private EntityRef<FundingCenter> _FundingCenter;
		
		private EntityRef<OKVED> _OKVED;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<Dep> _Dep;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPlanStaffChanging(System.Nullable<int> value);
    partial void OnidPlanStaffChanged();
    partial void OnidEmployeeChanging(System.Nullable<int> value);
    partial void OnidEmployeeChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIsReplacementChanging(bool value);
    partial void OnIsReplacementChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnIDSheduleChanging(System.Nullable<int> value);
    partial void OnIDSheduleChanged();
    partial void OnidlaborcontraktChanging(System.Nullable<int> value);
    partial void OnidlaborcontraktChanged();
    partial void OnidreasonChanging(System.Nullable<int> value);
    partial void OnidreasonChanged();
    partial void OnidFundingDepartmentChanging(System.Nullable<int> value);
    partial void OnidFundingDepartmentChanged();
    partial void OnidTimeSheetSheduleTypeChanging(System.Nullable<int> value);
    partial void OnidTimeSheetSheduleTypeChanged();
    partial void OnidFundingCenterChanging(System.Nullable<int> value);
    partial void OnidFundingCenterChanged();
    partial void OnidDepartmentChanging(System.Nullable<int> value);
    partial void OnidDepartmentChanged();
    partial void OnidFinancingSourceChanging(System.Nullable<int> value);
    partial void OnidFinancingSourceChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnidMainFactStaffChanging(System.Nullable<int> value);
    partial void OnidMainFactStaffChanged();
    partial void OnidOKVEDChanging(System.Nullable<int> value);
    partial void OnidOKVEDChanged();
    #endregion
		
		public FactStaff()
		{
			this._BonusFactStaffs = new EntitySet<BonusFactStaff>(new Action<BonusFactStaff>(this.attach_BonusFactStaffs), new Action<BonusFactStaff>(this.detach_BonusFactStaffs));
			this._FactStaffReplacement = default(EntityRef<FactStaffReplacement>);
			this._FactStaffReplacements = new EntitySet<FactStaffReplacement>(new Action<FactStaffReplacement>(this.attach_FactStaffReplacements), new Action<FactStaffReplacement>(this.detach_FactStaffReplacements));
			this._FactStaffHistories = new EntitySet<FactStaffHistory>(new Action<FactStaffHistory>(this.attach_FactStaffHistories), new Action<FactStaffHistory>(this.detach_FactStaffHistories));
			this._FactStaffMonthHours = new EntitySet<FactStaffMonthHour>(new Action<FactStaffMonthHour>(this.attach_FactStaffMonthHours), new Action<FactStaffMonthHour>(this.detach_FactStaffMonthHours));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._OK_Otpusks = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusks), new Action<OK_Otpusk>(this.detach_OK_Otpusks));
			this._FactStaffPrikazs = new EntitySet<FactStaffPrikaz>(new Action<FactStaffPrikaz>(this.attach_FactStaffPrikazs), new Action<FactStaffPrikaz>(this.detach_FactStaffPrikazs));
			this._TimeSheetFSWorkingDays = new EntitySet<TimeSheetFSWorkingDay>(new Action<TimeSheetFSWorkingDay>(this.attach_TimeSheetFSWorkingDays), new Action<TimeSheetFSWorkingDay>(this.detach_TimeSheetFSWorkingDays));
			this._FactStaff1 = default(EntityRef<FactStaff>);
			this._FinancingSource = default(EntityRef<FinancingSource>);
			this._FundingCenter = default(EntityRef<FundingCenter>);
			this._OKVED = default(EntityRef<OKVED>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._Dep = default(EntityRef<Dep>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int")]
		public System.Nullable<int> idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeeChanging(value);
					this.SendPropertyChanging();
					this._idEmployee = value;
					this.SendPropertyChanged("idEmployee");
					this.OnidEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this.OnIsReplacementChanging(value);
					this.SendPropertyChanging();
					this._IsReplacement = value;
					this.SendPropertyChanged("IsReplacement");
					this.OnIsReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShedule", DbType="Int")]
		public System.Nullable<int> IDShedule
		{
			get
			{
				return this._IDShedule;
			}
			set
			{
				if ((this._IDShedule != value))
				{
					this.OnIDSheduleChanging(value);
					this.SendPropertyChanging();
					this._IDShedule = value;
					this.SendPropertyChanged("IDShedule");
					this.OnIDSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlaborcontrakt", DbType="Int")]
		public System.Nullable<int> idlaborcontrakt
		{
			get
			{
				return this._idlaborcontrakt;
			}
			set
			{
				if ((this._idlaborcontrakt != value))
				{
					this.OnidlaborcontraktChanging(value);
					this.SendPropertyChanging();
					this._idlaborcontrakt = value;
					this.SendPropertyChanged("idlaborcontrakt");
					this.OnidlaborcontraktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreason", DbType="Int")]
		public System.Nullable<int> idreason
		{
			get
			{
				return this._idreason;
			}
			set
			{
				if ((this._idreason != value))
				{
					this.OnidreasonChanging(value);
					this.SendPropertyChanging();
					this._idreason = value;
					this.SendPropertyChanged("idreason");
					this.OnidreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFundingDepartment", DbType="Int")]
		public System.Nullable<int> idFundingDepartment
		{
			get
			{
				return this._idFundingDepartment;
			}
			set
			{
				if ((this._idFundingDepartment != value))
				{
					this.OnidFundingDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idFundingDepartment = value;
					this.SendPropertyChanged("idFundingDepartment");
					this.OnidFundingDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeSheetSheduleType", DbType="Int")]
		public System.Nullable<int> idTimeSheetSheduleType
		{
			get
			{
				return this._idTimeSheetSheduleType;
			}
			set
			{
				if ((this._idTimeSheetSheduleType != value))
				{
					this.OnidTimeSheetSheduleTypeChanging(value);
					this.SendPropertyChanging();
					this._idTimeSheetSheduleType = value;
					this.SendPropertyChanged("idTimeSheetSheduleType");
					this.OnidTimeSheetSheduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFundingCenter", DbType="Int")]
		public System.Nullable<int> idFundingCenter
		{
			get
			{
				return this._idFundingCenter;
			}
			set
			{
				if ((this._idFundingCenter != value))
				{
					if (this._FundingCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFundingCenterChanging(value);
					this.SendPropertyChanging();
					this._idFundingCenter = value;
					this.SendPropertyChanged("idFundingCenter");
					this.OnidFundingCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFinancingSource", DbType="Int")]
		public System.Nullable<int> idFinancingSource
		{
			get
			{
				return this._idFinancingSource;
			}
			set
			{
				if ((this._idFinancingSource != value))
				{
					if (this._FinancingSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFinancingSourceChanging(value);
					this.SendPropertyChanging();
					this._idFinancingSource = value;
					this.SendPropertyChanged("idFinancingSource");
					this.OnidFinancingSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMainFactStaff", DbType="Int")]
		public System.Nullable<int> idMainFactStaff
		{
			get
			{
				return this._idMainFactStaff;
			}
			set
			{
				if ((this._idMainFactStaff != value))
				{
					if (this._FactStaff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMainFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idMainFactStaff = value;
					this.SendPropertyChanged("idMainFactStaff");
					this.OnidMainFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOKVED", DbType="Int")]
		public System.Nullable<int> idOKVED
		{
			get
			{
				return this._idOKVED;
			}
			set
			{
				if ((this._idOKVED != value))
				{
					if (this._OKVED.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOKVEDChanging(value);
					this.SendPropertyChanging();
					this._idOKVED = value;
					this.SendPropertyChanged("idOKVED");
					this.OnidOKVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_BonusFactStaff", Storage="_BonusFactStaffs", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<BonusFactStaff> BonusFactStaffs
		{
			get
			{
				return this._BonusFactStaffs;
			}
			set
			{
				this._BonusFactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement", Storage="_FactStaffReplacement", ThisKey="id", OtherKey="idFactStaff", IsUnique=true, IsForeignKey=false)]
		public FactStaffReplacement FactStaffReplacement
		{
			get
			{
				return this._FactStaffReplacement.Entity;
			}
			set
			{
				FactStaffReplacement previousValue = this._FactStaffReplacement.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffReplacement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffReplacement.Entity = null;
						previousValue.FactStaff = null;
					}
					this._FactStaffReplacement.Entity = value;
					if ((value != null))
					{
						value.FactStaff = this;
					}
					this.SendPropertyChanged("FactStaffReplacement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffReplacement1", Storage="_FactStaffReplacements", ThisKey="id", OtherKey="idReplacedFactStaff")]
		public EntitySet<FactStaffReplacement> FactStaffReplacements
		{
			get
			{
				return this._FactStaffReplacements;
			}
			set
			{
				this._FactStaffReplacements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffHistory", Storage="_FactStaffHistories", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<FactStaffHistory> FactStaffHistories
		{
			get
			{
				return this._FactStaffHistories;
			}
			set
			{
				this._FactStaffHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffMonthHour", Storage="_FactStaffMonthHours", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<FactStaffMonthHour> FactStaffMonthHours
		{
			get
			{
				return this._FactStaffMonthHours;
			}
			set
			{
				this._FactStaffMonthHours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idMainFactStaff")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_OK_Otpusk", Storage="_OK_Otpusks", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<OK_Otpusk> OK_Otpusks
		{
			get
			{
				return this._OK_Otpusks;
			}
			set
			{
				this._OK_Otpusks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffPrikaz", Storage="_FactStaffPrikazs", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<FactStaffPrikaz> FactStaffPrikazs
		{
			get
			{
				return this._FactStaffPrikazs;
			}
			set
			{
				this._FactStaffPrikazs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_TimeSheetFSWorkingDay", Storage="_TimeSheetFSWorkingDays", ThisKey="id", OtherKey="idFactStaff")]
		public EntitySet<TimeSheetFSWorkingDay> TimeSheetFSWorkingDays
		{
			get
			{
				return this._TimeSheetFSWorkingDays;
			}
			set
			{
				this._TimeSheetFSWorkingDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaff", Storage="_FactStaff1", ThisKey="idMainFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff1
		{
			get
			{
				return this._FactStaff1.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff1.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff1.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._FactStaff1.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idMainFactStaff = value.id;
					}
					else
					{
						this._idMainFactStaff = default(Nullable<int>);
					}
					this.SendPropertyChanged("FactStaff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_FactStaff", Storage="_FinancingSource", ThisKey="idFinancingSource", OtherKey="id", IsForeignKey=true)]
		public FinancingSource FinancingSource
		{
			get
			{
				return this._FinancingSource.Entity;
			}
			set
			{
				FinancingSource previousValue = this._FinancingSource.Entity;
				if (((previousValue != value) 
							|| (this._FinancingSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancingSource.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._FinancingSource.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idFinancingSource = value.id;
					}
					else
					{
						this._idFinancingSource = default(Nullable<int>);
					}
					this.SendPropertyChanged("FinancingSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FundingCenter_FactStaff", Storage="_FundingCenter", ThisKey="idFundingCenter", OtherKey="id", IsForeignKey=true)]
		public FundingCenter FundingCenter
		{
			get
			{
				return this._FundingCenter.Entity;
			}
			set
			{
				FundingCenter previousValue = this._FundingCenter.Entity;
				if (((previousValue != value) 
							|| (this._FundingCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FundingCenter.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._FundingCenter.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idFundingCenter = value.id;
					}
					else
					{
						this._idFundingCenter = default(Nullable<int>);
					}
					this.SendPropertyChanged("FundingCenter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OKVED_FactStaff", Storage="_OKVED", ThisKey="idOKVED", OtherKey="id", IsForeignKey=true)]
		public OKVED OKVED
		{
			get
			{
				return this._OKVED.Entity;
			}
			set
			{
				OKVED previousValue = this._OKVED.Entity;
				if (((previousValue != value) 
							|| (this._OKVED.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OKVED.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._OKVED.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idOKVED = value.id;
					}
					else
					{
						this._idOKVED = default(Nullable<int>);
					}
					this.SendPropertyChanged("OKVED");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_FactStaff", Storage="_Prikaz", ThisKey="idEndPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idEndPrikaz = value.id;
					}
					else
					{
						this._idEndPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_FactStaff", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_FactStaff", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idPlanStaff = value.id;
					}
					else
					{
						this._idPlanStaff = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FactStaff", Storage="_Employee", ThisKey="idEmployee", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.FactStaffs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.FactStaffs.Add(this);
						this._idEmployee = value.id;
					}
					else
					{
						this._idEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusFactStaffs(BonusFactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_BonusFactStaffs(BonusFactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_FactStaffReplacements(FactStaffReplacement entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff1 = this;
		}
		
		private void detach_FactStaffReplacements(FactStaffReplacement entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff1 = null;
		}
		
		private void attach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_FactStaffHistories(FactStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_FactStaffMonthHours(FactStaffMonthHour entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_FactStaffMonthHours(FactStaffMonthHour entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff1 = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff1 = null;
		}
		
		private void attach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_FactStaffPrikazs(FactStaffPrikaz entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_FactStaffPrikazs(FactStaffPrikaz entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
		
		private void attach_TimeSheetFSWorkingDays(TimeSheetFSWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = this;
		}
		
		private void detach_TimeSheetFSWorkingDays(TimeSheetFSWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.FactStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dep")]
	public partial class Dep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idDepartmentType;
		
		private System.Nullable<int> _KadrID;
		
		private System.Nullable<System.DateTime> _dateExit;
		
		private System.Nullable<int> _idManagerPlanStaff;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<int> _SeverKoeff;
		
		private System.Nullable<int> _RayonKoeff;
		
		private System.Guid _DepartmentGUID;
		
		private System.Nullable<int> _idFundingCenter;
		
		private string _DepartmentIndex;
		
		private string _DepPhoneNumber;
		
		private bool _HasTimeSheet;
		
		private System.Nullable<int> _idOKVED;
		
		private EntitySet<DepartmentTimeNorm> _DepartmentTimeNorms;
		
		private EntitySet<DepartmentFund> _DepartmentFunds;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<PlanStaff> _PlanStaffs;
		
		private EntitySet<DepartmentHistory> _DepartmentHistories;
		
		private EntitySet<DepartmentHistory> _DepartmentHistories1;
		
		private EntityRef<DepartmentType> _DepartmentType;
		
		private EntityRef<FundingCenter> _FundingCenter;
		
		private EntityRef<OKVED> _OKVED;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentTypeChanging(System.Nullable<int> value);
    partial void OnidDepartmentTypeChanged();
    partial void OnKadrIDChanging(System.Nullable<int> value);
    partial void OnKadrIDChanged();
    partial void OndateExitChanging(System.Nullable<System.DateTime> value);
    partial void OndateExitChanged();
    partial void OnidManagerPlanStaffChanging(System.Nullable<int> value);
    partial void OnidManagerPlanStaffChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnSeverKoeffChanging(System.Nullable<int> value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(System.Nullable<int> value);
    partial void OnRayonKoeffChanged();
    partial void OnDepartmentGUIDChanging(System.Guid value);
    partial void OnDepartmentGUIDChanged();
    partial void OnidFundingCenterChanging(System.Nullable<int> value);
    partial void OnidFundingCenterChanged();
    partial void OnDepartmentIndexChanging(string value);
    partial void OnDepartmentIndexChanged();
    partial void OnDepPhoneNumberChanging(string value);
    partial void OnDepPhoneNumberChanged();
    partial void OnHasTimeSheetChanging(bool value);
    partial void OnHasTimeSheetChanged();
    partial void OnidOKVEDChanging(System.Nullable<int> value);
    partial void OnidOKVEDChanged();
    #endregion
		
		public Dep()
		{
			this._DepartmentTimeNorms = new EntitySet<DepartmentTimeNorm>(new Action<DepartmentTimeNorm>(this.attach_DepartmentTimeNorms), new Action<DepartmentTimeNorm>(this.detach_DepartmentTimeNorms));
			this._DepartmentFunds = new EntitySet<DepartmentFund>(new Action<DepartmentFund>(this.attach_DepartmentFunds), new Action<DepartmentFund>(this.detach_DepartmentFunds));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._PlanStaffs = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaffs), new Action<PlanStaff>(this.detach_PlanStaffs));
			this._DepartmentHistories = new EntitySet<DepartmentHistory>(new Action<DepartmentHistory>(this.attach_DepartmentHistories), new Action<DepartmentHistory>(this.detach_DepartmentHistories));
			this._DepartmentHistories1 = new EntitySet<DepartmentHistory>(new Action<DepartmentHistory>(this.attach_DepartmentHistories1), new Action<DepartmentHistory>(this.detach_DepartmentHistories1));
			this._DepartmentType = default(EntityRef<DepartmentType>);
			this._FundingCenter = default(EntityRef<FundingCenter>);
			this._OKVED = default(EntityRef<OKVED>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartmentType", DbType="Int")]
		public System.Nullable<int> idDepartmentType
		{
			get
			{
				return this._idDepartmentType;
			}
			set
			{
				if ((this._idDepartmentType != value))
				{
					if (this._DepartmentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentTypeChanging(value);
					this.SendPropertyChanging();
					this._idDepartmentType = value;
					this.SendPropertyChanged("idDepartmentType");
					this.OnidDepartmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this.OnKadrIDChanging(value);
					this.SendPropertyChanging();
					this._KadrID = value;
					this.SendPropertyChanged("KadrID");
					this.OnKadrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateExit
		{
			get
			{
				return this._dateExit;
			}
			set
			{
				if ((this._dateExit != value))
				{
					this.OndateExitChanging(value);
					this.SendPropertyChanging();
					this._dateExit = value;
					this.SendPropertyChanged("dateExit");
					this.OndateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerPlanStaff", DbType="Int")]
		public System.Nullable<int> idManagerPlanStaff
		{
			get
			{
				return this._idManagerPlanStaff;
			}
			set
			{
				if ((this._idManagerPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidManagerPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idManagerPlanStaff = value;
					this.SendPropertyChanged("idManagerPlanStaff");
					this.OnidManagerPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int")]
		public System.Nullable<int> SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int")]
		public System.Nullable<int> RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentGUID
		{
			get
			{
				return this._DepartmentGUID;
			}
			set
			{
				if ((this._DepartmentGUID != value))
				{
					this.OnDepartmentGUIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentGUID = value;
					this.SendPropertyChanged("DepartmentGUID");
					this.OnDepartmentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFundingCenter", DbType="Int")]
		public System.Nullable<int> idFundingCenter
		{
			get
			{
				return this._idFundingCenter;
			}
			set
			{
				if ((this._idFundingCenter != value))
				{
					if (this._FundingCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFundingCenterChanging(value);
					this.SendPropertyChanging();
					this._idFundingCenter = value;
					this.SendPropertyChanged("idFundingCenter");
					this.OnidFundingCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentIndex", DbType="VarChar(10)")]
		public string DepartmentIndex
		{
			get
			{
				return this._DepartmentIndex;
			}
			set
			{
				if ((this._DepartmentIndex != value))
				{
					this.OnDepartmentIndexChanging(value);
					this.SendPropertyChanging();
					this._DepartmentIndex = value;
					this.SendPropertyChanged("DepartmentIndex");
					this.OnDepartmentIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepPhoneNumber", DbType="VarChar(20)")]
		public string DepPhoneNumber
		{
			get
			{
				return this._DepPhoneNumber;
			}
			set
			{
				if ((this._DepPhoneNumber != value))
				{
					this.OnDepPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._DepPhoneNumber = value;
					this.SendPropertyChanged("DepPhoneNumber");
					this.OnDepPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTimeSheet", DbType="Bit NOT NULL")]
		public bool HasTimeSheet
		{
			get
			{
				return this._HasTimeSheet;
			}
			set
			{
				if ((this._HasTimeSheet != value))
				{
					this.OnHasTimeSheetChanging(value);
					this.SendPropertyChanging();
					this._HasTimeSheet = value;
					this.SendPropertyChanged("HasTimeSheet");
					this.OnHasTimeSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOKVED", DbType="Int")]
		public System.Nullable<int> idOKVED
		{
			get
			{
				return this._idOKVED;
			}
			set
			{
				if ((this._idOKVED != value))
				{
					if (this._OKVED.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOKVEDChanging(value);
					this.SendPropertyChanging();
					this._idOKVED = value;
					this.SendPropertyChanged("idOKVED");
					this.OnidOKVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentTimeNorm", Storage="_DepartmentTimeNorms", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<DepartmentTimeNorm> DepartmentTimeNorms
		{
			get
			{
				return this._DepartmentTimeNorms;
			}
			set
			{
				this._DepartmentTimeNorms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentFund", Storage="_DepartmentFunds", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<DepartmentFund> DepartmentFunds
		{
			get
			{
				return this._DepartmentFunds;
			}
			set
			{
				this._DepartmentFunds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_PlanStaff", Storage="_PlanStaffs", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<PlanStaff> PlanStaffs
		{
			get
			{
				return this._PlanStaffs;
			}
			set
			{
				this._PlanStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentHistory", Storage="_DepartmentHistories", ThisKey="id", OtherKey="idDepartment")]
		public EntitySet<DepartmentHistory> DepartmentHistories
		{
			get
			{
				return this._DepartmentHistories;
			}
			set
			{
				this._DepartmentHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentHistory1", Storage="_DepartmentHistories1", ThisKey="id", OtherKey="idManagerDepartment")]
		public EntitySet<DepartmentHistory> DepartmentHistories1
		{
			get
			{
				return this._DepartmentHistories1;
			}
			set
			{
				this._DepartmentHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentType_Dep", Storage="_DepartmentType", ThisKey="idDepartmentType", OtherKey="id", IsForeignKey=true)]
		public DepartmentType DepartmentType
		{
			get
			{
				return this._DepartmentType.Entity;
			}
			set
			{
				DepartmentType previousValue = this._DepartmentType.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentType.Entity = null;
						previousValue.Deps.Remove(this);
					}
					this._DepartmentType.Entity = value;
					if ((value != null))
					{
						value.Deps.Add(this);
						this._idDepartmentType = value.id;
					}
					else
					{
						this._idDepartmentType = default(Nullable<int>);
					}
					this.SendPropertyChanged("DepartmentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FundingCenter_Dep", Storage="_FundingCenter", ThisKey="idFundingCenter", OtherKey="id", IsForeignKey=true)]
		public FundingCenter FundingCenter
		{
			get
			{
				return this._FundingCenter.Entity;
			}
			set
			{
				FundingCenter previousValue = this._FundingCenter.Entity;
				if (((previousValue != value) 
							|| (this._FundingCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FundingCenter.Entity = null;
						previousValue.Deps.Remove(this);
					}
					this._FundingCenter.Entity = value;
					if ((value != null))
					{
						value.Deps.Add(this);
						this._idFundingCenter = value.id;
					}
					else
					{
						this._idFundingCenter = default(Nullable<int>);
					}
					this.SendPropertyChanged("FundingCenter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OKVED_Dep", Storage="_OKVED", ThisKey="idOKVED", OtherKey="id", IsForeignKey=true)]
		public OKVED OKVED
		{
			get
			{
				return this._OKVED.Entity;
			}
			set
			{
				OKVED previousValue = this._OKVED.Entity;
				if (((previousValue != value) 
							|| (this._OKVED.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OKVED.Entity = null;
						previousValue.Deps.Remove(this);
					}
					this._OKVED.Entity = value;
					if ((value != null))
					{
						value.Deps.Add(this);
						this._idOKVED = value.id;
					}
					else
					{
						this._idOKVED = default(Nullable<int>);
					}
					this.SendPropertyChanged("OKVED");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_Dep", Storage="_Prikaz", ThisKey="idEndPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.Deps.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.Deps.Add(this);
						this._idEndPrikaz = value.id;
					}
					else
					{
						this._idEndPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_Dep", Storage="_PlanStaff", ThisKey="idManagerPlanStaff", OtherKey="id", IsForeignKey=true)]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.Deps.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.Deps.Add(this);
						this._idManagerPlanStaff = value.id;
					}
					else
					{
						this._idManagerPlanStaff = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DepartmentTimeNorms(DepartmentTimeNorm entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_DepartmentTimeNorms(DepartmentTimeNorm entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_DepartmentFunds(DepartmentFund entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_DepartmentFunds(DepartmentFund entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_DepartmentHistories(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_DepartmentHistories(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
		
		private void attach_DepartmentHistories1(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Dep1 = this;
		}
		
		private void detach_DepartmentHistories1(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Dep1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusType")]
	public partial class BonusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _BonusTypeName;
		
		private string _BonusTypeShortName;
		
		private int _idBonusSuperType;
		
		private System.Nullable<int> _idBonusMeasure;
		
		private bool _HasEnvironmentBonus;
		
		private bool _IsStaffRateable;
		
		private System.Nullable<int> _idDefaultFinancingSource;
		
		private bool _IsCalcStaffRateable;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private EntitySet<BonusReportColumn> _BonusReportColumns;
		
		private EntitySet<Bonus> _Bonus;
		
		private EntityRef<BonusMeasure> _BonusMeasure;
		
		private EntityRef<FinancingSource> _FinancingSource;
		
		private EntityRef<BonusSuperType> _BonusSuperType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBonusTypeNameChanging(string value);
    partial void OnBonusTypeNameChanged();
    partial void OnBonusTypeShortNameChanging(string value);
    partial void OnBonusTypeShortNameChanged();
    partial void OnidBonusSuperTypeChanging(int value);
    partial void OnidBonusSuperTypeChanged();
    partial void OnidBonusMeasureChanging(System.Nullable<int> value);
    partial void OnidBonusMeasureChanged();
    partial void OnHasEnvironmentBonusChanging(bool value);
    partial void OnHasEnvironmentBonusChanged();
    partial void OnIsStaffRateableChanging(bool value);
    partial void OnIsStaffRateableChanged();
    partial void OnidDefaultFinancingSourceChanging(System.Nullable<int> value);
    partial void OnidDefaultFinancingSourceChanged();
    partial void OnIsCalcStaffRateableChanging(bool value);
    partial void OnIsCalcStaffRateableChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public BonusType()
		{
			this._BonusReportColumns = new EntitySet<BonusReportColumn>(new Action<BonusReportColumn>(this.attach_BonusReportColumns), new Action<BonusReportColumn>(this.detach_BonusReportColumns));
			this._Bonus = new EntitySet<Bonus>(new Action<Bonus>(this.attach_Bonus), new Action<Bonus>(this.detach_Bonus));
			this._BonusMeasure = default(EntityRef<BonusMeasure>);
			this._FinancingSource = default(EntityRef<FinancingSource>);
			this._BonusSuperType = default(EntityRef<BonusSuperType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BonusTypeName
		{
			get
			{
				return this._BonusTypeName;
			}
			set
			{
				if ((this._BonusTypeName != value))
				{
					this.OnBonusTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BonusTypeName = value;
					this.SendPropertyChanged("BonusTypeName");
					this.OnBonusTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusTypeShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BonusTypeShortName
		{
			get
			{
				return this._BonusTypeShortName;
			}
			set
			{
				if ((this._BonusTypeShortName != value))
				{
					this.OnBonusTypeShortNameChanging(value);
					this.SendPropertyChanging();
					this._BonusTypeShortName = value;
					this.SendPropertyChanged("BonusTypeShortName");
					this.OnBonusTypeShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonusSuperType", DbType="Int NOT NULL")]
		public int idBonusSuperType
		{
			get
			{
				return this._idBonusSuperType;
			}
			set
			{
				if ((this._idBonusSuperType != value))
				{
					if (this._BonusSuperType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusSuperTypeChanging(value);
					this.SendPropertyChanging();
					this._idBonusSuperType = value;
					this.SendPropertyChanged("idBonusSuperType");
					this.OnidBonusSuperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonusMeasure", DbType="Int")]
		public System.Nullable<int> idBonusMeasure
		{
			get
			{
				return this._idBonusMeasure;
			}
			set
			{
				if ((this._idBonusMeasure != value))
				{
					if (this._BonusMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusMeasureChanging(value);
					this.SendPropertyChanging();
					this._idBonusMeasure = value;
					this.SendPropertyChanged("idBonusMeasure");
					this.OnidBonusMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEnvironmentBonus", DbType="Bit NOT NULL")]
		public bool HasEnvironmentBonus
		{
			get
			{
				return this._HasEnvironmentBonus;
			}
			set
			{
				if ((this._HasEnvironmentBonus != value))
				{
					this.OnHasEnvironmentBonusChanging(value);
					this.SendPropertyChanging();
					this._HasEnvironmentBonus = value;
					this.SendPropertyChanged("HasEnvironmentBonus");
					this.OnHasEnvironmentBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStaffRateable", DbType="Bit NOT NULL")]
		public bool IsStaffRateable
		{
			get
			{
				return this._IsStaffRateable;
			}
			set
			{
				if ((this._IsStaffRateable != value))
				{
					this.OnIsStaffRateableChanging(value);
					this.SendPropertyChanging();
					this._IsStaffRateable = value;
					this.SendPropertyChanged("IsStaffRateable");
					this.OnIsStaffRateableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDefaultFinancingSource", DbType="Int")]
		public System.Nullable<int> idDefaultFinancingSource
		{
			get
			{
				return this._idDefaultFinancingSource;
			}
			set
			{
				if ((this._idDefaultFinancingSource != value))
				{
					if (this._FinancingSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDefaultFinancingSourceChanging(value);
					this.SendPropertyChanging();
					this._idDefaultFinancingSource = value;
					this.SendPropertyChanged("idDefaultFinancingSource");
					this.OnidDefaultFinancingSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCalcStaffRateable", DbType="Bit NOT NULL")]
		public bool IsCalcStaffRateable
		{
			get
			{
				return this._IsCalcStaffRateable;
			}
			set
			{
				if ((this._IsCalcStaffRateable != value))
				{
					this.OnIsCalcStaffRateableChanging(value);
					this.SendPropertyChanging();
					this._IsCalcStaffRateable = value;
					this.SendPropertyChanged("IsCalcStaffRateable");
					this.OnIsCalcStaffRateableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusType_BonusReportColumn", Storage="_BonusReportColumns", ThisKey="id", OtherKey="idBonusType")]
		public EntitySet<BonusReportColumn> BonusReportColumns
		{
			get
			{
				return this._BonusReportColumns;
			}
			set
			{
				this._BonusReportColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusType_Bonus", Storage="_Bonus", ThisKey="id", OtherKey="idBonusType")]
		public EntitySet<Bonus> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				this._Bonus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusMeasure_BonusType", Storage="_BonusMeasure", ThisKey="idBonusMeasure", OtherKey="id", IsForeignKey=true)]
		public BonusMeasure BonusMeasure
		{
			get
			{
				return this._BonusMeasure.Entity;
			}
			set
			{
				BonusMeasure previousValue = this._BonusMeasure.Entity;
				if (((previousValue != value) 
							|| (this._BonusMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusMeasure.Entity = null;
						previousValue.BonusTypes.Remove(this);
					}
					this._BonusMeasure.Entity = value;
					if ((value != null))
					{
						value.BonusTypes.Add(this);
						this._idBonusMeasure = value.id;
					}
					else
					{
						this._idBonusMeasure = default(Nullable<int>);
					}
					this.SendPropertyChanged("BonusMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_BonusType", Storage="_FinancingSource", ThisKey="idDefaultFinancingSource", OtherKey="id", IsForeignKey=true)]
		public FinancingSource FinancingSource
		{
			get
			{
				return this._FinancingSource.Entity;
			}
			set
			{
				FinancingSource previousValue = this._FinancingSource.Entity;
				if (((previousValue != value) 
							|| (this._FinancingSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancingSource.Entity = null;
						previousValue.BonusTypes.Remove(this);
					}
					this._FinancingSource.Entity = value;
					if ((value != null))
					{
						value.BonusTypes.Add(this);
						this._idDefaultFinancingSource = value.id;
					}
					else
					{
						this._idDefaultFinancingSource = default(Nullable<int>);
					}
					this.SendPropertyChanged("FinancingSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusSuperType_BonusType", Storage="_BonusSuperType", ThisKey="idBonusSuperType", OtherKey="id", IsForeignKey=true)]
		public BonusSuperType BonusSuperType
		{
			get
			{
				return this._BonusSuperType.Entity;
			}
			set
			{
				BonusSuperType previousValue = this._BonusSuperType.Entity;
				if (((previousValue != value) 
							|| (this._BonusSuperType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusSuperType.Entity = null;
						previousValue.BonusTypes.Remove(this);
					}
					this._BonusSuperType.Entity = value;
					if ((value != null))
					{
						value.BonusTypes.Add(this);
						this._idBonusSuperType = value.id;
					}
					else
					{
						this._idBonusSuperType = default(int);
					}
					this.SendPropertyChanged("BonusSuperType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusReportColumns(BonusReportColumn entity)
		{
			this.SendPropertyChanging();
			entity.BonusType = this;
		}
		
		private void detach_BonusReportColumns(BonusReportColumn entity)
		{
			this.SendPropertyChanging();
			entity.BonusType = null;
		}
		
		private void attach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.BonusType = this;
		}
		
		private void detach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.BonusType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PostName;
		
		private bool _ManagerBit;
		
		private int _idGlobalPrikaz;
		
		private int _idPKCategory;
		
		private System.Nullable<int> _idCategory;
		
		private System.Guid _PostGUID;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Comment;
		
		private string _PostCode;
		
		private System.Nullable<int> _idPostType;
		
		private string _PostShortName;
		
		private System.Nullable<int> _idCategoryVPO;
		
		private System.Nullable<int> _idCategoryZP;
		
		private System.Nullable<int> _idNewCategory;
		
		private System.Nullable<int> _idPostGroup;
		
		private EntitySet<BonusPost> _BonusPosts;
		
		private EntitySet<PlanStaff> _PlanStaffs;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Category> _Category1;
		
		private EntityRef<CategoryVPO> _CategoryVPO;
		
		private EntityRef<CategoryZP> _CategoryZP;
		
		private EntityRef<PKCategory> _PKCategory;
		
		private EntityRef<PostType> _PostType;
		
		private EntityRef<PostGroup> _PostGroup;
		
		private EntityRef<GlobalPrikaz> _GlobalPrikaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostNameChanging(string value);
    partial void OnPostNameChanged();
    partial void OnManagerBitChanging(bool value);
    partial void OnManagerBitChanged();
    partial void OnidGlobalPrikazChanging(int value);
    partial void OnidGlobalPrikazChanged();
    partial void OnidPKCategoryChanging(int value);
    partial void OnidPKCategoryChanged();
    partial void OnidCategoryChanging(System.Nullable<int> value);
    partial void OnidCategoryChanged();
    partial void OnPostGUIDChanging(System.Guid value);
    partial void OnPostGUIDChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnidPostTypeChanging(System.Nullable<int> value);
    partial void OnidPostTypeChanged();
    partial void OnPostShortNameChanging(string value);
    partial void OnPostShortNameChanged();
    partial void OnidCategoryVPOChanging(System.Nullable<int> value);
    partial void OnidCategoryVPOChanged();
    partial void OnidCategoryZPChanging(System.Nullable<int> value);
    partial void OnidCategoryZPChanged();
    partial void OnidNewCategoryChanging(System.Nullable<int> value);
    partial void OnidNewCategoryChanged();
    partial void OnidPostGroupChanging(System.Nullable<int> value);
    partial void OnidPostGroupChanged();
    #endregion
		
		public Post()
		{
			this._BonusPosts = new EntitySet<BonusPost>(new Action<BonusPost>(this.attach_BonusPosts), new Action<BonusPost>(this.detach_BonusPosts));
			this._PlanStaffs = new EntitySet<PlanStaff>(new Action<PlanStaff>(this.attach_PlanStaffs), new Action<PlanStaff>(this.detach_PlanStaffs));
			this._Category = default(EntityRef<Category>);
			this._Category1 = default(EntityRef<Category>);
			this._CategoryVPO = default(EntityRef<CategoryVPO>);
			this._CategoryZP = default(EntityRef<CategoryZP>);
			this._PKCategory = default(EntityRef<PKCategory>);
			this._PostType = default(EntityRef<PostType>);
			this._PostGroup = default(EntityRef<PostGroup>);
			this._GlobalPrikaz = default(EntityRef<GlobalPrikaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string PostName
		{
			get
			{
				return this._PostName;
			}
			set
			{
				if ((this._PostName != value))
				{
					this.OnPostNameChanging(value);
					this.SendPropertyChanging();
					this._PostName = value;
					this.SendPropertyChanged("PostName");
					this.OnPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerBit", DbType="Bit NOT NULL")]
		public bool ManagerBit
		{
			get
			{
				return this._ManagerBit;
			}
			set
			{
				if ((this._ManagerBit != value))
				{
					this.OnManagerBitChanging(value);
					this.SendPropertyChanging();
					this._ManagerBit = value;
					this.SendPropertyChanged("ManagerBit");
					this.OnManagerBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGlobalPrikaz", DbType="Int NOT NULL")]
		public int idGlobalPrikaz
		{
			get
			{
				return this._idGlobalPrikaz;
			}
			set
			{
				if ((this._idGlobalPrikaz != value))
				{
					if (this._GlobalPrikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGlobalPrikazChanging(value);
					this.SendPropertyChanging();
					this._idGlobalPrikaz = value;
					this.SendPropertyChanged("idGlobalPrikaz");
					this.OnidGlobalPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPKCategory", DbType="Int NOT NULL")]
		public int idPKCategory
		{
			get
			{
				return this._idPKCategory;
			}
			set
			{
				if ((this._idPKCategory != value))
				{
					if (this._PKCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPKCategoryChanging(value);
					this.SendPropertyChanging();
					this._idPKCategory = value;
					this.SendPropertyChanged("idPKCategory");
					this.OnidPKCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategory", DbType="Int")]
		public System.Nullable<int> idCategory
		{
			get
			{
				return this._idCategory;
			}
			set
			{
				if ((this._idCategory != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoryChanging(value);
					this.SendPropertyChanging();
					this._idCategory = value;
					this.SendPropertyChanged("idCategory");
					this.OnidCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PostGUID
		{
			get
			{
				return this._PostGUID;
			}
			set
			{
				if ((this._PostGUID != value))
				{
					this.OnPostGUIDChanging(value);
					this.SendPropertyChanging();
					this._PostGUID = value;
					this.SendPropertyChanged("PostGUID");
					this.OnPostGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(20)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPostType", DbType="Int")]
		public System.Nullable<int> idPostType
		{
			get
			{
				return this._idPostType;
			}
			set
			{
				if ((this._idPostType != value))
				{
					if (this._PostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostTypeChanging(value);
					this.SendPropertyChanging();
					this._idPostType = value;
					this.SendPropertyChanged("idPostType");
					this.OnidPostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostShortName", AutoSync=AutoSync.Always, DbType="VarChar(150) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string PostShortName
		{
			get
			{
				return this._PostShortName;
			}
			set
			{
				if ((this._PostShortName != value))
				{
					this.OnPostShortNameChanging(value);
					this.SendPropertyChanging();
					this._PostShortName = value;
					this.SendPropertyChanged("PostShortName");
					this.OnPostShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoryVPO", DbType="Int")]
		public System.Nullable<int> idCategoryVPO
		{
			get
			{
				return this._idCategoryVPO;
			}
			set
			{
				if ((this._idCategoryVPO != value))
				{
					if (this._CategoryVPO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoryVPOChanging(value);
					this.SendPropertyChanging();
					this._idCategoryVPO = value;
					this.SendPropertyChanged("idCategoryVPO");
					this.OnidCategoryVPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoryZP", DbType="Int")]
		public System.Nullable<int> idCategoryZP
		{
			get
			{
				return this._idCategoryZP;
			}
			set
			{
				if ((this._idCategoryZP != value))
				{
					if (this._CategoryZP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoryZPChanging(value);
					this.SendPropertyChanging();
					this._idCategoryZP = value;
					this.SendPropertyChanged("idCategoryZP");
					this.OnidCategoryZPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNewCategory", DbType="Int")]
		public System.Nullable<int> idNewCategory
		{
			get
			{
				return this._idNewCategory;
			}
			set
			{
				if ((this._idNewCategory != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNewCategoryChanging(value);
					this.SendPropertyChanging();
					this._idNewCategory = value;
					this.SendPropertyChanged("idNewCategory");
					this.OnidNewCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPostGroup", DbType="Int")]
		public System.Nullable<int> idPostGroup
		{
			get
			{
				return this._idPostGroup;
			}
			set
			{
				if ((this._idPostGroup != value))
				{
					if (this._PostGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostGroupChanging(value);
					this.SendPropertyChanging();
					this._idPostGroup = value;
					this.SendPropertyChanged("idPostGroup");
					this.OnidPostGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_BonusPost", Storage="_BonusPosts", ThisKey="id", OtherKey="idPost")]
		public EntitySet<BonusPost> BonusPosts
		{
			get
			{
				return this._BonusPosts;
			}
			set
			{
				this._BonusPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PlanStaff", Storage="_PlanStaffs", ThisKey="id", OtherKey="idPost")]
		public EntitySet<PlanStaff> PlanStaffs
		{
			get
			{
				return this._PlanStaffs;
			}
			set
			{
				this._PlanStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Category", ThisKey="idCategory", OtherKey="id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idCategory = value.id;
					}
					else
					{
						this._idCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post1", Storage="_Category1", ThisKey="idNewCategory", OtherKey="id", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Posts1.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Posts1.Add(this);
						this._idNewCategory = value.id;
					}
					else
					{
						this._idNewCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryVPO_Post", Storage="_CategoryVPO", ThisKey="idCategoryVPO", OtherKey="id", IsForeignKey=true)]
		public CategoryVPO CategoryVPO
		{
			get
			{
				return this._CategoryVPO.Entity;
			}
			set
			{
				CategoryVPO previousValue = this._CategoryVPO.Entity;
				if (((previousValue != value) 
							|| (this._CategoryVPO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoryVPO.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._CategoryVPO.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idCategoryVPO = value.id;
					}
					else
					{
						this._idCategoryVPO = default(Nullable<int>);
					}
					this.SendPropertyChanged("CategoryVPO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryZP_Post", Storage="_CategoryZP", ThisKey="idCategoryZP", OtherKey="id", IsForeignKey=true)]
		public CategoryZP CategoryZP
		{
			get
			{
				return this._CategoryZP.Entity;
			}
			set
			{
				CategoryZP previousValue = this._CategoryZP.Entity;
				if (((previousValue != value) 
							|| (this._CategoryZP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoryZP.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._CategoryZP.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idCategoryZP = value.id;
					}
					else
					{
						this._idCategoryZP = default(Nullable<int>);
					}
					this.SendPropertyChanged("CategoryZP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PKCategory_Post", Storage="_PKCategory", ThisKey="idPKCategory", OtherKey="id", IsForeignKey=true)]
		public PKCategory PKCategory
		{
			get
			{
				return this._PKCategory.Entity;
			}
			set
			{
				PKCategory previousValue = this._PKCategory.Entity;
				if (((previousValue != value) 
							|| (this._PKCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PKCategory.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PKCategory.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idPKCategory = value.id;
					}
					else
					{
						this._idPKCategory = default(int);
					}
					this.SendPropertyChanged("PKCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostType_Post", Storage="_PostType", ThisKey="idPostType", OtherKey="id", IsForeignKey=true)]
		public PostType PostType
		{
			get
			{
				return this._PostType.Entity;
			}
			set
			{
				PostType previousValue = this._PostType.Entity;
				if (((previousValue != value) 
							|| (this._PostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostType.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PostType.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idPostType = value.id;
					}
					else
					{
						this._idPostType = default(Nullable<int>);
					}
					this.SendPropertyChanged("PostType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostGroup_Post", Storage="_PostGroup", ThisKey="idPostGroup", OtherKey="id", IsForeignKey=true)]
		public PostGroup PostGroup
		{
			get
			{
				return this._PostGroup.Entity;
			}
			set
			{
				PostGroup previousValue = this._PostGroup.Entity;
				if (((previousValue != value) 
							|| (this._PostGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostGroup.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PostGroup.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idPostGroup = value.id;
					}
					else
					{
						this._idPostGroup = default(Nullable<int>);
					}
					this.SendPropertyChanged("PostGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GlobalPrikaz_Post", Storage="_GlobalPrikaz", ThisKey="idGlobalPrikaz", OtherKey="id", IsForeignKey=true)]
		public GlobalPrikaz GlobalPrikaz
		{
			get
			{
				return this._GlobalPrikaz.Entity;
			}
			set
			{
				GlobalPrikaz previousValue = this._GlobalPrikaz.Entity;
				if (((previousValue != value) 
							|| (this._GlobalPrikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GlobalPrikaz.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._GlobalPrikaz.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idGlobalPrikaz = value.id;
					}
					else
					{
						this._idGlobalPrikaz = default(int);
					}
					this.SendPropertyChanged("GlobalPrikaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusPosts(BonusPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_BonusPosts(BonusPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PlanStaffs(PlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostGroup")]
	public partial class PostGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _GroupName;
		
		private string _GroupSmallName;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnGroupSmallNameChanging(string value);
    partial void OnGroupSmallNameChanged();
    #endregion
		
		public PostGroup()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupSmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupSmallName
		{
			get
			{
				return this._GroupSmallName;
			}
			set
			{
				if ((this._GroupSmallName != value))
				{
					this.OnGroupSmallNameChanging(value);
					this.SendPropertyChanging();
					this._GroupSmallName = value;
					this.SendPropertyChanged("GroupSmallName");
					this.OnGroupSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostGroup_Post", Storage="_Posts", ThisKey="id", OtherKey="idPostGroup")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostGroup = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusSuperType")]
	public partial class BonusSuperType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _BonusSuperTypeName;
		
		private System.Nullable<int> _OrderNumber;
		
		private EntitySet<BonusType> _BonusTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBonusSuperTypeNameChanging(string value);
    partial void OnBonusSuperTypeNameChanged();
    partial void OnOrderNumberChanging(System.Nullable<int> value);
    partial void OnOrderNumberChanged();
    #endregion
		
		public BonusSuperType()
		{
			this._BonusTypes = new EntitySet<BonusType>(new Action<BonusType>(this.attach_BonusTypes), new Action<BonusType>(this.detach_BonusTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusSuperTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BonusSuperTypeName
		{
			get
			{
				return this._BonusSuperTypeName;
			}
			set
			{
				if ((this._BonusSuperTypeName != value))
				{
					this.OnBonusSuperTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BonusSuperTypeName = value;
					this.SendPropertyChanged("BonusSuperTypeName");
					this.OnBonusSuperTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusSuperType_BonusType", Storage="_BonusTypes", ThisKey="id", OtherKey="idBonusSuperType")]
		public EntitySet<BonusType> BonusTypes
		{
			get
			{
				return this._BonusTypes;
			}
			set
			{
				this._BonusTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusTypes(BonusType entity)
		{
			this.SendPropertyChanging();
			entity.BonusSuperType = this;
		}
		
		private void detach_BonusTypes(BonusType entity)
		{
			this.SendPropertyChanging();
			entity.BonusSuperType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalPrikaz")]
	public partial class GlobalPrikaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PrikazName;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private string _PrikazNumber;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPrikazNameChanging(string value);
    partial void OnPrikazNameChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnPrikazNumberChanging(string value);
    partial void OnPrikazNumberChanged();
    #endregion
		
		public GlobalPrikaz()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrikazName", DbType="VarChar(50)")]
		public string PrikazName
		{
			get
			{
				return this._PrikazName;
			}
			set
			{
				if ((this._PrikazName != value))
				{
					this.OnPrikazNameChanging(value);
					this.SendPropertyChanging();
					this._PrikazName = value;
					this.SendPropertyChanged("PrikazName");
					this.OnPrikazNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrikazNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PrikazNumber
		{
			get
			{
				return this._PrikazNumber;
			}
			set
			{
				if ((this._PrikazNumber != value))
				{
					this.OnPrikazNumberChanging(value);
					this.SendPropertyChanging();
					this._PrikazNumber = value;
					this.SendPropertyChanged("PrikazNumber");
					this.OnPrikazNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GlobalPrikaz_Post", Storage="_Posts", ThisKey="id", OtherKey="idGlobalPrikaz")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.GlobalPrikaz = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.GlobalPrikaz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonusHistory")]
	public partial class BonusHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idBonus;
		
		private int _idBeginPrikaz;
		
		private decimal _BonusCount;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<int> _idFinancingSource;
		
		private EntityRef<FinancingSource> _FinancingSource;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<Bonus> _Bonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidBonusChanging(int value);
    partial void OnidBonusChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnBonusCountChanging(decimal value);
    partial void OnBonusCountChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnidFinancingSourceChanging(System.Nullable<int> value);
    partial void OnidFinancingSourceChanged();
    #endregion
		
		public BonusHistory()
		{
			this._FinancingSource = default(EntityRef<FinancingSource>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._Bonus = default(EntityRef<Bonus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonus", DbType="Int NOT NULL")]
		public int idBonus
		{
			get
			{
				return this._idBonus;
			}
			set
			{
				if ((this._idBonus != value))
				{
					if (this._Bonus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusChanging(value);
					this.SendPropertyChanging();
					this._idBonus = value;
					this.SendPropertyChanged("idBonus");
					this.OnidBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusCount", DbType="Decimal(8,2) NOT NULL")]
		public decimal BonusCount
		{
			get
			{
				return this._BonusCount;
			}
			set
			{
				if ((this._BonusCount != value))
				{
					this.OnBonusCountChanging(value);
					this.SendPropertyChanging();
					this._BonusCount = value;
					this.SendPropertyChanged("BonusCount");
					this.OnBonusCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFinancingSource", DbType="Int")]
		public System.Nullable<int> idFinancingSource
		{
			get
			{
				return this._idFinancingSource;
			}
			set
			{
				if ((this._idFinancingSource != value))
				{
					if (this._FinancingSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFinancingSourceChanging(value);
					this.SendPropertyChanging();
					this._idFinancingSource = value;
					this.SendPropertyChanged("idFinancingSource");
					this.OnidFinancingSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_BonusHistory", Storage="_FinancingSource", ThisKey="idFinancingSource", OtherKey="id", IsForeignKey=true)]
		public FinancingSource FinancingSource
		{
			get
			{
				return this._FinancingSource.Entity;
			}
			set
			{
				FinancingSource previousValue = this._FinancingSource.Entity;
				if (((previousValue != value) 
							|| (this._FinancingSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancingSource.Entity = null;
						previousValue.BonusHistories.Remove(this);
					}
					this._FinancingSource.Entity = value;
					if ((value != null))
					{
						value.BonusHistories.Add(this);
						this._idFinancingSource = value.id;
					}
					else
					{
						this._idFinancingSource = default(Nullable<int>);
					}
					this.SendPropertyChanged("FinancingSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_BonusHistory", Storage="_Prikaz", ThisKey="idBeginPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.BonusHistories.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.BonusHistories.Add(this);
						this._idBeginPrikaz = value.id;
					}
					else
					{
						this._idBeginPrikaz = default(int);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusHistory", Storage="_Bonus", ThisKey="idBonus", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bonus Bonus
		{
			get
			{
				return this._Bonus.Entity;
			}
			set
			{
				Bonus previousValue = this._Bonus.Entity;
				if (((previousValue != value) 
							|| (this._Bonus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus.Entity = null;
						previousValue.BonusHistories.Remove(this);
					}
					this._Bonus.Entity = value;
					if ((value != null))
					{
						value.BonusHistories.Add(this);
						this._idBonus = value.id;
					}
					else
					{
						this._idBonus = default(int);
					}
					this.SendPropertyChanged("Bonus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bonus")]
	public partial class Bonus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _idBonusType;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private string _Comment;
		
		private System.Nullable<int> _idIntermediateEndPrikaz;
		
		private EntityRef<BonusPlanStaff> _BonusPlanStaff;
		
		private EntityRef<BonusPost> _BonusPost;
		
		private EntityRef<BonusFactStaff> _BonusFactStaff;
		
		private EntitySet<BonusHistory> _BonusHistories;
		
		private EntityRef<BonusType> _BonusType;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<Prikaz> _Prikaz1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnidBonusTypeChanging(int value);
    partial void OnidBonusTypeChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnidIntermediateEndPrikazChanging(System.Nullable<int> value);
    partial void OnidIntermediateEndPrikazChanged();
    #endregion
		
		public Bonus()
		{
			this._BonusPlanStaff = default(EntityRef<BonusPlanStaff>);
			this._BonusPost = default(EntityRef<BonusPost>);
			this._BonusFactStaff = default(EntityRef<BonusFactStaff>);
			this._BonusHistories = new EntitySet<BonusHistory>(new Action<BonusHistory>(this.attach_BonusHistories), new Action<BonusHistory>(this.detach_BonusHistories));
			this._BonusType = default(EntityRef<BonusType>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._Prikaz1 = default(EntityRef<Prikaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonusType", DbType="Int NOT NULL")]
		public int idBonusType
		{
			get
			{
				return this._idBonusType;
			}
			set
			{
				if ((this._idBonusType != value))
				{
					if (this._BonusType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBonusTypeChanging(value);
					this.SendPropertyChanging();
					this._idBonusType = value;
					this.SendPropertyChanged("idBonusType");
					this.OnidBonusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIntermediateEndPrikaz", DbType="Int")]
		public System.Nullable<int> idIntermediateEndPrikaz
		{
			get
			{
				return this._idIntermediateEndPrikaz;
			}
			set
			{
				if ((this._idIntermediateEndPrikaz != value))
				{
					if (this._Prikaz1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidIntermediateEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idIntermediateEndPrikaz = value;
					this.SendPropertyChanged("idIntermediateEndPrikaz");
					this.OnidIntermediateEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusPlanStaff", Storage="_BonusPlanStaff", ThisKey="id", OtherKey="idBonus", IsUnique=true, IsForeignKey=false)]
		public BonusPlanStaff BonusPlanStaff
		{
			get
			{
				return this._BonusPlanStaff.Entity;
			}
			set
			{
				BonusPlanStaff previousValue = this._BonusPlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._BonusPlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusPlanStaff.Entity = null;
						previousValue.Bonus = null;
					}
					this._BonusPlanStaff.Entity = value;
					if ((value != null))
					{
						value.Bonus = this;
					}
					this.SendPropertyChanged("BonusPlanStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusPost", Storage="_BonusPost", ThisKey="id", OtherKey="idBonus", IsUnique=true, IsForeignKey=false)]
		public BonusPost BonusPost
		{
			get
			{
				return this._BonusPost.Entity;
			}
			set
			{
				BonusPost previousValue = this._BonusPost.Entity;
				if (((previousValue != value) 
							|| (this._BonusPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusPost.Entity = null;
						previousValue.Bonus = null;
					}
					this._BonusPost.Entity = value;
					if ((value != null))
					{
						value.Bonus = this;
					}
					this.SendPropertyChanged("BonusPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusFactStaff", Storage="_BonusFactStaff", ThisKey="id", OtherKey="idBonus", IsUnique=true, IsForeignKey=false)]
		public BonusFactStaff BonusFactStaff
		{
			get
			{
				return this._BonusFactStaff.Entity;
			}
			set
			{
				BonusFactStaff previousValue = this._BonusFactStaff.Entity;
				if (((previousValue != value) 
							|| (this._BonusFactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusFactStaff.Entity = null;
						previousValue.Bonus = null;
					}
					this._BonusFactStaff.Entity = value;
					if ((value != null))
					{
						value.Bonus = this;
					}
					this.SendPropertyChanged("BonusFactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_BonusHistory", Storage="_BonusHistories", ThisKey="id", OtherKey="idBonus")]
		public EntitySet<BonusHistory> BonusHistories
		{
			get
			{
				return this._BonusHistories;
			}
			set
			{
				this._BonusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BonusType_Bonus", Storage="_BonusType", ThisKey="idBonusType", OtherKey="id", IsForeignKey=true)]
		public BonusType BonusType
		{
			get
			{
				return this._BonusType.Entity;
			}
			set
			{
				BonusType previousValue = this._BonusType.Entity;
				if (((previousValue != value) 
							|| (this._BonusType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BonusType.Entity = null;
						previousValue.Bonus.Remove(this);
					}
					this._BonusType.Entity = value;
					if ((value != null))
					{
						value.Bonus.Add(this);
						this._idBonusType = value.id;
					}
					else
					{
						this._idBonusType = default(int);
					}
					this.SendPropertyChanged("BonusType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_Bonus", Storage="_Prikaz", ThisKey="idEndPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.Bonus.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.Bonus.Add(this);
						this._idEndPrikaz = value.id;
					}
					else
					{
						this._idEndPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_Bonus1", Storage="_Prikaz1", ThisKey="idIntermediateEndPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz1
		{
			get
			{
				return this._Prikaz1.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz1.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz1.Entity = null;
						previousValue.Bonus1.Remove(this);
					}
					this._Prikaz1.Entity = value;
					if ((value != null))
					{
						value.Bonus1.Add(this);
						this._idIntermediateEndPrikaz = value.id;
					}
					else
					{
						this._idIntermediateEndPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonusHistories(BonusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Bonus = this;
		}
		
		private void detach_BonusHistories(BonusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Bonus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanStaff")]
	public partial class PlanStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDepartment;
		
		private int _idPost;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _IdWorkShedule;
		
		private EntitySet<PlanStaffSalary> _PlanStaffSalaries;
		
		private EntitySet<BonusPlanStaff> _BonusPlanStaffs;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntitySet<Dep> _Deps;
		
		private EntitySet<PlanStaffHistory> _PlanStaffHistories;
		
		private EntityRef<Dep> _Dep;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<WorkShedule> _WorkShedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OnidEndPrikazChanging(System.Nullable<int> value);
    partial void OnidEndPrikazChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIdWorkSheduleChanging(int value);
    partial void OnIdWorkSheduleChanged();
    #endregion
		
		public PlanStaff()
		{
			this._PlanStaffSalaries = new EntitySet<PlanStaffSalary>(new Action<PlanStaffSalary>(this.attach_PlanStaffSalaries), new Action<PlanStaffSalary>(this.detach_PlanStaffSalaries));
			this._BonusPlanStaffs = new EntitySet<BonusPlanStaff>(new Action<BonusPlanStaff>(this.attach_BonusPlanStaffs), new Action<BonusPlanStaff>(this.detach_BonusPlanStaffs));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._Deps = new EntitySet<Dep>(new Action<Dep>(this.attach_Deps), new Action<Dep>(this.detach_Deps));
			this._PlanStaffHistories = new EntitySet<PlanStaffHistory>(new Action<PlanStaffHistory>(this.attach_PlanStaffHistories), new Action<PlanStaffHistory>(this.detach_PlanStaffHistories));
			this._Dep = default(EntityRef<Dep>);
			this._Post = default(EntityRef<Post>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._WorkShedule = default(EntityRef<WorkShedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEndPrikazChanging(value);
					this.SendPropertyChanging();
					this._idEndPrikaz = value;
					this.SendPropertyChanged("idEndPrikaz");
					this.OnidEndPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWorkShedule", DbType="Int NOT NULL")]
		public int IdWorkShedule
		{
			get
			{
				return this._IdWorkShedule;
			}
			set
			{
				if ((this._IdWorkShedule != value))
				{
					if (this._WorkShedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdWorkSheduleChanging(value);
					this.SendPropertyChanging();
					this._IdWorkShedule = value;
					this.SendPropertyChanged("IdWorkShedule");
					this.OnIdWorkSheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_PlanStaffSalary", Storage="_PlanStaffSalaries", ThisKey="id", OtherKey="idPlanStaff")]
		public EntitySet<PlanStaffSalary> PlanStaffSalaries
		{
			get
			{
				return this._PlanStaffSalaries;
			}
			set
			{
				this._PlanStaffSalaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_BonusPlanStaff", Storage="_BonusPlanStaffs", ThisKey="id", OtherKey="idPlanStaff")]
		public EntitySet<BonusPlanStaff> BonusPlanStaffs
		{
			get
			{
				return this._BonusPlanStaffs;
			}
			set
			{
				this._BonusPlanStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idPlanStaff")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_Dep", Storage="_Deps", ThisKey="id", OtherKey="idManagerPlanStaff")]
		public EntitySet<Dep> Deps
		{
			get
			{
				return this._Deps;
			}
			set
			{
				this._Deps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_PlanStaffHistory", Storage="_PlanStaffHistories", ThisKey="id", OtherKey="idPlanStaff")]
		public EntitySet<PlanStaffHistory> PlanStaffHistories
		{
			get
			{
				return this._PlanStaffHistories;
			}
			set
			{
				this._PlanStaffHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_PlanStaff", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.PlanStaffs.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.PlanStaffs.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PlanStaff", Storage="_Post", ThisKey="idPost", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PlanStaffs.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PlanStaffs.Add(this);
						this._idPost = value.id;
					}
					else
					{
						this._idPost = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PlanStaff", Storage="_Prikaz", ThisKey="idEndPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.PlanStaffs.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.PlanStaffs.Add(this);
						this._idEndPrikaz = value.id;
					}
					else
					{
						this._idEndPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkShedule_PlanStaff", Storage="_WorkShedule", ThisKey="IdWorkShedule", OtherKey="id", IsForeignKey=true)]
		public WorkShedule WorkShedule
		{
			get
			{
				return this._WorkShedule.Entity;
			}
			set
			{
				WorkShedule previousValue = this._WorkShedule.Entity;
				if (((previousValue != value) 
							|| (this._WorkShedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkShedule.Entity = null;
						previousValue.PlanStaffs.Remove(this);
					}
					this._WorkShedule.Entity = value;
					if ((value != null))
					{
						value.PlanStaffs.Add(this);
						this._IdWorkShedule = value.id;
					}
					else
					{
						this._IdWorkShedule = default(int);
					}
					this.SendPropertyChanged("WorkShedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlanStaffSalaries(PlanStaffSalary entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_PlanStaffSalaries(PlanStaffSalary entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
		
		private void attach_BonusPlanStaffs(BonusPlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_BonusPlanStaffs(BonusPlanStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
		
		private void attach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_Deps(Dep entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
		
		private void attach_PlanStaffHistories(PlanStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = this;
		}
		
		private void detach_PlanStaffHistories(PlanStaffHistory entity)
		{
			this.SendPropertyChanging();
			entity.PlanStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanStaffHistory")]
	public partial class PlanStaffHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPlanStaff;
		
		private int _idBeginPrikaz;
		
		private System.DateTime _DateBegin;
		
		private decimal _StaffCount;
		
		private int _idFinancingSource;
		
		private EntityRef<FinancingSource> _FinancingSource;
		
		private EntityRef<PlanStaff> _PlanStaff;
		
		private EntityRef<Prikaz> _Prikaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPlanStaffChanging(int value);
    partial void OnidPlanStaffChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnStaffCountChanging(decimal value);
    partial void OnStaffCountChanged();
    partial void OnidFinancingSourceChanging(int value);
    partial void OnidFinancingSourceChanged();
    #endregion
		
		public PlanStaffHistory()
		{
			this._FinancingSource = default(EntityRef<FinancingSource>);
			this._PlanStaff = default(EntityRef<PlanStaff>);
			this._Prikaz = default(EntityRef<Prikaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int NOT NULL")]
		public int idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					if (this._PlanStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlanStaffChanging(value);
					this.SendPropertyChanging();
					this._idPlanStaff = value;
					this.SendPropertyChanged("idPlanStaff");
					this.OnidPlanStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(8,2) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this.OnStaffCountChanging(value);
					this.SendPropertyChanging();
					this._StaffCount = value;
					this.SendPropertyChanged("StaffCount");
					this.OnStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFinancingSource", DbType="Int NOT NULL")]
		public int idFinancingSource
		{
			get
			{
				return this._idFinancingSource;
			}
			set
			{
				if ((this._idFinancingSource != value))
				{
					if (this._FinancingSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFinancingSourceChanging(value);
					this.SendPropertyChanging();
					this._idFinancingSource = value;
					this.SendPropertyChanged("idFinancingSource");
					this.OnidFinancingSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancingSource_PlanStaffHistory", Storage="_FinancingSource", ThisKey="idFinancingSource", OtherKey="id", IsForeignKey=true)]
		public FinancingSource FinancingSource
		{
			get
			{
				return this._FinancingSource.Entity;
			}
			set
			{
				FinancingSource previousValue = this._FinancingSource.Entity;
				if (((previousValue != value) 
							|| (this._FinancingSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancingSource.Entity = null;
						previousValue.PlanStaffHistories.Remove(this);
					}
					this._FinancingSource.Entity = value;
					if ((value != null))
					{
						value.PlanStaffHistories.Add(this);
						this._idFinancingSource = value.id;
					}
					else
					{
						this._idFinancingSource = default(int);
					}
					this.SendPropertyChanged("FinancingSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanStaff_PlanStaffHistory", Storage="_PlanStaff", ThisKey="idPlanStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PlanStaff PlanStaff
		{
			get
			{
				return this._PlanStaff.Entity;
			}
			set
			{
				PlanStaff previousValue = this._PlanStaff.Entity;
				if (((previousValue != value) 
							|| (this._PlanStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanStaff.Entity = null;
						previousValue.PlanStaffHistories.Remove(this);
					}
					this._PlanStaff.Entity = value;
					if ((value != null))
					{
						value.PlanStaffHistories.Add(this);
						this._idPlanStaff = value.id;
					}
					else
					{
						this._idPlanStaff = default(int);
					}
					this.SendPropertyChanged("PlanStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_PlanStaffHistory", Storage="_Prikaz", ThisKey="idBeginPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.PlanStaffHistories.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.PlanStaffHistories.Add(this);
						this._idBeginPrikaz = value.id;
					}
					else
					{
						this._idBeginPrikaz = default(int);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OK_Otpusk")]
	public partial class OK_Otpusk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idOtpusk;
		
		private int _idFactStaff;
		
		private int _idOtpuskVid;
		
		private int _idOtpuskPrikaz;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<int> _CountDay;
		
		private int _CountDayFND;
		
		private string _OtpPeriodWork;
		
		private System.Nullable<int> _idFactStaffPrikaz;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<OK_Otpuskvid> _OK_Otpuskvid;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<FactStaffPrikaz> _FactStaffPrikaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidOtpuskChanging(int value);
    partial void OnidOtpuskChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnidOtpuskVidChanging(int value);
    partial void OnidOtpuskVidChanged();
    partial void OnidOtpuskPrikazChanging(int value);
    partial void OnidOtpuskPrikazChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnCountDayChanging(System.Nullable<int> value);
    partial void OnCountDayChanged();
    partial void OnCountDayFNDChanging(int value);
    partial void OnCountDayFNDChanged();
    partial void OnOtpPeriodWorkChanging(string value);
    partial void OnOtpPeriodWorkChanged();
    partial void OnidFactStaffPrikazChanging(System.Nullable<int> value);
    partial void OnidFactStaffPrikazChanged();
    #endregion
		
		public OK_Otpusk()
		{
			this._FactStaff = default(EntityRef<FactStaff>);
			this._OK_Otpuskvid = default(EntityRef<OK_Otpuskvid>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._FactStaffPrikaz = default(EntityRef<FactStaffPrikaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpusk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idOtpusk
		{
			get
			{
				return this._idOtpusk;
			}
			set
			{
				if ((this._idOtpusk != value))
				{
					this.OnidOtpuskChanging(value);
					this.SendPropertyChanging();
					this._idOtpusk = value;
					this.SendPropertyChanged("idOtpusk");
					this.OnidOtpuskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpuskVid", DbType="Int NOT NULL")]
		public int idOtpuskVid
		{
			get
			{
				return this._idOtpuskVid;
			}
			set
			{
				if ((this._idOtpuskVid != value))
				{
					if (this._OK_Otpuskvid.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOtpuskVidChanging(value);
					this.SendPropertyChanging();
					this._idOtpuskVid = value;
					this.SendPropertyChanged("idOtpuskVid");
					this.OnidOtpuskVidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpuskPrikaz", DbType="Int NOT NULL")]
		public int idOtpuskPrikaz
		{
			get
			{
				return this._idOtpuskPrikaz;
			}
			set
			{
				if ((this._idOtpuskPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOtpuskPrikazChanging(value);
					this.SendPropertyChanging();
					this._idOtpuskPrikaz = value;
					this.SendPropertyChanged("idOtpuskPrikaz");
					this.OnidOtpuskPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDay", DbType="Int")]
		public System.Nullable<int> CountDay
		{
			get
			{
				return this._CountDay;
			}
			set
			{
				if ((this._CountDay != value))
				{
					this.OnCountDayChanging(value);
					this.SendPropertyChanging();
					this._CountDay = value;
					this.SendPropertyChanged("CountDay");
					this.OnCountDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDayFND", DbType="Int NOT NULL")]
		public int CountDayFND
		{
			get
			{
				return this._CountDayFND;
			}
			set
			{
				if ((this._CountDayFND != value))
				{
					this.OnCountDayFNDChanging(value);
					this.SendPropertyChanging();
					this._CountDayFND = value;
					this.SendPropertyChanged("CountDayFND");
					this.OnCountDayFNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtpPeriodWork", DbType="VarChar(255)")]
		public string OtpPeriodWork
		{
			get
			{
				return this._OtpPeriodWork;
			}
			set
			{
				if ((this._OtpPeriodWork != value))
				{
					this.OnOtpPeriodWorkChanging(value);
					this.SendPropertyChanging();
					this._OtpPeriodWork = value;
					this.SendPropertyChanged("OtpPeriodWork");
					this.OnOtpPeriodWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaffPrikaz", DbType="Int")]
		public System.Nullable<int> idFactStaffPrikaz
		{
			get
			{
				return this._idFactStaffPrikaz;
			}
			set
			{
				if ((this._idFactStaffPrikaz != value))
				{
					if (this._FactStaffPrikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffPrikazChanging(value);
					this.SendPropertyChanging();
					this._idFactStaffPrikaz = value;
					this.SendPropertyChanged("idFactStaffPrikaz");
					this.OnidFactStaffPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_OK_Otpusk", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.OK_Otpusks.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusks.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OK_Otpuskvid_OK_Otpusk", Storage="_OK_Otpuskvid", ThisKey="idOtpuskVid", OtherKey="idotpuskvid", IsForeignKey=true)]
		public OK_Otpuskvid OK_Otpuskvid
		{
			get
			{
				return this._OK_Otpuskvid.Entity;
			}
			set
			{
				OK_Otpuskvid previousValue = this._OK_Otpuskvid.Entity;
				if (((previousValue != value) 
							|| (this._OK_Otpuskvid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OK_Otpuskvid.Entity = null;
						previousValue.OK_Otpusks.Remove(this);
					}
					this._OK_Otpuskvid.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusks.Add(this);
						this._idOtpuskVid = value.idotpuskvid;
					}
					else
					{
						this._idOtpuskVid = default(int);
					}
					this.SendPropertyChanged("OK_Otpuskvid");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_OK_Otpusk", Storage="_Prikaz", ThisKey="idOtpuskPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.OK_Otpusks.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusks.Add(this);
						this._idOtpuskPrikaz = value.id;
					}
					else
					{
						this._idOtpuskPrikaz = default(int);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffPrikaz_OK_Otpusk", Storage="_FactStaffPrikaz", ThisKey="idFactStaffPrikaz", OtherKey="id", IsForeignKey=true)]
		public FactStaffPrikaz FactStaffPrikaz
		{
			get
			{
				return this._FactStaffPrikaz.Entity;
			}
			set
			{
				FactStaffPrikaz previousValue = this._FactStaffPrikaz.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffPrikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffPrikaz.Entity = null;
						previousValue.OK_Otpusks.Remove(this);
					}
					this._FactStaffPrikaz.Entity = value;
					if ((value != null))
					{
						value.OK_Otpusks.Add(this);
						this._idFactStaffPrikaz = value.id;
					}
					else
					{
						this._idFactStaffPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("FactStaffPrikaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactStaffPrikaz")]
	public partial class FactStaffPrikaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPrikaz;
		
		private int _idFactStaff;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<int> _idMainFactStaffPrikaz;
		
		private EntitySet<OK_Otpusk> _OK_Otpusks;
		
		private EntitySet<FactStaffPrikaz> _FactStaffPrikazs;
		
		private EntitySet<BusinessTrip> _BusinessTrips;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<FactStaffPrikaz> _FactStaffPrikaz1;
		
		private EntityRef<Prikaz> _Prikaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPrikazChanging(int value);
    partial void OnidPrikazChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnidMainFactStaffPrikazChanging(System.Nullable<int> value);
    partial void OnidMainFactStaffPrikazChanged();
    #endregion
		
		public FactStaffPrikaz()
		{
			this._OK_Otpusks = new EntitySet<OK_Otpusk>(new Action<OK_Otpusk>(this.attach_OK_Otpusks), new Action<OK_Otpusk>(this.detach_OK_Otpusks));
			this._FactStaffPrikazs = new EntitySet<FactStaffPrikaz>(new Action<FactStaffPrikaz>(this.attach_FactStaffPrikazs), new Action<FactStaffPrikaz>(this.detach_FactStaffPrikazs));
			this._BusinessTrips = new EntitySet<BusinessTrip>(new Action<BusinessTrip>(this.attach_BusinessTrips), new Action<BusinessTrip>(this.detach_BusinessTrips));
			this._FactStaff = default(EntityRef<FactStaff>);
			this._FactStaffPrikaz1 = default(EntityRef<FactStaffPrikaz>);
			this._Prikaz = default(EntityRef<Prikaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrikaz", DbType="Int NOT NULL")]
		public int idPrikaz
		{
			get
			{
				return this._idPrikaz;
			}
			set
			{
				if ((this._idPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrikazChanging(value);
					this.SendPropertyChanging();
					this._idPrikaz = value;
					this.SendPropertyChanged("idPrikaz");
					this.OnidPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMainFactStaffPrikaz", DbType="Int")]
		public System.Nullable<int> idMainFactStaffPrikaz
		{
			get
			{
				return this._idMainFactStaffPrikaz;
			}
			set
			{
				if ((this._idMainFactStaffPrikaz != value))
				{
					if (this._FactStaffPrikaz1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMainFactStaffPrikazChanging(value);
					this.SendPropertyChanging();
					this._idMainFactStaffPrikaz = value;
					this.SendPropertyChanged("idMainFactStaffPrikaz");
					this.OnidMainFactStaffPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffPrikaz_OK_Otpusk", Storage="_OK_Otpusks", ThisKey="id", OtherKey="idFactStaffPrikaz")]
		public EntitySet<OK_Otpusk> OK_Otpusks
		{
			get
			{
				return this._OK_Otpusks;
			}
			set
			{
				this._OK_Otpusks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffPrikaz_FactStaffPrikaz", Storage="_FactStaffPrikazs", ThisKey="id", OtherKey="idMainFactStaffPrikaz")]
		public EntitySet<FactStaffPrikaz> FactStaffPrikazs
		{
			get
			{
				return this._FactStaffPrikazs;
			}
			set
			{
				this._FactStaffPrikazs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffPrikaz_BusinessTrip", Storage="_BusinessTrips", ThisKey="id", OtherKey="idFactStaffPrikaz")]
		public EntitySet<BusinessTrip> BusinessTrips
		{
			get
			{
				return this._BusinessTrips;
			}
			set
			{
				this._BusinessTrips.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_FactStaffPrikaz", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true)]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.FactStaffPrikazs.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.FactStaffPrikazs.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffPrikaz_FactStaffPrikaz", Storage="_FactStaffPrikaz1", ThisKey="idMainFactStaffPrikaz", OtherKey="id", IsForeignKey=true)]
		public FactStaffPrikaz FactStaffPrikaz1
		{
			get
			{
				return this._FactStaffPrikaz1.Entity;
			}
			set
			{
				FactStaffPrikaz previousValue = this._FactStaffPrikaz1.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffPrikaz1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffPrikaz1.Entity = null;
						previousValue.FactStaffPrikazs.Remove(this);
					}
					this._FactStaffPrikaz1.Entity = value;
					if ((value != null))
					{
						value.FactStaffPrikazs.Add(this);
						this._idMainFactStaffPrikaz = value.id;
					}
					else
					{
						this._idMainFactStaffPrikaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("FactStaffPrikaz1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_FactStaffPrikaz", Storage="_Prikaz", ThisKey="idPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.FactStaffPrikazs.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.FactStaffPrikazs.Add(this);
						this._idPrikaz = value.id;
					}
					else
					{
						this._idPrikaz = default(int);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffPrikaz = this;
		}
		
		private void detach_OK_Otpusks(OK_Otpusk entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffPrikaz = null;
		}
		
		private void attach_FactStaffPrikazs(FactStaffPrikaz entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffPrikaz1 = this;
		}
		
		private void detach_FactStaffPrikazs(FactStaffPrikaz entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffPrikaz1 = null;
		}
		
		private void attach_BusinessTrips(BusinessTrip entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffPrikaz = this;
		}
		
		private void detach_BusinessTrips(BusinessTrip entity)
		{
			this.SendPropertyChanging();
			entity.FactStaffPrikaz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessTrip")]
	public partial class BusinessTrip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idFactStaffPrikaz;
		
		private string _TripTargetPlace;
		
		private EntitySet<BusinessTripRegionType> _BusinessTripRegionTypes;
		
		private EntityRef<FactStaffPrikaz> _FactStaffPrikaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidFactStaffPrikazChanging(int value);
    partial void OnidFactStaffPrikazChanged();
    partial void OnTripTargetPlaceChanging(string value);
    partial void OnTripTargetPlaceChanged();
    #endregion
		
		public BusinessTrip()
		{
			this._BusinessTripRegionTypes = new EntitySet<BusinessTripRegionType>(new Action<BusinessTripRegionType>(this.attach_BusinessTripRegionTypes), new Action<BusinessTripRegionType>(this.detach_BusinessTripRegionTypes));
			this._FactStaffPrikaz = default(EntityRef<FactStaffPrikaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaffPrikaz", DbType="Int NOT NULL")]
		public int idFactStaffPrikaz
		{
			get
			{
				return this._idFactStaffPrikaz;
			}
			set
			{
				if ((this._idFactStaffPrikaz != value))
				{
					if (this._FactStaffPrikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffPrikazChanging(value);
					this.SendPropertyChanging();
					this._idFactStaffPrikaz = value;
					this.SendPropertyChanged("idFactStaffPrikaz");
					this.OnidFactStaffPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripTargetPlace", DbType="VarChar(MAX)")]
		public string TripTargetPlace
		{
			get
			{
				return this._TripTargetPlace;
			}
			set
			{
				if ((this._TripTargetPlace != value))
				{
					this.OnTripTargetPlaceChanging(value);
					this.SendPropertyChanging();
					this._TripTargetPlace = value;
					this.SendPropertyChanged("TripTargetPlace");
					this.OnTripTargetPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessTrip_BusinessTripRegionType", Storage="_BusinessTripRegionTypes", ThisKey="id", OtherKey="idBusinessTrip")]
		public EntitySet<BusinessTripRegionType> BusinessTripRegionTypes
		{
			get
			{
				return this._BusinessTripRegionTypes;
			}
			set
			{
				this._BusinessTripRegionTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaffPrikaz_BusinessTrip", Storage="_FactStaffPrikaz", ThisKey="idFactStaffPrikaz", OtherKey="id", IsForeignKey=true)]
		public FactStaffPrikaz FactStaffPrikaz
		{
			get
			{
				return this._FactStaffPrikaz.Entity;
			}
			set
			{
				FactStaffPrikaz previousValue = this._FactStaffPrikaz.Entity;
				if (((previousValue != value) 
							|| (this._FactStaffPrikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaffPrikaz.Entity = null;
						previousValue.BusinessTrips.Remove(this);
					}
					this._FactStaffPrikaz.Entity = value;
					if ((value != null))
					{
						value.BusinessTrips.Add(this);
						this._idFactStaffPrikaz = value.id;
					}
					else
					{
						this._idFactStaffPrikaz = default(int);
					}
					this.SendPropertyChanged("FactStaffPrikaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessTripRegionTypes(BusinessTripRegionType entity)
		{
			this.SendPropertyChanging();
			entity.BusinessTrip = this;
		}
		
		private void detach_BusinessTripRegionTypes(BusinessTripRegionType entity)
		{
			this.SendPropertyChanging();
			entity.BusinessTrip = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessTripRegionType")]
	public partial class BusinessTripRegionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRegionType;
		
		private int _idBusinessTrip;
		
		private System.DateTime _DateBegin;
		
		private System.DateTime _DateEnd;
		
		private EntityRef<BusinessTrip> _BusinessTrip;
		
		private EntityRef<RegionType> _RegionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRegionTypeChanging(int value);
    partial void OnidRegionTypeChanged();
    partial void OnidBusinessTripChanging(int value);
    partial void OnidBusinessTripChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    #endregion
		
		public BusinessTripRegionType()
		{
			this._BusinessTrip = default(EntityRef<BusinessTrip>);
			this._RegionType = default(EntityRef<RegionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegionType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRegionType
		{
			get
			{
				return this._idRegionType;
			}
			set
			{
				if ((this._idRegionType != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRegionTypeChanging(value);
					this.SendPropertyChanging();
					this._idRegionType = value;
					this.SendPropertyChanged("idRegionType");
					this.OnidRegionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBusinessTrip", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idBusinessTrip
		{
			get
			{
				return this._idBusinessTrip;
			}
			set
			{
				if ((this._idBusinessTrip != value))
				{
					if (this._BusinessTrip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBusinessTripChanging(value);
					this.SendPropertyChanging();
					this._idBusinessTrip = value;
					this.SendPropertyChanged("idBusinessTrip");
					this.OnidBusinessTripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessTrip_BusinessTripRegionType", Storage="_BusinessTrip", ThisKey="idBusinessTrip", OtherKey="id", IsForeignKey=true)]
		public BusinessTrip BusinessTrip
		{
			get
			{
				return this._BusinessTrip.Entity;
			}
			set
			{
				BusinessTrip previousValue = this._BusinessTrip.Entity;
				if (((previousValue != value) 
							|| (this._BusinessTrip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessTrip.Entity = null;
						previousValue.BusinessTripRegionTypes.Remove(this);
					}
					this._BusinessTrip.Entity = value;
					if ((value != null))
					{
						value.BusinessTripRegionTypes.Add(this);
						this._idBusinessTrip = value.id;
					}
					else
					{
						this._idBusinessTrip = default(int);
					}
					this.SendPropertyChanged("BusinessTrip");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_BusinessTripRegionType", Storage="_RegionType", ThisKey="idRegionType", OtherKey="id", IsForeignKey=true)]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.BusinessTripRegionTypes.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.BusinessTripRegionTypes.Add(this);
						this._idRegionType = value.id;
					}
					else
					{
						this._idRegionType = default(int);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _itab_n;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Otch;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthPlace;
		
		private bool _SexBit;
		
		private System.Nullable<int> _idGrazd;
		
		private System.Nullable<int> _idSemPol;
		
		private int _SeverKoeff;
		
		private int _RayonKoeff;
		
		private System.Guid _GUID;
		
		private System.Data.Linq.Binary _EmployeeSid;
		
		private string _EmployeeLogin;
		
		private bool _AllowBirthdate;
		
		private string _paspser;
		
		private string _paspnomer;
		
		private System.Nullable<System.DateTime> _paspdate;
		
		private string _paspkem;
		
		private string _inn;
		
		private string _ssgps;
		
		private string _medpolis;
		
		private string _EmployeeName;
		
		private System.Nullable<System.DateTime> _OtpReducedFareDateBegin;
		
		private string _EmployeeSmallName;
		
		private string _EmplHistSer;
		
		private string _EmplHistNumber;
		
		private System.Nullable<System.DateTime> _EmplHistDate;
		
		private EntitySet<EmployeeRank> _EmployeeRanks;
		
		private EntitySet<EmployeeDegree> _EmployeeDegrees;
		
		private EntitySet<FactStaff> _FactStaffs;
		
		private EntityRef<Grazd> _Grazd;
		
		private EntityRef<SemPol> _SemPol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitab_nChanging(string value);
    partial void Onitab_nChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOtchChanging(string value);
    partial void OnOtchChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnSexBitChanging(bool value);
    partial void OnSexBitChanged();
    partial void OnidGrazdChanging(System.Nullable<int> value);
    partial void OnidGrazdChanged();
    partial void OnidSemPolChanging(System.Nullable<int> value);
    partial void OnidSemPolChanged();
    partial void OnSeverKoeffChanging(int value);
    partial void OnSeverKoeffChanged();
    partial void OnRayonKoeffChanging(int value);
    partial void OnRayonKoeffChanged();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnEmployeeSidChanging(System.Data.Linq.Binary value);
    partial void OnEmployeeSidChanged();
    partial void OnEmployeeLoginChanging(string value);
    partial void OnEmployeeLoginChanged();
    partial void OnAllowBirthdateChanging(bool value);
    partial void OnAllowBirthdateChanged();
    partial void OnpaspserChanging(string value);
    partial void OnpaspserChanged();
    partial void OnpaspnomerChanging(string value);
    partial void OnpaspnomerChanged();
    partial void OnpaspdateChanging(System.Nullable<System.DateTime> value);
    partial void OnpaspdateChanged();
    partial void OnpaspkemChanging(string value);
    partial void OnpaspkemChanged();
    partial void OninnChanging(string value);
    partial void OninnChanged();
    partial void OnssgpsChanging(string value);
    partial void OnssgpsChanged();
    partial void OnmedpolisChanging(string value);
    partial void OnmedpolisChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnOtpReducedFareDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnOtpReducedFareDateBeginChanged();
    partial void OnEmployeeSmallNameChanging(string value);
    partial void OnEmployeeSmallNameChanged();
    partial void OnEmplHistSerChanging(string value);
    partial void OnEmplHistSerChanged();
    partial void OnEmplHistNumberChanging(string value);
    partial void OnEmplHistNumberChanged();
    partial void OnEmplHistDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmplHistDateChanged();
    #endregion
		
		public Employee()
		{
			this._EmployeeRanks = new EntitySet<EmployeeRank>(new Action<EmployeeRank>(this.attach_EmployeeRanks), new Action<EmployeeRank>(this.detach_EmployeeRanks));
			this._EmployeeDegrees = new EntitySet<EmployeeDegree>(new Action<EmployeeDegree>(this.attach_EmployeeDegrees), new Action<EmployeeDegree>(this.detach_EmployeeDegrees));
			this._FactStaffs = new EntitySet<FactStaff>(new Action<FactStaff>(this.attach_FactStaffs), new Action<FactStaff>(this.detach_FactStaffs));
			this._Grazd = default(EntityRef<Grazd>);
			this._SemPol = default(EntityRef<SemPol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="VarChar(50)")]
		public string itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otch", DbType="VarChar(50)")]
		public string Otch
		{
			get
			{
				return this._Otch;
			}
			set
			{
				if ((this._Otch != value))
				{
					this.OnOtchChanging(value);
					this.SendPropertyChanging();
					this._Otch = value;
					this.SendPropertyChanged("Otch");
					this.OnOtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(200)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexBit", DbType="Bit NOT NULL")]
		public bool SexBit
		{
			get
			{
				return this._SexBit;
			}
			set
			{
				if ((this._SexBit != value))
				{
					this.OnSexBitChanging(value);
					this.SendPropertyChanging();
					this._SexBit = value;
					this.SendPropertyChanged("SexBit");
					this.OnSexBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrazd", DbType="Int")]
		public System.Nullable<int> idGrazd
		{
			get
			{
				return this._idGrazd;
			}
			set
			{
				if ((this._idGrazd != value))
				{
					if (this._Grazd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrazdChanging(value);
					this.SendPropertyChanging();
					this._idGrazd = value;
					this.SendPropertyChanged("idGrazd");
					this.OnidGrazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSemPol", DbType="Int")]
		public System.Nullable<int> idSemPol
		{
			get
			{
				return this._idSemPol;
			}
			set
			{
				if ((this._idSemPol != value))
				{
					if (this._SemPol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSemPolChanging(value);
					this.SendPropertyChanging();
					this._idSemPol = value;
					this.SendPropertyChanged("idSemPol");
					this.OnidSemPolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int NOT NULL")]
		public int SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this.OnSeverKoeffChanging(value);
					this.SendPropertyChanging();
					this._SeverKoeff = value;
					this.SendPropertyChanged("SeverKoeff");
					this.OnSeverKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int NOT NULL")]
		public int RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this.OnRayonKoeffChanging(value);
					this.SendPropertyChanging();
					this._RayonKoeff = value;
					this.SendPropertyChanged("RayonKoeff");
					this.OnRayonKoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSid", DbType="VarBinary(85)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EmployeeSid
		{
			get
			{
				return this._EmployeeSid;
			}
			set
			{
				if ((this._EmployeeSid != value))
				{
					this.OnEmployeeSidChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSid = value;
					this.SendPropertyChanged("EmployeeSid");
					this.OnEmployeeSidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLogin", DbType="NVarChar(128)")]
		public string EmployeeLogin
		{
			get
			{
				return this._EmployeeLogin;
			}
			set
			{
				if ((this._EmployeeLogin != value))
				{
					this.OnEmployeeLoginChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLogin = value;
					this.SendPropertyChanged("EmployeeLogin");
					this.OnEmployeeLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBirthdate", DbType="Bit NOT NULL")]
		public bool AllowBirthdate
		{
			get
			{
				return this._AllowBirthdate;
			}
			set
			{
				if ((this._AllowBirthdate != value))
				{
					this.OnAllowBirthdateChanging(value);
					this.SendPropertyChanging();
					this._AllowBirthdate = value;
					this.SendPropertyChanged("AllowBirthdate");
					this.OnAllowBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspser", DbType="VarChar(255)")]
		public string paspser
		{
			get
			{
				return this._paspser;
			}
			set
			{
				if ((this._paspser != value))
				{
					this.OnpaspserChanging(value);
					this.SendPropertyChanging();
					this._paspser = value;
					this.SendPropertyChanged("paspser");
					this.OnpaspserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspnomer", DbType="VarChar(255)")]
		public string paspnomer
		{
			get
			{
				return this._paspnomer;
			}
			set
			{
				if ((this._paspnomer != value))
				{
					this.OnpaspnomerChanging(value);
					this.SendPropertyChanging();
					this._paspnomer = value;
					this.SendPropertyChanged("paspnomer");
					this.OnpaspnomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> paspdate
		{
			get
			{
				return this._paspdate;
			}
			set
			{
				if ((this._paspdate != value))
				{
					this.OnpaspdateChanging(value);
					this.SendPropertyChanging();
					this._paspdate = value;
					this.SendPropertyChanged("paspdate");
					this.OnpaspdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paspkem", DbType="VarChar(255)")]
		public string paspkem
		{
			get
			{
				return this._paspkem;
			}
			set
			{
				if ((this._paspkem != value))
				{
					this.OnpaspkemChanging(value);
					this.SendPropertyChanging();
					this._paspkem = value;
					this.SendPropertyChanged("paspkem");
					this.OnpaspkemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inn", DbType="VarChar(255)")]
		public string inn
		{
			get
			{
				return this._inn;
			}
			set
			{
				if ((this._inn != value))
				{
					this.OninnChanging(value);
					this.SendPropertyChanging();
					this._inn = value;
					this.SendPropertyChanged("inn");
					this.OninnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ssgps", DbType="VarChar(255)")]
		public string ssgps
		{
			get
			{
				return this._ssgps;
			}
			set
			{
				if ((this._ssgps != value))
				{
					this.OnssgpsChanging(value);
					this.SendPropertyChanging();
					this._ssgps = value;
					this.SendPropertyChanged("ssgps");
					this.OnssgpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medpolis", DbType="VarChar(50)")]
		public string medpolis
		{
			get
			{
				return this._medpolis;
			}
			set
			{
				if ((this._medpolis != value))
				{
					this.OnmedpolisChanging(value);
					this.SendPropertyChanging();
					this._medpolis = value;
					this.SendPropertyChanged("medpolis");
					this.OnmedpolisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", AutoSync=AutoSync.Always, DbType="VarChar(152)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtpReducedFareDateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> OtpReducedFareDateBegin
		{
			get
			{
				return this._OtpReducedFareDateBegin;
			}
			set
			{
				if ((this._OtpReducedFareDateBegin != value))
				{
					this.OnOtpReducedFareDateBeginChanging(value);
					this.SendPropertyChanging();
					this._OtpReducedFareDateBegin = value;
					this.SendPropertyChanged("OtpReducedFareDateBegin");
					this.OnOtpReducedFareDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSmallName", AutoSync=AutoSync.Always, DbType="VarChar(56)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeSmallName
		{
			get
			{
				return this._EmployeeSmallName;
			}
			set
			{
				if ((this._EmployeeSmallName != value))
				{
					this.OnEmployeeSmallNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSmallName = value;
					this.SendPropertyChanged("EmployeeSmallName");
					this.OnEmployeeSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplHistSer", DbType="VarChar(10)")]
		public string EmplHistSer
		{
			get
			{
				return this._EmplHistSer;
			}
			set
			{
				if ((this._EmplHistSer != value))
				{
					this.OnEmplHistSerChanging(value);
					this.SendPropertyChanging();
					this._EmplHistSer = value;
					this.SendPropertyChanged("EmplHistSer");
					this.OnEmplHistSerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplHistNumber", DbType="VarChar(20)")]
		public string EmplHistNumber
		{
			get
			{
				return this._EmplHistNumber;
			}
			set
			{
				if ((this._EmplHistNumber != value))
				{
					this.OnEmplHistNumberChanging(value);
					this.SendPropertyChanging();
					this._EmplHistNumber = value;
					this.SendPropertyChanged("EmplHistNumber");
					this.OnEmplHistNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplHistDate", DbType="Date")]
		public System.Nullable<System.DateTime> EmplHistDate
		{
			get
			{
				return this._EmplHistDate;
			}
			set
			{
				if ((this._EmplHistDate != value))
				{
					this.OnEmplHistDateChanging(value);
					this.SendPropertyChanging();
					this._EmplHistDate = value;
					this.SendPropertyChanged("EmplHistDate");
					this.OnEmplHistDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeRank", Storage="_EmployeeRanks", ThisKey="id", OtherKey="idEmployee")]
		public EntitySet<EmployeeRank> EmployeeRanks
		{
			get
			{
				return this._EmployeeRanks;
			}
			set
			{
				this._EmployeeRanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDegree", Storage="_EmployeeDegrees", ThisKey="id", OtherKey="idEmployee")]
		public EntitySet<EmployeeDegree> EmployeeDegrees
		{
			get
			{
				return this._EmployeeDegrees;
			}
			set
			{
				this._EmployeeDegrees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FactStaff", Storage="_FactStaffs", ThisKey="id", OtherKey="idEmployee")]
		public EntitySet<FactStaff> FactStaffs
		{
			get
			{
				return this._FactStaffs;
			}
			set
			{
				this._FactStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grazd_Employee", Storage="_Grazd", ThisKey="idGrazd", OtherKey="id", IsForeignKey=true)]
		public Grazd Grazd
		{
			get
			{
				return this._Grazd.Entity;
			}
			set
			{
				Grazd previousValue = this._Grazd.Entity;
				if (((previousValue != value) 
							|| (this._Grazd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grazd.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Grazd.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._idGrazd = value.id;
					}
					else
					{
						this._idGrazd = default(Nullable<int>);
					}
					this.SendPropertyChanged("Grazd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SemPol_Employee", Storage="_SemPol", ThisKey="idSemPol", OtherKey="id", IsForeignKey=true)]
		public SemPol SemPol
		{
			get
			{
				return this._SemPol.Entity;
			}
			set
			{
				SemPol previousValue = this._SemPol.Entity;
				if (((previousValue != value) 
							|| (this._SemPol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SemPol.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._SemPol.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._idSemPol = value.id;
					}
					else
					{
						this._idSemPol = default(Nullable<int>);
					}
					this.SendPropertyChanged("SemPol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeRanks(EmployeeRank entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeRanks(EmployeeRank entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeDegrees(EmployeeDegree entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeDegrees(EmployeeDegree entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_FactStaffs(FactStaff entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentHistory")]
	public partial class DepartmentHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idDepartment;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private int _idBeginPrikaz;
		
		private System.DateTime _DateBegin;
		
		private string _DepartmentName;
		
		private string _DepartmentSmallName;
		
		private System.Nullable<int> _idRegionType;
		
		private string _Address;
		
		private EntityRef<Dep> _Dep;
		
		private EntityRef<Dep> _Dep1;
		
		private EntityRef<Prikaz> _Prikaz;
		
		private EntityRef<RegionType> _RegionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidDepartmentChanging(int value);
    partial void OnidDepartmentChanged();
    partial void OnidManagerDepartmentChanging(System.Nullable<int> value);
    partial void OnidManagerDepartmentChanged();
    partial void OnidBeginPrikazChanging(int value);
    partial void OnidBeginPrikazChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDepartmentSmallNameChanging(string value);
    partial void OnDepartmentSmallNameChanged();
    partial void OnidRegionTypeChanging(System.Nullable<int> value);
    partial void OnidRegionTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public DepartmentHistory()
		{
			this._Dep = default(EntityRef<Dep>);
			this._Dep1 = default(EntityRef<Dep>);
			this._Prikaz = default(EntityRef<Prikaz>);
			this._RegionType = default(EntityRef<RegionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idDepartment = value;
					this.SendPropertyChanged("idDepartment");
					this.OnidDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					if (this._Dep1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidManagerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._idManagerDepartment = value;
					this.SendPropertyChanged("idManagerDepartment");
					this.OnidManagerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					if (this._Prikaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBeginPrikazChanging(value);
					this.SendPropertyChanging();
					this._idBeginPrikaz = value;
					this.SendPropertyChanged("idBeginPrikaz");
					this.OnidBeginPrikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentSmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentSmallName
		{
			get
			{
				return this._DepartmentSmallName;
			}
			set
			{
				if ((this._DepartmentSmallName != value))
				{
					this.OnDepartmentSmallNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentSmallName = value;
					this.SendPropertyChanged("DepartmentSmallName");
					this.OnDepartmentSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegionType", DbType="Int")]
		public System.Nullable<int> idRegionType
		{
			get
			{
				return this._idRegionType;
			}
			set
			{
				if ((this._idRegionType != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRegionTypeChanging(value);
					this.SendPropertyChanging();
					this._idRegionType = value;
					this.SendPropertyChanged("idRegionType");
					this.OnidRegionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentHistory", Storage="_Dep", ThisKey="idDepartment", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.DepartmentHistories.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.DepartmentHistories.Add(this);
						this._idDepartment = value.id;
					}
					else
					{
						this._idDepartment = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_DepartmentHistory1", Storage="_Dep1", ThisKey="idManagerDepartment", OtherKey="id", IsForeignKey=true)]
		public Dep Dep1
		{
			get
			{
				return this._Dep1.Entity;
			}
			set
			{
				Dep previousValue = this._Dep1.Entity;
				if (((previousValue != value) 
							|| (this._Dep1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep1.Entity = null;
						previousValue.DepartmentHistories1.Remove(this);
					}
					this._Dep1.Entity = value;
					if ((value != null))
					{
						value.DepartmentHistories1.Add(this);
						this._idManagerDepartment = value.id;
					}
					else
					{
						this._idManagerDepartment = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dep1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prikaz_DepartmentHistory", Storage="_Prikaz", ThisKey="idBeginPrikaz", OtherKey="id", IsForeignKey=true)]
		public Prikaz Prikaz
		{
			get
			{
				return this._Prikaz.Entity;
			}
			set
			{
				Prikaz previousValue = this._Prikaz.Entity;
				if (((previousValue != value) 
							|| (this._Prikaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prikaz.Entity = null;
						previousValue.DepartmentHistories.Remove(this);
					}
					this._Prikaz.Entity = value;
					if ((value != null))
					{
						value.DepartmentHistories.Add(this);
						this._idBeginPrikaz = value.id;
					}
					else
					{
						this._idBeginPrikaz = default(int);
					}
					this.SendPropertyChanged("Prikaz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_DepartmentHistory", Storage="_RegionType", ThisKey="idRegionType", OtherKey="id", IsForeignKey=true)]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.DepartmentHistories.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.DepartmentHistories.Add(this);
						this._idRegionType = value.id;
					}
					else
					{
						this._idRegionType = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department
	{
		
		private int _id;
		
		private string _DepartmentName;
		
		private string _DepartmentSmallName;
		
		private System.Nullable<int> _idDepartmentType;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private System.Nullable<int> _KadrID;
		
		private System.DateTime _dateCreate;
		
		private System.Nullable<System.DateTime> _dateExit;
		
		private System.Nullable<int> _idManagerPlanStaff;
		
		private int _idBeginPrikaz;
		
		private System.Nullable<int> _idEndPrikaz;
		
		private System.Nullable<int> _SeverKoeff;
		
		private System.Nullable<int> _RayonKoeff;
		
		private System.Guid _DepartmentGUID;
		
		private System.Nullable<int> _idFundingCenter;
		
		private string _DepartmentIndex;
		
		private string _DepPhoneNumber;
		
		private bool _HasTimeSheet;
		
		private System.Nullable<int> _idOKVED;
		
		private string _Address;
		
		private System.Nullable<int> _idRegionType;
		
		public Department()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentSmallName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentSmallName
		{
			get
			{
				return this._DepartmentSmallName;
			}
			set
			{
				if ((this._DepartmentSmallName != value))
				{
					this._DepartmentSmallName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartmentType", DbType="Int")]
		public System.Nullable<int> idDepartmentType
		{
			get
			{
				return this._idDepartmentType;
			}
			set
			{
				if ((this._idDepartmentType != value))
				{
					this._idDepartmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					this._idManagerDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KadrID", DbType="Int")]
		public System.Nullable<int> KadrID
		{
			get
			{
				return this._KadrID;
			}
			set
			{
				if ((this._KadrID != value))
				{
					this._KadrID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreate", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreate
		{
			get
			{
				return this._dateCreate;
			}
			set
			{
				if ((this._dateCreate != value))
				{
					this._dateCreate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateExit
		{
			get
			{
				return this._dateExit;
			}
			set
			{
				if ((this._dateExit != value))
				{
					this._dateExit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerPlanStaff", DbType="Int")]
		public System.Nullable<int> idManagerPlanStaff
		{
			get
			{
				return this._idManagerPlanStaff;
			}
			set
			{
				if ((this._idManagerPlanStaff != value))
				{
					this._idManagerPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBeginPrikaz", DbType="Int NOT NULL")]
		public int idBeginPrikaz
		{
			get
			{
				return this._idBeginPrikaz;
			}
			set
			{
				if ((this._idBeginPrikaz != value))
				{
					this._idBeginPrikaz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEndPrikaz", DbType="Int")]
		public System.Nullable<int> idEndPrikaz
		{
			get
			{
				return this._idEndPrikaz;
			}
			set
			{
				if ((this._idEndPrikaz != value))
				{
					this._idEndPrikaz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverKoeff", DbType="Int")]
		public System.Nullable<int> SeverKoeff
		{
			get
			{
				return this._SeverKoeff;
			}
			set
			{
				if ((this._SeverKoeff != value))
				{
					this._SeverKoeff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RayonKoeff", DbType="Int")]
		public System.Nullable<int> RayonKoeff
		{
			get
			{
				return this._RayonKoeff;
			}
			set
			{
				if ((this._RayonKoeff != value))
				{
					this._RayonKoeff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentGUID
		{
			get
			{
				return this._DepartmentGUID;
			}
			set
			{
				if ((this._DepartmentGUID != value))
				{
					this._DepartmentGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFundingCenter", DbType="Int")]
		public System.Nullable<int> idFundingCenter
		{
			get
			{
				return this._idFundingCenter;
			}
			set
			{
				if ((this._idFundingCenter != value))
				{
					this._idFundingCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentIndex", DbType="VarChar(10)")]
		public string DepartmentIndex
		{
			get
			{
				return this._DepartmentIndex;
			}
			set
			{
				if ((this._DepartmentIndex != value))
				{
					this._DepartmentIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepPhoneNumber", DbType="VarChar(20)")]
		public string DepPhoneNumber
		{
			get
			{
				return this._DepPhoneNumber;
			}
			set
			{
				if ((this._DepPhoneNumber != value))
				{
					this._DepPhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTimeSheet", DbType="Bit NOT NULL")]
		public bool HasTimeSheet
		{
			get
			{
				return this._HasTimeSheet;
			}
			set
			{
				if ((this._HasTimeSheet != value))
				{
					this._HasTimeSheet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOKVED", DbType="Int")]
		public System.Nullable<int> idOKVED
		{
			get
			{
				return this._idOKVED;
			}
			set
			{
				if ((this._idOKVED != value))
				{
					this._idOKVED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegionType", DbType="Int")]
		public System.Nullable<int> idRegionType
		{
			get
			{
				return this._idRegionType;
			}
			set
			{
				if ((this._idRegionType != value))
				{
					this._idRegionType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionType")]
	public partial class RegionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _RegionTypeName;
		
		private string _RegionTypeSmallName;
		
		private EntitySet<BusinessTripRegionType> _BusinessTripRegionTypes;
		
		private EntitySet<DepartmentHistory> _DepartmentHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRegionTypeNameChanging(string value);
    partial void OnRegionTypeNameChanged();
    partial void OnRegionTypeSmallNameChanging(string value);
    partial void OnRegionTypeSmallNameChanged();
    #endregion
		
		public RegionType()
		{
			this._BusinessTripRegionTypes = new EntitySet<BusinessTripRegionType>(new Action<BusinessTripRegionType>(this.attach_BusinessTripRegionTypes), new Action<BusinessTripRegionType>(this.detach_BusinessTripRegionTypes));
			this._DepartmentHistories = new EntitySet<DepartmentHistory>(new Action<DepartmentHistory>(this.attach_DepartmentHistories), new Action<DepartmentHistory>(this.detach_DepartmentHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionTypeName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string RegionTypeName
		{
			get
			{
				return this._RegionTypeName;
			}
			set
			{
				if ((this._RegionTypeName != value))
				{
					this.OnRegionTypeNameChanging(value);
					this.SendPropertyChanging();
					this._RegionTypeName = value;
					this.SendPropertyChanged("RegionTypeName");
					this.OnRegionTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionTypeSmallName", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string RegionTypeSmallName
		{
			get
			{
				return this._RegionTypeSmallName;
			}
			set
			{
				if ((this._RegionTypeSmallName != value))
				{
					this.OnRegionTypeSmallNameChanging(value);
					this.SendPropertyChanging();
					this._RegionTypeSmallName = value;
					this.SendPropertyChanged("RegionTypeSmallName");
					this.OnRegionTypeSmallNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_BusinessTripRegionType", Storage="_BusinessTripRegionTypes", ThisKey="id", OtherKey="idRegionType")]
		public EntitySet<BusinessTripRegionType> BusinessTripRegionTypes
		{
			get
			{
				return this._BusinessTripRegionTypes;
			}
			set
			{
				this._BusinessTripRegionTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_DepartmentHistory", Storage="_DepartmentHistories", ThisKey="id", OtherKey="idRegionType")]
		public EntitySet<DepartmentHistory> DepartmentHistories
		{
			get
			{
				return this._DepartmentHistories;
			}
			set
			{
				this._DepartmentHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessTripRegionTypes(BusinessTripRegionType entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_BusinessTripRegionTypes(BusinessTripRegionType entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
		
		private void attach_DepartmentHistories(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_DepartmentHistories(DepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheetFSWorkingDays")]
	public partial class TimeSheetFSWorkingDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTimeSheet;
		
		private int _idFactStaff;
		
		private double _WorkingDaysCount;
		
		private bool _IsClosed;
		
		private decimal _StaffCount;
		
		private EntityRef<FactStaff> _FactStaff;
		
		private EntityRef<TimeSheet> _TimeSheet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTimeSheetChanging(int value);
    partial void OnidTimeSheetChanged();
    partial void OnidFactStaffChanging(int value);
    partial void OnidFactStaffChanged();
    partial void OnWorkingDaysCountChanging(double value);
    partial void OnWorkingDaysCountChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnStaffCountChanging(decimal value);
    partial void OnStaffCountChanged();
    #endregion
		
		public TimeSheetFSWorkingDay()
		{
			this._FactStaff = default(EntityRef<FactStaff>);
			this._TimeSheet = default(EntityRef<TimeSheet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeSheet", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTimeSheet
		{
			get
			{
				return this._idTimeSheet;
			}
			set
			{
				if ((this._idTimeSheet != value))
				{
					if (this._TimeSheet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTimeSheetChanging(value);
					this.SendPropertyChanging();
					this._idTimeSheet = value;
					this.SendPropertyChanged("idTimeSheet");
					this.OnidTimeSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					if (this._FactStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactStaffChanging(value);
					this.SendPropertyChanging();
					this._idFactStaff = value;
					this.SendPropertyChanged("idFactStaff");
					this.OnidFactStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingDaysCount", DbType="Float NOT NULL")]
		public double WorkingDaysCount
		{
			get
			{
				return this._WorkingDaysCount;
			}
			set
			{
				if ((this._WorkingDaysCount != value))
				{
					this.OnWorkingDaysCountChanging(value);
					this.SendPropertyChanging();
					this._WorkingDaysCount = value;
					this.SendPropertyChanged("WorkingDaysCount");
					this.OnWorkingDaysCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(3,2) NOT NULL", IsPrimaryKey=true)]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this.OnStaffCountChanging(value);
					this.SendPropertyChanging();
					this._StaffCount = value;
					this.SendPropertyChanged("StaffCount");
					this.OnStaffCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactStaff_TimeSheetFSWorkingDay", Storage="_FactStaff", ThisKey="idFactStaff", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactStaff FactStaff
		{
			get
			{
				return this._FactStaff.Entity;
			}
			set
			{
				FactStaff previousValue = this._FactStaff.Entity;
				if (((previousValue != value) 
							|| (this._FactStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactStaff.Entity = null;
						previousValue.TimeSheetFSWorkingDays.Remove(this);
					}
					this._FactStaff.Entity = value;
					if ((value != null))
					{
						value.TimeSheetFSWorkingDays.Add(this);
						this._idFactStaff = value.id;
					}
					else
					{
						this._idFactStaff = default(int);
					}
					this.SendPropertyChanged("FactStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheet_TimeSheetFSWorkingDay", Storage="_TimeSheet", ThisKey="idTimeSheet", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TimeSheet TimeSheet
		{
			get
			{
				return this._TimeSheet.Entity;
			}
			set
			{
				TimeSheet previousValue = this._TimeSheet.Entity;
				if (((previousValue != value) 
							|| (this._TimeSheet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeSheet.Entity = null;
						previousValue.TimeSheetFSWorkingDays.Remove(this);
					}
					this._TimeSheet.Entity = value;
					if ((value != null))
					{
						value.TimeSheetFSWorkingDays.Add(this);
						this._idTimeSheet = value.id;
					}
					else
					{
						this._idTimeSheet = default(int);
					}
					this.SendPropertyChanged("TimeSheet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetFullSubDepartmentsResult
	{
		
		private System.Nullable<int> _idDepartment;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private System.Nullable<int> _idManagerPlanStaff;
		
		private System.Nullable<bool> _IsMain;
		
		private string _DepartmentName;
		
		private string _DepartmentSmallName;
		
		private string _DepartmentManagerName;
		
		private string _DepartmentManagerSmallName;
		
		private string _ManagerName;
		
		public GetFullSubDepartmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					this._idManagerDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerPlanStaff", DbType="Int")]
		public System.Nullable<int> idManagerPlanStaff
		{
			get
			{
				return this._idManagerPlanStaff;
			}
			set
			{
				if ((this._idManagerPlanStaff != value))
				{
					this._idManagerPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this._IsMain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(200)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentSmallName", DbType="VarChar(50)")]
		public string DepartmentSmallName
		{
			get
			{
				return this._DepartmentSmallName;
			}
			set
			{
				if ((this._DepartmentSmallName != value))
				{
					this._DepartmentSmallName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentManagerName", DbType="VarChar(200)")]
		public string DepartmentManagerName
		{
			get
			{
				return this._DepartmentManagerName;
			}
			set
			{
				if ((this._DepartmentManagerName != value))
				{
					this._DepartmentManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentManagerSmallName", DbType="VarChar(50)")]
		public string DepartmentManagerSmallName
		{
			get
			{
				return this._DepartmentManagerSmallName;
			}
			set
			{
				if ((this._DepartmentManagerSmallName != value))
				{
					this._DepartmentManagerSmallName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="VarChar(200)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
	}
	
	public partial class GetStaffErrorsByPeriodResult
	{
		
		private string _DepartmentName;
		
		private string _PostName;
		
		private System.Nullable<int> _idDepartment;
		
		private System.Nullable<int> _idPlanStaff;
		
		private System.Nullable<decimal> _BeginPlanStaffCount;
		
		private System.Nullable<decimal> _BeginFactStaffCount;
		
		private System.Nullable<decimal> _EndPlanStaffCount;
		
		private System.Nullable<decimal> _EndFactStaffCount;
		
		private string _FinancingSourceName;
		
		public GetStaffErrorsByPeriodResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(200)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostName", DbType="VarChar(150)")]
		public string PostName
		{
			get
			{
				return this._PostName;
			}
			set
			{
				if ((this._PostName != value))
				{
					this._PostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginPlanStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> BeginPlanStaffCount
		{
			get
			{
				return this._BeginPlanStaffCount;
			}
			set
			{
				if ((this._BeginPlanStaffCount != value))
				{
					this._BeginPlanStaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginFactStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> BeginFactStaffCount
		{
			get
			{
				return this._BeginFactStaffCount;
			}
			set
			{
				if ((this._BeginFactStaffCount != value))
				{
					this._BeginFactStaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPlanStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> EndPlanStaffCount
		{
			get
			{
				return this._EndPlanStaffCount;
			}
			set
			{
				if ((this._EndPlanStaffCount != value))
				{
					this._EndPlanStaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndFactStaffCount", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> EndFactStaffCount
		{
			get
			{
				return this._EndFactStaffCount;
			}
			set
			{
				if ((this._EndFactStaffCount != value))
				{
					this._EndFactStaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingSourceName", DbType="VarChar(50)")]
		public string FinancingSourceName
		{
			get
			{
				return this._FinancingSourceName;
			}
			set
			{
				if ((this._FinancingSourceName != value))
				{
					this._FinancingSourceName = value;
				}
			}
		}
	}
	
	public partial class GetSubDepartmentsWithPeriodResult
	{
		
		private System.Nullable<int> _idDepartment;
		
		private System.Nullable<int> _idManagerDepartment;
		
		private System.Nullable<bool> _IsMain;
		
		private string _DepartmentName;
		
		private string _DepartmentSmallName;
		
		private System.Nullable<int> _DepNumber;
		
		private string _DepTreeIndex;
		
		private System.Nullable<int> _idOKVED;
		
		private System.Nullable<int> _idFundingCenter;
		
		public GetSubDepartmentsWithPeriodResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idManagerDepartment", DbType="Int")]
		public System.Nullable<int> idManagerDepartment
		{
			get
			{
				return this._idManagerDepartment;
			}
			set
			{
				if ((this._idManagerDepartment != value))
				{
					this._idManagerDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this._IsMain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(500)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentSmallName", DbType="VarChar(50)")]
		public string DepartmentSmallName
		{
			get
			{
				return this._DepartmentSmallName;
			}
			set
			{
				if ((this._DepartmentSmallName != value))
				{
					this._DepartmentSmallName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepNumber", DbType="Int")]
		public System.Nullable<int> DepNumber
		{
			get
			{
				return this._DepNumber;
			}
			set
			{
				if ((this._DepNumber != value))
				{
					this._DepNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepTreeIndex", DbType="VarChar(30)")]
		public string DepTreeIndex
		{
			get
			{
				return this._DepTreeIndex;
			}
			set
			{
				if ((this._DepTreeIndex != value))
				{
					this._DepTreeIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOKVED", DbType="Int")]
		public System.Nullable<int> idOKVED
		{
			get
			{
				return this._idOKVED;
			}
			set
			{
				if ((this._idOKVED != value))
				{
					this._idOKVED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFundingCenter", DbType="Int")]
		public System.Nullable<int> idFundingCenter
		{
			get
			{
				return this._idFundingCenter;
			}
			set
			{
				if ((this._idFundingCenter != value))
				{
					this._idFundingCenter = value;
				}
			}
		}
	}
	
	public partial class GetBonusByBonusTypeForProlongResult
	{
		
		private System.Nullable<int> _idDepartment;
		
		private string _DepartmentName;
		
		private string _TypeWorkName;
		
		private string _PostName;
		
		private string _EmployeeName;
		
		private string _BonusLevel;
		
		private System.Nullable<decimal> _BonusCount;
		
		private System.Nullable<decimal> _StaffCount;
		
		private System.Nullable<int> _idFactStaff;
		
		private System.Nullable<int> _idPlanStaff;
		
		private string _PrikazBegin;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _CategoryName;
		
		private string _FinancingSourceName;
		
		private string _BonusFinancingSourceName;
		
		private System.Nullable<bool> _Prolong;
		
		private System.Nullable<int> _idBonus;
		
		public GetBonusByBonusTypeForProlongResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int")]
		public System.Nullable<int> idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(500)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeWorkName", DbType="VarChar(50)")]
		public string TypeWorkName
		{
			get
			{
				return this._TypeWorkName;
			}
			set
			{
				if ((this._TypeWorkName != value))
				{
					this._TypeWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostName", DbType="VarChar(150)")]
		public string PostName
		{
			get
			{
				return this._PostName;
			}
			set
			{
				if ((this._PostName != value))
				{
					this._PostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="VarChar(150)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusLevel", DbType="VarChar(50)")]
		public string BonusLevel
		{
			get
			{
				return this._BonusLevel;
			}
			set
			{
				if ((this._BonusLevel != value))
				{
					this._BonusLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusCount", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> BonusCount
		{
			get
			{
				return this._BonusCount;
			}
			set
			{
				if ((this._BonusCount != value))
				{
					this._BonusCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this._StaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int")]
		public System.Nullable<int> idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					this._idFactStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrikazBegin", DbType="VarChar(50)")]
		public string PrikazBegin
		{
			get
			{
				return this._PrikazBegin;
			}
			set
			{
				if ((this._PrikazBegin != value))
				{
					this._PrikazBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this._DateBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingSourceName", DbType="VarChar(50)")]
		public string FinancingSourceName
		{
			get
			{
				return this._FinancingSourceName;
			}
			set
			{
				if ((this._FinancingSourceName != value))
				{
					this._FinancingSourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusFinancingSourceName", DbType="VarChar(50)")]
		public string BonusFinancingSourceName
		{
			get
			{
				return this._BonusFinancingSourceName;
			}
			set
			{
				if ((this._BonusFinancingSourceName != value))
				{
					this._BonusFinancingSourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prolong", DbType="Bit")]
		public System.Nullable<bool> Prolong
		{
			get
			{
				return this._Prolong;
			}
			set
			{
				if ((this._Prolong != value))
				{
					this._Prolong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBonus", DbType="Int")]
		public System.Nullable<int> idBonus
		{
			get
			{
				return this._idBonus;
			}
			set
			{
				if ((this._idBonus != value))
				{
					this._idBonus = value;
				}
			}
		}
	}
	
	public partial class GetFactStaffForTimeSheetResult
	{
		
		private int _idFactStaff;
		
		private decimal _StaffCount;
		
		private int _idDepartment;
		
		private bool _IsReplacement;
		
		private System.Nullable<int> _idTypeWork;
		
		private System.Nullable<int> _idPost;
		
		private System.Nullable<int> _idPlanStaff;
		
		private System.Nullable<int> _idEmployee;
		
		private System.Nullable<int> _idFinancingSource;
		
		private System.Nullable<int> _idOKVED;
		
		private System.Nullable<bool> _isMain;
		
		private System.Nullable<double> _daysCount;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<System.DateTime> _OtpDateBegin;
		
		private System.Nullable<System.DateTime> _OtpDateEnd;
		
		private System.Nullable<int> _idOtpusk;
		
		public GetFactStaffForTimeSheetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFactStaff", DbType="Int NOT NULL")]
		public int idFactStaff
		{
			get
			{
				return this._idFactStaff;
			}
			set
			{
				if ((this._idFactStaff != value))
				{
					this._idFactStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCount", DbType="Decimal(4,2) NOT NULL")]
		public decimal StaffCount
		{
			get
			{
				return this._StaffCount;
			}
			set
			{
				if ((this._StaffCount != value))
				{
					this._StaffCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartment", DbType="Int NOT NULL")]
		public int idDepartment
		{
			get
			{
				return this._idDepartment;
			}
			set
			{
				if ((this._idDepartment != value))
				{
					this._idDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplacement", DbType="Bit NOT NULL")]
		public bool IsReplacement
		{
			get
			{
				return this._IsReplacement;
			}
			set
			{
				if ((this._IsReplacement != value))
				{
					this._IsReplacement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeWork", DbType="Int")]
		public System.Nullable<int> idTypeWork
		{
			get
			{
				return this._idTypeWork;
			}
			set
			{
				if ((this._idTypeWork != value))
				{
					this._idTypeWork = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int")]
		public System.Nullable<int> idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					this._idPost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPlanStaff", DbType="Int")]
		public System.Nullable<int> idPlanStaff
		{
			get
			{
				return this._idPlanStaff;
			}
			set
			{
				if ((this._idPlanStaff != value))
				{
					this._idPlanStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmployee", DbType="Int")]
		public System.Nullable<int> idEmployee
		{
			get
			{
				return this._idEmployee;
			}
			set
			{
				if ((this._idEmployee != value))
				{
					this._idEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFinancingSource", DbType="Int")]
		public System.Nullable<int> idFinancingSource
		{
			get
			{
				return this._idFinancingSource;
			}
			set
			{
				if ((this._idFinancingSource != value))
				{
					this._idFinancingSource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOKVED", DbType="Int")]
		public System.Nullable<int> idOKVED
		{
			get
			{
				return this._idOKVED;
			}
			set
			{
				if ((this._idOKVED != value))
				{
					this._idOKVED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMain", DbType="Bit")]
		public System.Nullable<bool> isMain
		{
			get
			{
				return this._isMain;
			}
			set
			{
				if ((this._isMain != value))
				{
					this._isMain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daysCount", DbType="Float")]
		public System.Nullable<double> daysCount
		{
			get
			{
				return this._daysCount;
			}
			set
			{
				if ((this._daysCount != value))
				{
					this._daysCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this._DateBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtpDateBegin", DbType="Date")]
		public System.Nullable<System.DateTime> OtpDateBegin
		{
			get
			{
				return this._OtpDateBegin;
			}
			set
			{
				if ((this._OtpDateBegin != value))
				{
					this._OtpDateBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtpDateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> OtpDateEnd
		{
			get
			{
				return this._OtpDateEnd;
			}
			set
			{
				if ((this._OtpDateEnd != value))
				{
					this._OtpDateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOtpusk", DbType="Int")]
		public System.Nullable<int> idOtpusk
		{
			get
			{
				return this._idOtpusk;
			}
			set
			{
				if ((this._idOtpusk != value))
				{
					this._idOtpusk = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
